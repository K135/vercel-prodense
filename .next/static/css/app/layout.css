/*!*********************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[13].oneOf[10].use[2]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[13].oneOf[10].use[3]!./src/styles/tailwind.css ***!
  \*********************************************************************************************************************************************************************************************************************************************************************/
/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-50: oklch(97.1% 0.013 17.38);
    --color-red-200: oklch(88.5% 0.062 18.334);
    --color-red-300: oklch(80.8% 0.114 19.571);
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-700: oklch(50.5% 0.213 27.518);
    --color-red-900: oklch(39.6% 0.141 25.723);
    --color-orange-50: oklch(98% 0.016 73.684);
    --color-orange-100: oklch(95.4% 0.038 75.164);
    --color-orange-200: oklch(90.1% 0.076 70.697);
    --color-orange-300: oklch(83.7% 0.128 66.29);
    --color-orange-400: oklch(75% 0.183 55.934);
    --color-orange-500: oklch(70.5% 0.213 47.604);
    --color-orange-600: oklch(64.6% 0.222 41.116);
    --color-orange-700: oklch(55.3% 0.195 38.402);
    --color-orange-900: oklch(40.8% 0.123 38.172);
    --color-amber-400: oklch(82.8% 0.189 84.429);
    --color-amber-500: oklch(76.9% 0.188 70.08);
    --color-amber-600: oklch(66.6% 0.179 58.318);
    --color-amber-700: oklch(55.5% 0.163 48.998);
    --color-amber-950: oklch(27.9% 0.077 45.635);
    --color-yellow-300: oklch(90.5% 0.182 98.111);
    --color-yellow-400: oklch(85.2% 0.199 91.936);
    --color-yellow-500: oklch(79.5% 0.184 86.047);
    --color-yellow-600: oklch(68.1% 0.162 75.834);
    --color-yellow-700: oklch(55.4% 0.135 66.442);
    --color-yellow-950: oklch(28.6% 0.066 53.813);
    --color-lime-300: oklch(89.7% 0.196 126.665);
    --color-lime-400: oklch(84.1% 0.238 128.85);
    --color-lime-600: oklch(64.8% 0.2 131.684);
    --color-lime-700: oklch(53.2% 0.157 131.589);
    --color-lime-950: oklch(27.4% 0.072 132.109);
    --color-green-50: oklch(98.2% 0.018 155.826);
    --color-green-100: oklch(96.2% 0.044 156.743);
    --color-green-400: oklch(79.2% 0.209 151.711);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-green-700: oklch(52.7% 0.154 150.069);
    --color-green-900: oklch(39.3% 0.095 152.535);
    --color-emerald-400: oklch(76.5% 0.177 163.223);
    --color-emerald-500: oklch(69.6% 0.17 162.48);
    --color-emerald-600: oklch(59.6% 0.145 163.225);
    --color-emerald-700: oklch(50.8% 0.118 165.612);
    --color-emerald-900: oklch(37.8% 0.077 168.94);
    --color-teal-300: oklch(85.5% 0.138 181.071);
    --color-teal-500: oklch(70.4% 0.14 182.503);
    --color-teal-600: oklch(60% 0.118 184.704);
    --color-teal-700: oklch(51.1% 0.096 186.391);
    --color-teal-900: oklch(38.6% 0.063 188.416);
    --color-cyan-300: oklch(86.5% 0.127 207.078);
    --color-cyan-400: oklch(78.9% 0.154 211.53);
    --color-cyan-500: oklch(71.5% 0.143 215.221);
    --color-cyan-700: oklch(52% 0.105 223.128);
    --color-cyan-950: oklch(30.2% 0.056 229.695);
    --color-sky-50: oklch(97.7% 0.013 236.62);
    --color-sky-300: oklch(82.8% 0.111 230.318);
    --color-sky-500: oklch(68.5% 0.169 237.323);
    --color-sky-600: oklch(58.8% 0.158 241.966);
    --color-sky-700: oklch(50% 0.134 242.749);
    --color-sky-900: oklch(39.1% 0.09 240.876);
    --color-blue-50: oklch(97% 0.014 254.604);
    --color-blue-100: oklch(93.2% 0.032 255.585);
    --color-blue-200: oklch(88.2% 0.059 254.128);
    --color-blue-300: oklch(80.9% 0.105 251.813);
    --color-blue-400: oklch(70.7% 0.165 254.624);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-blue-800: oklch(42.4% 0.199 265.638);
    --color-blue-900: oklch(37.9% 0.146 265.522);
    --color-indigo-100: oklch(93% 0.034 272.788);
    --color-indigo-200: oklch(87% 0.065 274.039);
    --color-indigo-300: oklch(78.5% 0.115 274.713);
    --color-indigo-400: oklch(67.3% 0.182 276.935);
    --color-indigo-500: oklch(58.5% 0.233 277.117);
    --color-indigo-600: oklch(51.1% 0.262 276.966);
    --color-indigo-700: oklch(45.7% 0.24 277.023);
    --color-indigo-900: oklch(35.9% 0.144 278.697);
    --color-violet-200: oklch(89.4% 0.057 293.283);
    --color-violet-300: oklch(81.1% 0.111 293.571);
    --color-violet-400: oklch(70.2% 0.183 293.541);
    --color-violet-500: oklch(60.6% 0.25 292.717);
    --color-violet-600: oklch(54.1% 0.281 293.009);
    --color-violet-700: oklch(49.1% 0.27 292.581);
    --color-violet-900: oklch(38% 0.189 293.745);
    --color-purple-200: oklch(90.2% 0.063 306.703);
    --color-purple-300: oklch(82.7% 0.119 306.383);
    --color-purple-400: oklch(71.4% 0.203 305.504);
    --color-purple-500: oklch(62.7% 0.265 303.9);
    --color-purple-600: oklch(55.8% 0.288 302.321);
    --color-purple-700: oklch(49.6% 0.265 301.924);
    --color-purple-900: oklch(38.1% 0.176 304.987);
    --color-fuchsia-200: oklch(90.3% 0.076 319.62);
    --color-fuchsia-300: oklch(83.3% 0.145 321.434);
    --color-fuchsia-400: oklch(74% 0.238 322.16);
    --color-fuchsia-500: oklch(66.7% 0.295 322.15);
    --color-fuchsia-600: oklch(59.1% 0.293 322.896);
    --color-fuchsia-700: oklch(51.8% 0.253 323.949);
    --color-fuchsia-900: oklch(40.1% 0.17 325.612);
    --color-pink-200: oklch(89.9% 0.061 343.231);
    --color-pink-300: oklch(82.3% 0.12 346.018);
    --color-pink-400: oklch(71.8% 0.202 349.761);
    --color-pink-500: oklch(65.6% 0.241 354.308);
    --color-pink-600: oklch(59.2% 0.249 0.584);
    --color-pink-700: oklch(52.5% 0.223 3.958);
    --color-pink-900: oklch(40.8% 0.153 2.432);
    --color-rose-200: oklch(89.2% 0.058 10.001);
    --color-rose-300: oklch(81% 0.117 11.638);
    --color-rose-400: oklch(71.2% 0.194 13.428);
    --color-rose-500: oklch(64.5% 0.246 16.439);
    --color-rose-600: oklch(58.6% 0.253 17.585);
    --color-rose-700: oklch(51.4% 0.222 16.935);
    --color-rose-900: oklch(41% 0.159 10.272);
    --color-slate-200: oklch(92.9% 0.013 255.508);
    --color-slate-700: oklch(37.2% 0.044 257.287);
    --color-slate-900: oklch(20.8% 0.042 265.755);
    --color-gray-50: oklch(98.5% 0.002 247.839);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-zinc-300: oklch(87.1% 0.006 286.286);
    --color-zinc-400: oklch(70.5% 0.015 286.067);
    --color-zinc-500: oklch(55.2% 0.016 285.938);
    --color-zinc-600: oklch(44.2% 0.017 285.786);
    --color-zinc-700: oklch(37% 0.013 285.805);
    --color-zinc-800: oklch(27.4% 0.006 286.033);
    --color-zinc-950: oklch(14.1% 0.005 285.823);
    --color-neutral-50: rgb(249, 250, 251);
    --color-neutral-100: rgb(243, 244, 246);
    --color-neutral-200: rgb(229, 231, 235);
    --color-neutral-300: rgb(209, 213, 219);
    --color-neutral-400: rgb(156, 163, 175);
    --color-neutral-500: rgb(107, 114, 128);
    --color-neutral-600: rgb(75, 85, 99);
    --color-neutral-700: rgb(55, 65, 81);
    --color-neutral-800: rgb(31, 41, 55);
    --color-neutral-900: rgb(17, 24, 39);
    --color-neutral-950: oklch(14.5% 0 0);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --breakpoint-md: 48rem;
    --breakpoint-xl: 80rem;
    --breakpoint-2xl: 96rem;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --container-6xl: 72rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --tracking-tight: -0.025em;
    --tracking-wide: 0.025em;
    --tracking-wider: 0.05em;
    --tracking-widest: 0.1em;
    --leading-tight: 1.25;
    --leading-normal: 1.5;
    --leading-relaxed: 1.625;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --radius-4xl: 2rem;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-ping: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    --blur-xs: 4px;
    --blur-sm: 8px;
    --blur-xl: 24px;
    --blur-2xl: 40px;
    --blur-3xl: 64px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-primary-50: rgb(240, 248, 255);
    --color-primary-100: rgb(219, 234, 254);
    --color-primary-200: rgb(191, 219, 254);
    --color-primary-300: rgb(147, 197, 253);
    --color-primary-400: rgb(96, 165, 250);
    --color-primary-500: rgb(4, 128, 234);
    --color-primary-600: rgb(3, 105, 192);
    --color-primary-700: rgb(3, 82, 150);
    --color-primary-800: rgb(2, 59, 108);
    --color-primary-900: rgb(2, 36, 66);
    --color-secondary-500: rgb(20, 184, 166);
    --color-secondary-600: rgb(13, 148, 136);
    --color-secondary-700: rgb(15, 118, 110);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .invisible {
    visibility: hidden;
  }
  .visible {
    visibility: visible;
  }
  .hero-search-form__field-before {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
    &::before {
      content: var(--tw-content);
      inset-inline-start: calc(var(--spacing) * -1);
    }
    &::before {
      content: var(--tw-content);
      top: calc(1/2 * 100%);
    }
    &::before {
      content: var(--tw-content);
      z-index: calc(10 * -1);
    }
    &::before {
      content: var(--tw-content);
      display: none;
    }
    &::before {
      content: var(--tw-content);
      height: calc(var(--spacing) * 9);
    }
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 2);
    }
    &::before {
      content: var(--tw-content);
      --tw-translate-y: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    &::before {
      content: var(--tw-content);
      background-color: var(--form-bg);
    }
    &[data-open] {
      &::before {
        content: var(--tw-content);
        display: block;
      }
    }
  }
  .hero-search-form__field-after {
    &::after {
      content: var(--tw-content);
      position: absolute;
    }
    &::after {
      content: var(--tw-content);
      inset-inline-end: calc(var(--spacing) * -1);
    }
    &::after {
      content: var(--tw-content);
      top: calc(1/2 * 100%);
    }
    &::after {
      content: var(--tw-content);
      z-index: calc(10 * -1);
    }
    &::after {
      content: var(--tw-content);
      display: none;
    }
    &::after {
      content: var(--tw-content);
      height: calc(var(--spacing) * 9);
    }
    &::after {
      content: var(--tw-content);
      width: calc(var(--spacing) * 2);
    }
    &::after {
      content: var(--tw-content);
      --tw-translate-y: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    &::after {
      content: var(--tw-content);
      background-color: var(--form-bg);
    }
    &[data-open] {
      &::after {
        content: var(--tw-content);
        display: block;
      }
    }
  }
  .aspect-w-1 {
    position: relative;
    padding-bottom: calc(var(--tw-aspect-h) / var(--tw-aspect-w) * 100%);
    --tw-aspect-w: 1;
    > * {
      position: absolute;
      height: 100%;
      width: 100%;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
    }
  }
  .aspect-w-3 {
    position: relative;
    padding-bottom: calc(var(--tw-aspect-h) / var(--tw-aspect-w) * 100%);
    --tw-aspect-w: 3;
    > * {
      position: absolute;
      height: 100%;
      width: 100%;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
    }
  }
  .aspect-w-4 {
    position: relative;
    padding-bottom: calc(var(--tw-aspect-h) / var(--tw-aspect-w) * 100%);
    --tw-aspect-w: 4;
    > * {
      position: absolute;
      height: 100%;
      width: 100%;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
    }
  }
  .aspect-w-5 {
    position: relative;
    padding-bottom: calc(var(--tw-aspect-h) / var(--tw-aspect-w) * 100%);
    --tw-aspect-w: 5;
    > * {
      position: absolute;
      height: 100%;
      width: 100%;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
    }
  }
  .aspect-w-6 {
    position: relative;
    padding-bottom: calc(var(--tw-aspect-h) / var(--tw-aspect-w) * 100%);
    --tw-aspect-w: 6;
    > * {
      position: absolute;
      height: 100%;
      width: 100%;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
    }
  }
  .aspect-w-7 {
    position: relative;
    padding-bottom: calc(var(--tw-aspect-h) / var(--tw-aspect-w) * 100%);
    --tw-aspect-w: 7;
    > * {
      position: absolute;
      height: 100%;
      width: 100%;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
    }
  }
  .aspect-w-12 {
    position: relative;
    padding-bottom: calc(var(--tw-aspect-h) / var(--tw-aspect-w) * 100%);
    --tw-aspect-w: 12;
    > * {
      position: absolute;
      height: 100%;
      width: 100%;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
    }
  }
  .aspect-w-16 {
    position: relative;
    padding-bottom: calc(var(--tw-aspect-h) / var(--tw-aspect-w) * 100%);
    --tw-aspect-w: 16;
    > * {
      position: absolute;
      height: 100%;
      width: 100%;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
    }
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .inset-1 {
    inset: calc(var(--spacing) * 1);
  }
  .inset-5 {
    inset: calc(var(--spacing) * 5);
  }
  .inset-x-0 {
    inset-inline: calc(var(--spacing) * 0);
  }
  .inset-x-2 {
    inset-inline: calc(var(--spacing) * 2);
  }
  .inset-x-3 {
    inset-inline: calc(var(--spacing) * 3);
  }
  .inset-y-0 {
    inset-block: calc(var(--spacing) * 0);
  }
  .-start-3 {
    inset-inline-start: calc(var(--spacing) * -3);
  }
  .-start-5 {
    inset-inline-start: calc(var(--spacing) * -5);
  }
  .start-0 {
    inset-inline-start: calc(var(--spacing) * 0);
  }
  .start-1\/2 {
    inset-inline-start: calc(1/2 * 100%);
  }
  .start-3 {
    inset-inline-start: calc(var(--spacing) * 3);
  }
  .start-4 {
    inset-inline-start: calc(var(--spacing) * 4);
  }
  .start-5 {
    inset-inline-start: calc(var(--spacing) * 5);
  }
  .start-auto {
    inset-inline-start: auto;
  }
  .-end-2 {
    inset-inline-end: calc(var(--spacing) * -2);
  }
  .-end-3 {
    inset-inline-end: calc(var(--spacing) * -3);
  }
  .-end-4 {
    inset-inline-end: calc(var(--spacing) * -4);
  }
  .-end-px {
    inset-inline-end: -1px;
  }
  .end-0 {
    inset-inline-end: calc(var(--spacing) * 0);
  }
  .end-1 {
    inset-inline-end: calc(var(--spacing) * 1);
  }
  .end-1\.5 {
    inset-inline-end: calc(var(--spacing) * 1.5);
  }
  .end-2 {
    inset-inline-end: calc(var(--spacing) * 2);
  }
  .end-2\.5 {
    inset-inline-end: calc(var(--spacing) * 2.5);
  }
  .end-3 {
    inset-inline-end: calc(var(--spacing) * 3);
  }
  .end-5 {
    inset-inline-end: calc(var(--spacing) * 5);
  }
  .end-20 {
    inset-inline-end: calc(var(--spacing) * 20);
  }
  .-top-1 {
    top: calc(var(--spacing) * -1);
  }
  .-top-2 {
    top: calc(var(--spacing) * -2);
  }
  .-top-4 {
    top: calc(var(--spacing) * -4);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1 {
    top: calc(var(--spacing) * 1);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .top-1\/3 {
    top: calc(1/3 * 100%);
  }
  .top-1\/4 {
    top: calc(1/4 * 100%);
  }
  .top-2 {
    top: calc(var(--spacing) * 2);
  }
  .top-2\.5 {
    top: calc(var(--spacing) * 2.5);
  }
  .top-3 {
    top: calc(var(--spacing) * 3);
  }
  .top-4 {
    top: calc(var(--spacing) * 4);
  }
  .top-5 {
    top: calc(var(--spacing) * 5);
  }
  .top-6 {
    top: calc(var(--spacing) * 6);
  }
  .top-9 {
    top: calc(var(--spacing) * 9);
  }
  .top-10 {
    top: calc(var(--spacing) * 10);
  }
  .top-16 {
    top: calc(var(--spacing) * 16);
  }
  .top-20 {
    top: calc(var(--spacing) * 20);
  }
  .top-32 {
    top: calc(var(--spacing) * 32);
  }
  .top-\[10\%\] {
    top: 10%;
  }
  .top-\[40\%\] {
    top: 40%;
  }
  .top-\[calc\(50\%-1rem\)\] {
    top: calc(50% - 1rem);
  }
  .top-full {
    top: 100%;
  }
  .-right-0 {
    right: calc(var(--spacing) * -0);
  }
  .-right-0\.5 {
    right: calc(var(--spacing) * -0.5);
  }
  .-right-2 {
    right: calc(var(--spacing) * -2);
  }
  .-right-10 {
    right: calc(var(--spacing) * -10);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-1\/3 {
    right: calc(1/3 * 100%);
  }
  .right-1\/4 {
    right: calc(1/4 * 100%);
  }
  .right-2\.5 {
    right: calc(var(--spacing) * 2.5);
  }
  .right-3 {
    right: calc(var(--spacing) * 3);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .right-5 {
    right: calc(var(--spacing) * 5);
  }
  .right-6 {
    right: calc(var(--spacing) * 6);
  }
  .right-10 {
    right: calc(var(--spacing) * 10);
  }
  .right-16 {
    right: calc(var(--spacing) * 16);
  }
  .right-\[140px\] {
    right: 140px;
  }
  .right-full {
    right: 100%;
  }
  .-bottom-2\.5 {
    bottom: calc(var(--spacing) * -2.5);
  }
  .-bottom-4 {
    bottom: calc(var(--spacing) * -4);
  }
  .-bottom-10 {
    bottom: calc(var(--spacing) * -10);
  }
  .-bottom-px {
    bottom: -1px;
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-1\/3 {
    bottom: calc(1/3 * 100%);
  }
  .bottom-2 {
    bottom: calc(var(--spacing) * 2);
  }
  .bottom-3 {
    bottom: calc(var(--spacing) * 3);
  }
  .bottom-4 {
    bottom: calc(var(--spacing) * 4);
  }
  .bottom-5 {
    bottom: calc(var(--spacing) * 5);
  }
  .bottom-6 {
    bottom: calc(var(--spacing) * 6);
  }
  .bottom-8 {
    bottom: calc(var(--spacing) * 8);
  }
  .bottom-10 {
    bottom: calc(var(--spacing) * 10);
  }
  .bottom-16 {
    bottom: calc(var(--spacing) * 16);
  }
  .bottom-20 {
    bottom: calc(var(--spacing) * 20);
  }
  .bottom-32 {
    bottom: calc(var(--spacing) * 32);
  }
  .bottom-\[80px\] {
    bottom: 80px;
  }
  .bottom-\[100px\] {
    bottom: 100px;
  }
  .-left-12 {
    left: calc(var(--spacing) * -12);
  }
  .-left-20 {
    left: calc(var(--spacing) * -20);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .left-1\/4 {
    left: calc(1/4 * 100%);
  }
  .left-2 {
    left: calc(var(--spacing) * 2);
  }
  .left-3 {
    left: calc(var(--spacing) * 3);
  }
  .left-4 {
    left: calc(var(--spacing) * 4);
  }
  .left-6 {
    left: calc(var(--spacing) * 6);
  }
  .left-10 {
    left: calc(var(--spacing) * 10);
  }
  .left-16 {
    left: calc(var(--spacing) * 16);
  }
  .left-\[140px\] {
    left: 140px;
  }
  .left-full {
    left: 100%;
  }
  .isolate {
    isolation: isolate;
  }
  .-z-10 {
    z-index: calc(10 * -1);
  }
  .-z-20 {
    z-index: calc(20 * -1);
  }
  .z-0 {
    z-index: 0;
  }
  .z-1 {
    z-index: 1;
  }
  .z-10 {
    z-index: 10;
  }
  .z-11 {
    z-index: 11;
  }
  .z-20 {
    z-index: 20;
  }
  .z-30 {
    z-index: 30;
  }
  .z-40 {
    z-index: 40;
  }
  .z-50 {
    z-index: 50;
  }
  .z-\[1\] {
    z-index: 1;
  }
  .z-max {
    z-index: 999;
  }
  .col-span-2 {
    grid-column: span 2 / span 2;
  }
  .col-span-12 {
    grid-column: span 12 / span 12;
  }
  .col-start-1 {
    grid-column-start: 1;
  }
  .col-start-2 {
    grid-column-start: 2;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .-m-1\.5 {
    margin: calc(var(--spacing) * -1.5);
  }
  .-m-2\.5 {
    margin: calc(var(--spacing) * -2.5);
  }
  .-m-3 {
    margin: calc(var(--spacing) * -3);
  }
  .-m-4 {
    margin: calc(var(--spacing) * -4);
  }
  .container {
    margin-inline: auto;
    padding-inline: 1rem;
    @media screen and (min-width: 1536px) {
      padding-inline: 8rem;
    }
  }
  .-mx-\(--gutter\) {
    margin-inline: calc(var(--gutter) * -1);
  }
  .-mx-0\.5 {
    margin-inline: calc(var(--spacing) * -0.5);
  }
  .-mx-1 {
    margin-inline: calc(var(--spacing) * -1);
  }
  .-mx-2 {
    margin-inline: calc(var(--spacing) * -2);
  }
  .-mx-3 {
    margin-inline: calc(var(--spacing) * -3);
  }
  .mx-1 {
    margin-inline: calc(var(--spacing) * 1);
  }
  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }
  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }
  .mx-5 {
    margin-inline: calc(var(--spacing) * 5);
  }
  .mx-10 {
    margin-inline: calc(var(--spacing) * 10);
  }
  .mx-\[6px\] {
    margin-inline: 6px;
  }
  .mx-auto {
    margin-inline: auto;
  }
  .-my-3 {
    margin-block: calc(var(--spacing) * -3);
  }
  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }
  .my-3 {
    margin-block: calc(var(--spacing) * 3);
  }
  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }
  .my-5 {
    margin-block: calc(var(--spacing) * 5);
  }
  .my-7 {
    margin-block: calc(var(--spacing) * 7);
  }
  .my-8 {
    margin-block: calc(var(--spacing) * 8);
  }
  .my-10 {
    margin-block: calc(var(--spacing) * 10);
  }
  .my-14 {
    margin-block: calc(var(--spacing) * 14);
  }
  .my-16 {
    margin-block: calc(var(--spacing) * 16);
  }
  .my-20 {
    margin-block: calc(var(--spacing) * 20);
  }
  .menuIsNew {
    > a::after {
      content: 'New!';
      display: inline-block;
      padding: 0 5px;
      line-height: 15px;
      border-radius: 4px;
      background-color: #f35656;
      color: #fff;
      font-size: 10px;
      margin-inline-start: 6px;
    }
  }
  .ms-1 {
    margin-inline-start: calc(var(--spacing) * 1);
  }
  .ms-1\.5 {
    margin-inline-start: calc(var(--spacing) * 1.5);
  }
  .ms-2 {
    margin-inline-start: calc(var(--spacing) * 2);
  }
  .ms-2\.5 {
    margin-inline-start: calc(var(--spacing) * 2.5);
  }
  .ms-3 {
    margin-inline-start: calc(var(--spacing) * 3);
  }
  .ms-4 {
    margin-inline-start: calc(var(--spacing) * 4);
  }
  .ms-auto {
    margin-inline-start: auto;
  }
  .-me-1 {
    margin-inline-end: calc(var(--spacing) * -1);
  }
  .me-1 {
    margin-inline-end: calc(var(--spacing) * 1);
  }
  .me-1\.5 {
    margin-inline-end: calc(var(--spacing) * 1.5);
  }
  .me-2 {
    margin-inline-end: calc(var(--spacing) * 2);
  }
  .me-4 {
    margin-inline-end: calc(var(--spacing) * 4);
  }
  .prose {
    color: var(--tw-prose-body);
    max-width: 65ch;
    :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-lead);
      font-size: 1.25em;
      line-height: 1.6;
      margin-top: 1.2em;
      margin-bottom: 1.2em;
    }
    :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-links);
      text-decoration: underline;
      font-weight: 500;
    }
    :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-bold);
      font-weight: 600;
    }
    :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: decimal;
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
    }
    :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-alpha;
    }
    :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-alpha;
    }
    :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-alpha;
    }
    :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-alpha;
    }
    :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-roman;
    }
    :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-roman;
    }
    :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-roman;
    }
    :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-roman;
    }
    :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: decimal;
    }
    :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: disc;
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
      font-weight: 400;
      color: var(--tw-prose-counters);
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
      color: var(--tw-prose-bullets);
    }
    :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      margin-top: 1.25em;
    }
    :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-color: var(--tw-prose-hr);
      border-top-width: 1;
      margin-top: 3em;
      margin-bottom: 3em;
    }
    :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 500;
      font-style: italic;
      color: var(--tw-prose-quotes);
      border-inline-start-width: 0.25rem;
      border-inline-start-color: var(--tw-prose-quote-borders);
      quotes: "\201C""\201D""\2018""\2019";
      margin-top: 1.6em;
      margin-bottom: 1.6em;
      padding-inline-start: 1em;
    }
    :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: open-quote;
    }
    :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: close-quote;
    }
    :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 800;
      font-size: 2.25em;
      margin-top: 0;
      margin-bottom: 0.8888889em;
      line-height: 1.1111111;
    }
    :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 900;
      color: inherit;
    }
    :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 700;
      font-size: 1.5em;
      margin-top: 2em;
      margin-bottom: 1em;
      line-height: 1.3333333;
    }
    :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 800;
      color: inherit;
    }
    :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      font-size: 1.25em;
      margin-top: 1.6em;
      margin-bottom: 0.6em;
      line-height: 1.6;
    }
    :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 700;
      color: inherit;
    }
    :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      margin-top: 1.5em;
      margin-bottom: 0.5em;
      line-height: 1.5;
    }
    :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 700;
      color: inherit;
    }
    :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      display: block;
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 500;
      font-family: inherit;
      color: var(--tw-prose-kbd);
      box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
      font-size: 0.875em;
      border-radius: 0.3125rem;
      padding-top: 0.1875em;
      padding-inline-end: 0.375em;
      padding-bottom: 0.1875em;
      padding-inline-start: 0.375em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-code);
      font-weight: 600;
      font-size: 0.875em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: "`";
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: "`";
    }
    :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
      font-size: 0.875em;
    }
    :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
      font-size: 0.9em;
    }
    :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-pre-code);
      background-color: var(--tw-prose-pre-bg);
      overflow-x: auto;
      font-weight: 400;
      font-size: 0.875em;
      line-height: 1.7142857;
      margin-top: 1.7142857em;
      margin-bottom: 1.7142857em;
      border-radius: 0.375rem;
      padding-top: 0.8571429em;
      padding-inline-end: 1.1428571em;
      padding-bottom: 0.8571429em;
      padding-inline-start: 1.1428571em;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      background-color: transparent;
      border-width: 0;
      border-radius: 0;
      padding: 0;
      font-weight: inherit;
      color: inherit;
      font-size: inherit;
      font-family: inherit;
      line-height: inherit;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: none;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: none;
    }
    :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      width: 100%;
      table-layout: auto;
      margin-top: 2em;
      margin-bottom: 2em;
      font-size: 0.875em;
      line-height: 1.7142857;
    }
    :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-th-borders);
    }
    :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      vertical-align: bottom;
      padding-inline-end: 0.5714286em;
      padding-bottom: 0.5714286em;
      padding-inline-start: 0.5714286em;
    }
    :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-td-borders);
    }
    :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 0;
    }
    :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      vertical-align: baseline;
    }
    :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-top-width: 1px;
      border-top-color: var(--tw-prose-th-borders);
    }
    :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      vertical-align: top;
    }
    :where(th, td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      text-align: start;
    }
    :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-captions);
      font-size: 0.875em;
      line-height: 1.4285714;
      margin-top: 0.8571429em;
    }
    --tw-prose-body: oklch(37.3% 0.034 259.733);
    --tw-prose-headings: oklch(21% 0.034 264.665);
    --tw-prose-lead: oklch(44.6% 0.03 256.802);
    --tw-prose-links: oklch(21% 0.034 264.665);
    --tw-prose-bold: oklch(21% 0.034 264.665);
    --tw-prose-counters: oklch(55.1% 0.027 264.364);
    --tw-prose-bullets: oklch(87.2% 0.01 258.338);
    --tw-prose-hr: oklch(92.8% 0.006 264.531);
    --tw-prose-quotes: oklch(21% 0.034 264.665);
    --tw-prose-quote-borders: oklch(92.8% 0.006 264.531);
    --tw-prose-captions: oklch(55.1% 0.027 264.364);
    --tw-prose-kbd: oklch(21% 0.034 264.665);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(21% 0.034 264.665);
    --tw-prose-pre-code: oklch(92.8% 0.006 264.531);
    --tw-prose-pre-bg: oklch(27.8% 0.033 256.848);
    --tw-prose-th-borders: oklch(87.2% 0.01 258.338);
    --tw-prose-td-borders: oklch(92.8% 0.006 264.531);
    --tw-prose-invert-body: oklch(87.2% 0.01 258.338);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(70.7% 0.022 261.325);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(70.7% 0.022 261.325);
    --tw-prose-invert-bullets: oklch(44.6% 0.03 256.802);
    --tw-prose-invert-hr: oklch(37.3% 0.034 259.733);
    --tw-prose-invert-quotes: oklch(96.7% 0.003 264.542);
    --tw-prose-invert-quote-borders: oklch(37.3% 0.034 259.733);
    --tw-prose-invert-captions: oklch(70.7% 0.022 261.325);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(87.2% 0.01 258.338);
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: oklch(44.6% 0.03 256.802);
    --tw-prose-invert-td-borders: oklch(37.3% 0.034 259.733);
    font-size: 1rem;
    line-height: 1.75;
    :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5em;
      margin-bottom: 0.5em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.375em;
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.375em;
    }
    :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    :where(.prose > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
    }
    :where(.prose > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.25em;
    }
    :where(.prose > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
    }
    :where(.prose > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.25em;
    }
    :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5em;
      padding-inline-start: 1.625em;
    }
    :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-top: 0.5714286em;
      padding-inline-end: 0.5714286em;
      padding-bottom: 0.5714286em;
      padding-inline-start: 0.5714286em;
    }
    :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 0;
    }
  }
  .prose-sm {
    font-size: 0.875rem;
    line-height: 1.7142857;
    :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.1428571em;
      margin-bottom: 1.1428571em;
    }
    :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.2857143em;
      line-height: 1.5555556;
      margin-top: 0.8888889em;
      margin-bottom: 0.8888889em;
    }
    :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
      margin-bottom: 1.3333333em;
      padding-inline-start: 1.1111111em;
    }
    :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 2.1428571em;
      margin-top: 0;
      margin-bottom: 0.8em;
      line-height: 1.2;
    }
    :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.4285714em;
      margin-top: 1.6em;
      margin-bottom: 0.8em;
      line-height: 1.4;
    }
    :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.2857143em;
      margin-top: 1.5555556em;
      margin-bottom: 0.4444444em;
      line-height: 1.5555556;
    }
    :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.4285714em;
      margin-bottom: 0.5714286em;
      line-height: 1.4285714;
    }
    :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.7142857em;
      margin-bottom: 1.7142857em;
    }
    :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.7142857em;
      margin-bottom: 1.7142857em;
    }
    :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.7142857em;
      margin-bottom: 1.7142857em;
    }
    :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8571429em;
      border-radius: 0.3125rem;
      padding-top: 0.1428571em;
      padding-inline-end: 0.3571429em;
      padding-bottom: 0.1428571em;
      padding-inline-start: 0.3571429em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8571429em;
    }
    :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.9em;
    }
    :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8888889em;
    }
    :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8571429em;
      line-height: 1.6666667;
      margin-top: 1.6666667em;
      margin-bottom: 1.6666667em;
      border-radius: 0.25rem;
      padding-top: 0.6666667em;
      padding-inline-end: 1em;
      padding-bottom: 0.6666667em;
      padding-inline-start: 1em;
    }
    :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.1428571em;
      margin-bottom: 1.1428571em;
      padding-inline-start: 1.5714286em;
    }
    :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.1428571em;
      margin-bottom: 1.1428571em;
      padding-inline-start: 1.5714286em;
    }
    :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.2857143em;
      margin-bottom: 0.2857143em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.4285714em;
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.4285714em;
    }
    :where(.prose-sm > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5714286em;
      margin-bottom: 0.5714286em;
    }
    :where(.prose-sm > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.1428571em;
    }
    :where(.prose-sm > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.1428571em;
    }
    :where(.prose-sm > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.1428571em;
    }
    :where(.prose-sm > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.1428571em;
    }
    :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5714286em;
      margin-bottom: 0.5714286em;
    }
    :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.1428571em;
      margin-bottom: 1.1428571em;
    }
    :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.1428571em;
    }
    :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.2857143em;
      padding-inline-start: 1.5714286em;
    }
    :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2.8571429em;
      margin-bottom: 2.8571429em;
    }
    :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8571429em;
      line-height: 1.5;
    }
    :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 1em;
      padding-bottom: 0.6666667em;
      padding-inline-start: 1em;
    }
    :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-top: 0.6666667em;
      padding-inline-end: 1em;
      padding-bottom: 0.6666667em;
      padding-inline-start: 1em;
    }
    :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.7142857em;
      margin-bottom: 1.7142857em;
    }
    :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8571429em;
      line-height: 1.3333333;
      margin-top: 0.6666667em;
    }
    :where(.prose-sm > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(.prose-sm > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 0;
    }
  }
  .mt-0\.5 {
    margin-top: calc(var(--spacing) * 0.5);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-1\.5 {
    margin-top: calc(var(--spacing) * 1.5);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-2\.5 {
    margin-top: calc(var(--spacing) * 2.5);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-3\.5 {
    margin-top: calc(var(--spacing) * 3.5);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-7 {
    margin-top: calc(var(--spacing) * 7);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }
  .mt-14 {
    margin-top: calc(var(--spacing) * 14);
  }
  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }
  .mt-20 {
    margin-top: calc(var(--spacing) * 20);
  }
  .mt-40 {
    margin-top: calc(var(--spacing) * 40);
  }
  .mt-\[6px\] {
    margin-top: 6px;
  }
  .mt-auto {
    margin-top: auto;
  }
  .mt-px {
    margin-top: 1px;
  }
  .-mr-1 {
    margin-right: calc(var(--spacing) * -1);
  }
  .-mr-16 {
    margin-right: calc(var(--spacing) * -16);
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mr-3 {
    margin-right: calc(var(--spacing) * 3);
  }
  .mr-4 {
    margin-right: calc(var(--spacing) * 4);
  }
  .mr-40 {
    margin-right: calc(var(--spacing) * 40);
  }
  .mr-\[6px\] {
    margin-right: 6px;
  }
  .mb-0\.5 {
    margin-bottom: calc(var(--spacing) * 0.5);
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-5 {
    margin-bottom: calc(var(--spacing) * 5);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .mb-10 {
    margin-bottom: calc(var(--spacing) * 10);
  }
  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }
  .mb-16 {
    margin-bottom: calc(var(--spacing) * 16);
  }
  .mb-24 {
    margin-bottom: calc(var(--spacing) * 24);
  }
  .mb-px {
    margin-bottom: 1px;
  }
  .-ml-4 {
    margin-left: calc(var(--spacing) * -4);
  }
  .-ml-16 {
    margin-left: calc(var(--spacing) * -16);
  }
  .-ml-20 {
    margin-left: calc(var(--spacing) * -20);
  }
  .ml-0 {
    margin-left: calc(var(--spacing) * 0);
  }
  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .ml-2\.5 {
    margin-left: calc(var(--spacing) * 2.5);
  }
  .ml-3 {
    margin-left: calc(var(--spacing) * 3);
  }
  .ml-16 {
    margin-left: calc(var(--spacing) * 16);
  }
  .ml-32 {
    margin-left: calc(var(--spacing) * 32);
  }
  .ml-auto {
    margin-left: auto;
  }
  .listingSection__wrap {
    display: flex;
    width: 100%;
    flex-direction: column;
    row-gap: calc(var(--spacing) * 6);
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: var(--color-neutral-200);
    padding-inline: calc(var(--spacing) * 0);
    padding-bottom: calc(var(--spacing) * 10);
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
    @media (width >= 40rem) {
      row-gap: calc(var(--spacing) * 8);
    }
    @media (width >= 40rem) {
      border-radius: var(--radius-2xl);
    }
    @media (width >= 40rem) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 4);
    }
    @media (width >= 80rem) {
      padding: calc(var(--spacing) * 8);
    }
    &:where(.dark, .dark *) {
      border-color: var(--color-neutral-700);
    }
  }
  .embla__container {
    display: flex;
    touch-action: pan-y pinch-zoom;
  }
  .line-clamp-1 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }
  .line-clamp-2 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }
  .hidden-scrollbar {
    -ms-overflow-style: none;
    scrollbar-width: none;
    &::-webkit-scrollbar {
      display: none;
    }
  }
  .menu-item {
    display: flex;
    &:hover {
      > .sub-menu {
        display: block;
      }
    }
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .flow-root {
    display: flow-root;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .inline-grid {
    display: inline-grid;
  }
  .sub-menu {
    display: none;
  }
  .table {
    display: table;
  }
  .aspect-2\/2 {
    aspect-ratio: 2/2;
  }
  .aspect-3\/2 {
    aspect-ratio: 3/2;
  }
  .aspect-4\/3 {
    aspect-ratio: 4/3;
  }
  .aspect-4\/5 {
    aspect-ratio: 4/5;
  }
  .aspect-5\/3 {
    aspect-ratio: 5/3;
  }
  .aspect-\[3\/2\] {
    aspect-ratio: 3/2;
  }
  .aspect-\[9\/16\] {
    aspect-ratio: 9/16;
  }
  .size-2 {
    width: calc(var(--spacing) * 2);
    height: calc(var(--spacing) * 2);
  }
  .size-2\.5 {
    width: calc(var(--spacing) * 2.5);
    height: calc(var(--spacing) * 2.5);
  }
  .size-3\.5 {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }
  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
  .size-4\! {
    width: calc(var(--spacing) * 4) !important;
    height: calc(var(--spacing) * 4) !important;
  }
  .size-4\.5 {
    width: calc(var(--spacing) * 4.5);
    height: calc(var(--spacing) * 4.5);
  }
  .size-5 {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }
  .size-5\! {
    width: calc(var(--spacing) * 5) !important;
    height: calc(var(--spacing) * 5) !important;
  }
  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }
  .size-7 {
    width: calc(var(--spacing) * 7);
    height: calc(var(--spacing) * 7);
  }
  .size-7\! {
    width: calc(var(--spacing) * 7) !important;
    height: calc(var(--spacing) * 7) !important;
  }
  .size-8 {
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
  }
  .size-8\! {
    width: calc(var(--spacing) * 8) !important;
    height: calc(var(--spacing) * 8) !important;
  }
  .size-10 {
    width: calc(var(--spacing) * 10);
    height: calc(var(--spacing) * 10);
  }
  .size-12 {
    width: calc(var(--spacing) * 12);
    height: calc(var(--spacing) * 12);
  }
  .size-12\! {
    width: calc(var(--spacing) * 12) !important;
    height: calc(var(--spacing) * 12) !important;
  }
  .size-14 {
    width: calc(var(--spacing) * 14);
    height: calc(var(--spacing) * 14);
  }
  .size-16 {
    width: calc(var(--spacing) * 16);
    height: calc(var(--spacing) * 16);
  }
  .size-20 {
    width: calc(var(--spacing) * 20);
    height: calc(var(--spacing) * 20);
  }
  .size-24 {
    width: calc(var(--spacing) * 24);
    height: calc(var(--spacing) * 24);
  }
  .size-32 {
    width: calc(var(--spacing) * 32);
    height: calc(var(--spacing) * 32);
  }
  .size-\[1\.125rem\] {
    width: 1.125rem;
    height: 1.125rem;
  }
  .size-\[1\.1875rem\] {
    width: 1.1875rem;
    height: 1.1875rem;
  }
  .size-\[max\(100\%\,2\.75rem\)\] {
    width: max(100%, 2.75rem);
    height: max(100%, 2.75rem);
  }
  .size-full {
    width: 100%;
    height: 100%;
  }
  .h-0 {
    height: calc(var(--spacing) * 0);
  }
  .h-0\.5 {
    height: calc(var(--spacing) * 0.5);
  }
  .h-1\.5 {
    height: calc(var(--spacing) * 1.5);
  }
  .h-2 {
    height: calc(var(--spacing) * 2);
  }
  .h-3 {
    height: calc(var(--spacing) * 3);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-7 {
    height: calc(var(--spacing) * 7);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-9 {
    height: calc(var(--spacing) * 9);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-11 {
    height: calc(var(--spacing) * 11);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-14 {
    height: calc(var(--spacing) * 14);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-18 {
    height: calc(var(--spacing) * 18);
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-28 {
    height: calc(var(--spacing) * 28);
  }
  .h-32 {
    height: calc(var(--spacing) * 32);
  }
  .h-36 {
    height: calc(var(--spacing) * 36);
  }
  .h-40 {
    height: calc(var(--spacing) * 40);
  }
  .h-48 {
    height: calc(var(--spacing) * 48);
  }
  .h-56 {
    height: calc(var(--spacing) * 56);
  }
  .h-72 {
    height: calc(var(--spacing) * 72);
  }
  .h-80 {
    height: calc(var(--spacing) * 80);
  }
  .h-96 {
    height: calc(var(--spacing) * 96);
  }
  .h-\[14px\] {
    height: 14px;
  }
  .h-\[22px\] {
    height: 22px;
  }
  .h-\[72px\] {
    height: 72px;
  }
  .h-\[75vh\] {
    height: 75vh;
  }
  .h-\[80vh\] {
    height: 80vh;
  }
  .h-\[600px\] {
    height: 600px;
  }
  .h-auto {
    height: auto;
  }
  .h-full {
    height: 100%;
  }
  .h-screen {
    height: 100vh;
  }
  .max-h-0 {
    max-height: calc(var(--spacing) * 0);
  }
  .max-h-64 {
    max-height: calc(var(--spacing) * 64);
  }
  .max-h-96 {
    max-height: calc(var(--spacing) * 96);
  }
  .max-h-\[28rem\] {
    max-height: 28rem;
  }
  .max-h-full {
    max-height: 100%;
  }
  .max-h-screen {
    max-height: 100vh;
  }
  .min-h-0 {
    min-height: calc(var(--spacing) * 0);
  }
  .min-h-11 {
    min-height: calc(var(--spacing) * 11);
  }
  .min-h-\[80vh\] {
    min-height: 80vh;
  }
  .min-h-\[100px\] {
    min-height: 100px;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-1\.5 {
    width: calc(var(--spacing) * 1.5);
  }
  .w-1\/2 {
    width: calc(1/2 * 100%);
  }
  .w-2 {
    width: calc(var(--spacing) * 2);
  }
  .w-2\/3 {
    width: calc(2/3 * 100%);
  }
  .w-2\/5 {
    width: calc(2/5 * 100%);
  }
  .w-3 {
    width: calc(var(--spacing) * 3);
  }
  .w-3xl {
    width: var(--container-3xl);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-7 {
    width: calc(var(--spacing) * 7);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-9 {
    width: calc(var(--spacing) * 9);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-10\! {
    width: calc(var(--spacing) * 10) !important;
  }
  .w-11 {
    width: calc(var(--spacing) * 11);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-14 {
    width: calc(var(--spacing) * 14);
  }
  .w-14\! {
    width: calc(var(--spacing) * 14) !important;
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-18 {
    width: calc(var(--spacing) * 18);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-24 {
    width: calc(var(--spacing) * 24);
  }
  .w-28 {
    width: calc(var(--spacing) * 28);
  }
  .w-32 {
    width: calc(var(--spacing) * 32);
  }
  .w-36 {
    width: calc(var(--spacing) * 36);
  }
  .w-40 {
    width: calc(var(--spacing) * 40);
  }
  .w-48 {
    width: calc(var(--spacing) * 48);
  }
  .w-56 {
    width: calc(var(--spacing) * 56);
  }
  .w-64 {
    width: calc(var(--spacing) * 64);
  }
  .w-72 {
    width: calc(var(--spacing) * 72);
  }
  .w-80 {
    width: calc(var(--spacing) * 80);
  }
  .w-84 {
    width: calc(var(--spacing) * 84);
  }
  .w-96 {
    width: calc(var(--spacing) * 96);
  }
  .w-\[2\.25rem\] {
    width: 2.25rem;
  }
  .w-\[14px\] {
    width: 14px;
  }
  .w-\[17rem\] {
    width: 17rem;
  }
  .w-\[42px\] {
    width: 42px;
  }
  .w-\[calc\(100\%\+1rem\)\] {
    width: calc(100% + 1rem);
  }
  .w-auto {
    width: auto;
  }
  .w-full {
    width: 100%;
  }
  .w-lg {
    width: var(--container-lg);
  }
  .w-max {
    width: max-content;
  }
  .w-md {
    width: var(--container-md);
  }
  .w-px {
    width: 1px;
  }
  .w-screen {
    width: 100vw;
  }
  .w-sm {
    width: var(--container-sm);
  }
  .max-w-\(--breakpoint-md\) {
    max-width: var(--breakpoint-md);
  }
  .max-w-\(--breakpoint-md\)\! {
    max-width: var(--breakpoint-md) !important;
  }
  .max-w-\(--breakpoint-xl\) {
    max-width: var(--breakpoint-xl);
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-3xl {
    max-width: var(--container-3xl);
  }
  .max-w-4xl {
    max-width: var(--container-4xl);
  }
  .max-w-6xl {
    max-width: var(--container-6xl);
  }
  .max-w-7xl {
    max-width: var(--container-7xl);
  }
  .max-w-28 {
    max-width: calc(var(--spacing) * 28);
  }
  .max-w-40 {
    max-width: calc(var(--spacing) * 40);
  }
  .max-w-\[180px\] {
    max-width: 180px;
  }
  .max-w-\[400px\] {
    max-width: 400px;
  }
  .max-w-full {
    max-width: 100%;
  }
  .max-w-lg {
    max-width: var(--container-lg);
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .max-w-sm {
    max-width: var(--container-sm);
  }
  .max-w-xl {
    max-width: var(--container-xl);
  }
  .max-w-xs {
    max-width: var(--container-xs);
  }
  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }
  .min-w-28 {
    min-width: calc(var(--spacing) * 28);
  }
  .min-w-\[2\.25rem\] {
    min-width: 2.25rem;
  }
  .min-w-\[100px\] {
    min-width: 100px;
  }
  .min-w-\[150px\] {
    min-width: 150px;
  }
  .min-w-\[320px\] {
    min-width: 320px;
  }
  .min-w-\[calc\(var\(--button-width\)\+1\.75rem\)\] {
    min-width: calc(var(--button-width) + 1.75rem);
  }
  .min-w-\[calc\(var\(--input-width\)\+8px\)\] {
    min-width: calc(var(--input-width) + 8px);
  }
  .min-w-full {
    min-width: 100%;
  }
  .min-w-max {
    min-width: max-content;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-1\/2 {
    flex: calc(1/2 * 100%);
  }
  .flex-2 {
    flex: 2;
  }
  .flex-3\/12 {
    flex: calc(3/12 * 100%);
  }
  .flex-4 {
    flex: 4;
  }
  .flex-4\/12 {
    flex: calc(4/12 * 100%);
  }
  .flex-5\/12 {
    flex: calc(5/12 * 100%);
  }
  .embla__slide {
    flex-shrink: 0;
    flex-grow: 0;
    transform: translate3d(0, 0, 0);
  }
  .mySnapItem {
    flex-shrink: 0;
    scroll-snap-align: start;
  }
  .flex-shrink-0 {
    flex-shrink: 0;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .basis-0 {
    flex-basis: calc(var(--spacing) * 0);
  }
  .basis-full {
    flex-basis: 100%;
  }
  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-0 {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-5 {
    --tw-translate-x: calc(var(--spacing) * 5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-7 {
    --tw-translate-y: calc(var(--spacing) * -7);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-\[calc\(100\%\+1\.5rem\)\] {
    --tw-translate-y: calc(100% + 1.5rem);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .scale-90 {
    --tw-scale-x: 90%;
    --tw-scale-y: 90%;
    --tw-scale-z: 90%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-95 {
    --tw-scale-x: 95%;
    --tw-scale-y: 95%;
    --tw-scale-z: 95%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-100 {
    --tw-scale-x: 100%;
    --tw-scale-y: 100%;
    --tw-scale-z: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-125 {
    --tw-scale-x: 125%;
    --tw-scale-y: 125%;
    --tw-scale-z: 125%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .animate-\[myblur_0\.4s_ease-in-out\] {
    animation: myblur 0.4s ease-in-out;
  }
  .animate-ping {
    animation: var(--animate-ping);
  }
  .animate-pulse {
    animation: var(--animate-pulse);
  }
  .cursor-default {
    cursor: default;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .snap-x {
    scroll-snap-type: x var(--tw-scroll-snap-strictness);
  }
  .snap-mandatory {
    --tw-scroll-snap-strictness: mandatory;
  }
  .scroll-mt-20 {
    scroll-margin-top: calc(var(--spacing) * 20);
  }
  .scroll-py-1 {
    scroll-padding-block: calc(var(--spacing) * 1);
  }
  .appearance-none {
    appearance: none;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
  .grid-cols-12 {
    grid-template-columns: repeat(12, minmax(0, 1fr));
  }
  .grid-cols-\[--spacing\(5\)_1fr\] {
    grid-template-columns: calc(var(--spacing) * 5) 1fr;
  }
  .grid-cols-\[1\.25rem_1fr\] {
    grid-template-columns: 1.25rem 1fr;
  }
  .grid-cols-\[1\.125rem_1fr\] {
    grid-template-columns: 1.125rem 1fr;
  }
  .grid-cols-\[1fr_--spacing\(5\)\] {
    grid-template-columns: 1fr calc(var(--spacing) * 5);
  }
  .grid-cols-\[1fr_auto\] {
    grid-template-columns: 1fr auto;
  }
  .grid-rows-2 {
    grid-template-rows: repeat(2, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-col-reverse {
    flex-direction: column-reverse;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-baseline {
    align-items: baseline;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-around {
    justify-content: space-around;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-2\.5 {
    gap: calc(var(--spacing) * 2.5);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-7 {
    gap: calc(var(--spacing) * 7);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }
  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }
  .gap-14 {
    gap: calc(var(--spacing) * 14);
  }
  .gap-20 {
    gap: calc(var(--spacing) * 20);
  }
  .space-y-0 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-0\! {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0 !important;
      margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse)) !important;
      margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse))) !important;
    }
  }
  .space-y-0\.5 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 0.5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 0.5) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-1 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-2\.5 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2.5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2.5) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-3 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-5 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 5) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-8 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-10 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 10) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 10) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .gap-x-1 {
    column-gap: calc(var(--spacing) * 1);
  }
  .gap-x-1\.5 {
    column-gap: calc(var(--spacing) * 1.5);
  }
  .gap-x-2 {
    column-gap: calc(var(--spacing) * 2);
  }
  .gap-x-2\.5 {
    column-gap: calc(var(--spacing) * 2.5);
  }
  .gap-x-3 {
    column-gap: calc(var(--spacing) * 3);
  }
  .gap-x-3\.5 {
    column-gap: calc(var(--spacing) * 3.5);
  }
  .gap-x-4 {
    column-gap: calc(var(--spacing) * 4);
  }
  .gap-x-5 {
    column-gap: calc(var(--spacing) * 5);
  }
  .gap-x-6 {
    column-gap: calc(var(--spacing) * 6);
  }
  .gap-x-8 {
    column-gap: calc(var(--spacing) * 8);
  }
  .gap-x-10 {
    column-gap: calc(var(--spacing) * 10);
  }
  .space-x-0\.5 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 0.5) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 0.5) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-1 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-3 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-4 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-6 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-8 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .gap-y-1 {
    row-gap: calc(var(--spacing) * 1);
  }
  .gap-y-1\.5 {
    row-gap: calc(var(--spacing) * 1.5);
  }
  .gap-y-2 {
    row-gap: calc(var(--spacing) * 2);
  }
  .gap-y-2\.5 {
    row-gap: calc(var(--spacing) * 2.5);
  }
  .gap-y-3 {
    row-gap: calc(var(--spacing) * 3);
  }
  .gap-y-3\.5 {
    row-gap: calc(var(--spacing) * 3.5);
  }
  .gap-y-4 {
    row-gap: calc(var(--spacing) * 4);
  }
  .gap-y-5 {
    row-gap: calc(var(--spacing) * 5);
  }
  .gap-y-6 {
    row-gap: calc(var(--spacing) * 6);
  }
  .gap-y-7 {
    row-gap: calc(var(--spacing) * 7);
  }
  .gap-y-8 {
    row-gap: calc(var(--spacing) * 8);
  }
  .gap-y-10 {
    row-gap: calc(var(--spacing) * 10);
  }
  .gap-y-12 {
    row-gap: calc(var(--spacing) * 12);
  }
  .gap-y-14 {
    row-gap: calc(var(--spacing) * 14);
  }
  .gap-y-16 {
    row-gap: calc(var(--spacing) * 16);
  }
  .gap-y-24 {
    row-gap: calc(var(--spacing) * 24);
  }
  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .divide-neutral-100 {
    :where(& > :not(:last-child)) {
      border-color: var(--color-neutral-100);
    }
  }
  .divide-neutral-200 {
    :where(& > :not(:last-child)) {
      border-color: var(--color-neutral-200);
    }
  }
  .self-center {
    align-self: center;
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .embla {
    overflow: hidden;
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .root {
    overflow: hidden;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-x-hidden {
    overflow-x: hidden;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .overflow-y-scroll {
    overflow-y: scroll;
  }
  .overscroll-contain {
    overscroll-behavior: contain;
  }
  .nc-box-has-hover {
    border-radius: var(--radius-3xl);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: color-mix(in srgb, rgb(229, 231, 235) 79%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-neutral-200) 79%, transparent);
    }
    background-color: var(--color-white);
    &:where(.dark, .dark *) {
      border-color: var(--color-neutral-700);
    }
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, rgb(31, 41, 55) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-800) 30%, transparent);
      }
    }
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-\(--avatar-radius\) {
    border-radius: var(--avatar-radius);
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-3xl {
    border-radius: var(--radius-3xl);
  }
  .rounded-\[0\.3125rem\] {
    border-radius: 0.3125rem;
  }
  .rounded-\[20\%\] {
    border-radius: 20%;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .rounded-xl\! {
    border-radius: var(--radius-xl) !important;
  }
  .rounded-t-2xl {
    border-top-left-radius: var(--radius-2xl);
    border-top-right-radius: var(--radius-2xl);
  }
  .rounded-l-3xl {
    border-top-left-radius: var(--radius-3xl);
    border-bottom-left-radius: var(--radius-3xl);
  }
  .rounded-b-2xl {
    border-bottom-right-radius: var(--radius-2xl);
    border-bottom-left-radius: var(--radius-2xl);
  }
  .rounded-b-3xl {
    border-bottom-right-radius: var(--radius-3xl);
    border-bottom-left-radius: var(--radius-3xl);
  }
  .rounded-b-4xl {
    border-bottom-right-radius: var(--radius-4xl);
    border-bottom-left-radius: var(--radius-4xl);
  }
  .rounded-b-\[40px\] {
    border-bottom-right-radius: 40px;
    border-bottom-left-radius: 40px;
  }
  .rounded-b-xl {
    border-bottom-right-radius: var(--radius-xl);
    border-bottom-left-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-0 {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-4 {
    border-style: var(--tw-border-style);
    border-width: 4px;
  }
  .border-\[4\.5px\] {
    border-style: var(--tw-border-style);
    border-width: 4.5px;
  }
  .border-e {
    border-inline-end-style: var(--tw-border-style);
    border-inline-end-width: 1px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
  .border-l-4 {
    border-left-style: var(--tw-border-style);
    border-left-width: 4px;
  }
  .\!border-none {
    --tw-border-style: none !important;
    border-style: none !important;
  }
  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }
  .border-none {
    --tw-border-style: none;
    border-style: none;
  }
  .border-\[\#0480ea\] {
    border-color: #0480ea;
  }
  .border-\[\#0480ea\]\/20 {
    border-color: color-mix(in oklab, #0480ea 20%, transparent);
  }
  .border-black {
    border-color: var(--color-black);
  }
  .border-black\! {
    border-color: var(--color-black) !important;
  }
  .border-black\/5 {
    border-color: color-mix(in srgb, #000 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-black) 5%, transparent);
    }
  }
  .border-blue-200\/50 {
    border-color: color-mix(in srgb, oklch(88.2% 0.059 254.128) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-blue-200) 50%, transparent);
    }
  }
  .border-gray-100 {
    border-color: var(--color-gray-100);
  }
  .border-gray-200 {
    border-color: var(--color-gray-200);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-gray-900\/10 {
    border-color: color-mix(in srgb, oklch(21% 0.034 264.665) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-gray-900) 10%, transparent);
    }
  }
  .border-neutral-100 {
    border-color: var(--color-neutral-100);
  }
  .border-neutral-200 {
    border-color: var(--color-neutral-200);
  }
  .border-neutral-200\/50 {
    border-color: color-mix(in srgb, rgb(229, 231, 235) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-neutral-200) 50%, transparent);
    }
  }
  .border-neutral-200\/80 {
    border-color: color-mix(in srgb, rgb(229, 231, 235) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-neutral-200) 80%, transparent);
    }
  }
  .border-neutral-300 {
    border-color: var(--color-neutral-300);
  }
  .border-neutral-400 {
    border-color: var(--color-neutral-400);
  }
  .border-neutral-900\/10 {
    border-color: color-mix(in srgb, rgb(17, 24, 39) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-neutral-900) 10%, transparent);
    }
  }
  .border-neutral-950\/5 {
    border-color: color-mix(in srgb, oklch(14.5% 0 0) 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-neutral-950) 5%, transparent);
    }
  }
  .border-neutral-950\/10 {
    border-color: color-mix(in srgb, oklch(14.5% 0 0) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-neutral-950) 10%, transparent);
    }
  }
  .border-neutral-950\/15 {
    border-color: color-mix(in srgb, oklch(14.5% 0 0) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-neutral-950) 15%, transparent);
    }
  }
  .border-primary-100 {
    border-color: var(--color-primary-100);
  }
  .border-primary-200\/30 {
    border-color: color-mix(in srgb, rgb(191, 219, 254) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-primary-200) 30%, transparent);
    }
  }
  .border-primary-500 {
    border-color: var(--color-primary-500);
  }
  .border-secondary-500 {
    border-color: var(--color-secondary-500);
  }
  .border-transparent {
    border-color: transparent;
  }
  .border-white {
    border-color: var(--color-white);
  }
  .border-white\/20 {
    border-color: color-mix(in srgb, #fff 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }
  .border-zinc-950\/10 {
    border-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-zinc-950) 10%, transparent);
    }
  }
  .border-b-neutral-950\/10 {
    border-bottom-color: color-mix(in srgb, oklch(14.5% 0 0) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-bottom-color: color-mix(in oklab, var(--color-neutral-950) 10%, transparent);
    }
  }
  .border-l-neutral-950\/5 {
    border-left-color: color-mix(in srgb, oklch(14.5% 0 0) 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-left-color: color-mix(in oklab, var(--color-neutral-950) 5%, transparent);
    }
  }
  .bg-\(--btn-border\) {
    background-color: var(--btn-border);
  }
  .bg-\(--radio-indicator\) {
    background-color: var(--radio-indicator);
  }
  .bg-\[\#0480ea\] {
    background-color: #0480ea;
  }
  .bg-\[\#0480ea\]\/4 {
    background-color: color-mix(in oklab, #0480ea 4%, transparent);
  }
  .bg-\[\#0480ea\]\/5 {
    background-color: color-mix(in oklab, #0480ea 5%, transparent);
  }
  .bg-\[\#0480ea\]\/6 {
    background-color: color-mix(in oklab, #0480ea 6%, transparent);
  }
  .bg-\[\#0480ea\]\/7 {
    background-color: color-mix(in oklab, #0480ea 7%, transparent);
  }
  .bg-\[\#0480ea\]\/8 {
    background-color: color-mix(in oklab, #0480ea 8%, transparent);
  }
  .bg-\[\#0480ea\]\/10 {
    background-color: color-mix(in oklab, #0480ea 10%, transparent);
  }
  .bg-\[\#0480ea\]\/20 {
    background-color: color-mix(in oklab, #0480ea 20%, transparent);
  }
  .bg-\[\#0480ea\]\/30 {
    background-color: color-mix(in oklab, #0480ea 30%, transparent);
  }
  .bg-\[\#f07499\] {
    background-color: #f07499;
  }
  .bg-\[\#f07499\]\/10 {
    background-color: color-mix(in oklab, #f07499 10%, transparent);
  }
  .bg-amber-400\/20 {
    background-color: color-mix(in srgb, oklch(82.8% 0.189 84.429) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-amber-400) 20%, transparent);
    }
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-black\/10 {
    background-color: color-mix(in srgb, #000 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 10%, transparent);
    }
  }
  .bg-black\/20 {
    background-color: color-mix(in srgb, #000 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
  }
  .bg-black\/30 {
    background-color: color-mix(in srgb, #000 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 30%, transparent);
    }
  }
  .bg-black\/50 {
    background-color: color-mix(in srgb, #000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }
  .bg-black\/60 {
    background-color: color-mix(in srgb, #000 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 60%, transparent);
    }
  }
  .bg-black\/90 {
    background-color: color-mix(in srgb, #000 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 90%, transparent);
    }
  }
  .bg-blue-100 {
    background-color: var(--color-blue-100);
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-blue-500\/15 {
    background-color: color-mix(in srgb, oklch(62.3% 0.214 259.815) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-500) 15%, transparent);
    }
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .bg-blue-800 {
    background-color: var(--color-blue-800);
  }
  .bg-cyan-400\/20 {
    background-color: color-mix(in srgb, oklch(78.9% 0.154 211.53) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-cyan-400) 20%, transparent);
    }
  }
  .bg-emerald-500\/15 {
    background-color: color-mix(in srgb, oklch(69.6% 0.17 162.48) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-emerald-500) 15%, transparent);
    }
  }
  .bg-fuchsia-400\/15 {
    background-color: color-mix(in srgb, oklch(74% 0.238 322.16) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-fuchsia-400) 15%, transparent);
    }
  }
  .bg-gray-50 {
    background-color: var(--color-gray-50);
  }
  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .bg-green-50 {
    background-color: var(--color-green-50);
  }
  .bg-green-100 {
    background-color: var(--color-green-100);
  }
  .bg-green-500 {
    background-color: var(--color-green-500);
  }
  .bg-green-500\/15 {
    background-color: color-mix(in srgb, oklch(72.3% 0.219 149.579) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-green-500) 15%, transparent);
    }
  }
  .bg-green-600 {
    background-color: var(--color-green-600);
  }
  .bg-indigo-500\/15 {
    background-color: color-mix(in srgb, oklch(58.5% 0.233 277.117) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-indigo-500) 15%, transparent);
    }
  }
  .bg-indigo-600 {
    background-color: var(--color-indigo-600);
  }
  .bg-lime-400\/20 {
    background-color: color-mix(in srgb, oklch(84.1% 0.238 128.85) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-lime-400) 20%, transparent);
    }
  }
  .bg-neutral-50 {
    background-color: var(--color-neutral-50);
  }
  .bg-neutral-100 {
    background-color: var(--color-neutral-100);
  }
  .bg-neutral-100\/80 {
    background-color: color-mix(in srgb, rgb(243, 244, 246) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-neutral-100) 80%, transparent);
    }
  }
  .bg-neutral-200 {
    background-color: var(--color-neutral-200);
  }
  .bg-neutral-300 {
    background-color: var(--color-neutral-300);
  }
  .bg-neutral-600\/10 {
    background-color: color-mix(in srgb, rgb(75, 85, 99) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-neutral-600) 10%, transparent);
    }
  }
  .bg-neutral-700 {
    background-color: var(--color-neutral-700);
  }
  .bg-neutral-800 {
    background-color: var(--color-neutral-800);
  }
  .bg-neutral-900 {
    background-color: var(--color-neutral-900);
  }
  .bg-neutral-900\/50 {
    background-color: color-mix(in srgb, rgb(17, 24, 39) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-neutral-900) 50%, transparent);
    }
  }
  .bg-neutral-900\/60 {
    background-color: color-mix(in srgb, rgb(17, 24, 39) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-neutral-900) 60%, transparent);
    }
  }
  .bg-neutral-950 {
    background-color: var(--color-neutral-950);
  }
  .bg-neutral-950\/10 {
    background-color: color-mix(in srgb, oklch(14.5% 0 0) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-neutral-950) 10%, transparent);
    }
  }
  .bg-orange-50 {
    background-color: var(--color-orange-50);
  }
  .bg-orange-500 {
    background-color: var(--color-orange-500);
  }
  .bg-orange-500\! {
    background-color: var(--color-orange-500) !important;
  }
  .bg-orange-500\/15 {
    background-color: color-mix(in srgb, oklch(70.5% 0.213 47.604) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-orange-500) 15%, transparent);
    }
  }
  .bg-pink-400\/15 {
    background-color: color-mix(in srgb, oklch(71.8% 0.202 349.761) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-pink-400) 15%, transparent);
    }
  }
  .bg-primary-50 {
    background-color: var(--color-primary-50);
  }
  .bg-primary-100\/40 {
    background-color: color-mix(in srgb, rgb(219, 234, 254) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary-100) 40%, transparent);
    }
  }
  .bg-primary-500 {
    background-color: var(--color-primary-500);
  }
  .bg-primary-500\/20 {
    background-color: color-mix(in srgb, rgb(4, 128, 234) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary-500) 20%, transparent);
    }
  }
  .bg-primary-600 {
    background-color: var(--color-primary-600);
  }
  .bg-primary-800 {
    background-color: var(--color-primary-800);
  }
  .bg-purple-500 {
    background-color: var(--color-purple-500);
  }
  .bg-purple-500\/15 {
    background-color: color-mix(in srgb, oklch(62.7% 0.265 303.9) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-purple-500) 15%, transparent);
    }
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .bg-red-500\/15 {
    background-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-red-500) 15%, transparent);
    }
  }
  .bg-red-700 {
    background-color: var(--color-red-700);
  }
  .bg-rose-400\/15 {
    background-color: color-mix(in srgb, oklch(71.2% 0.194 13.428) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-rose-400) 15%, transparent);
    }
  }
  .bg-sky-500\/15 {
    background-color: color-mix(in srgb, oklch(68.5% 0.169 237.323) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-sky-500) 15%, transparent);
    }
  }
  .bg-teal-500\/15 {
    background-color: color-mix(in srgb, oklch(70.4% 0.14 182.503) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-teal-500) 15%, transparent);
    }
  }
  .bg-teal-600 {
    background-color: var(--color-teal-600);
  }
  .bg-teal-900 {
    background-color: var(--color-teal-900);
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-violet-500\/15 {
    background-color: color-mix(in srgb, oklch(60.6% 0.25 292.717) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-violet-500) 15%, transparent);
    }
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/10 {
    background-color: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .bg-white\/30 {
    background-color: color-mix(in srgb, #fff 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
  }
  .bg-white\/60 {
    background-color: color-mix(in srgb, #fff 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
  }
  .bg-white\/70 {
    background-color: color-mix(in srgb, #fff 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .bg-white\/75 {
    background-color: color-mix(in srgb, #fff 75%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 75%, transparent);
    }
  }
  .bg-white\/80 {
    background-color: color-mix(in srgb, #fff 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
  }
  .bg-white\/90 {
    background-color: color-mix(in srgb, #fff 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 90%, transparent);
    }
  }
  .bg-white\/95 {
    background-color: color-mix(in srgb, #fff 95%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 95%, transparent);
    }
  }
  .bg-yellow-400\/20 {
    background-color: color-mix(in srgb, oklch(85.2% 0.199 91.936) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-yellow-400) 20%, transparent);
    }
  }
  .bg-linear-to-t {
    --tw-gradient-position: to top;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to top in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-t {
    --tw-gradient-position: to top in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-\[\#0480ea\] {
    --tw-gradient-from: #0480ea;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-\[\#0480ea\]\/5 {
    --tw-gradient-from: color-mix(in oklab, #0480ea 5%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-\[\#0480ea\]\/10 {
    --tw-gradient-from: color-mix(in oklab, #0480ea 10%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-black\/20 {
    --tw-gradient-from: color-mix(in srgb, #000 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-black\/60 {
    --tw-gradient-from: color-mix(in srgb, #000 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-black) 60%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-blue-50 {
    --tw-gradient-from: var(--color-blue-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-blue-600 {
    --tw-gradient-from: var(--color-blue-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-neutral-50 {
    --tw-gradient-from: var(--color-neutral-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-neutral-900 {
    --tw-gradient-from: var(--color-neutral-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .via-white {
    --tw-gradient-via: var(--color-white);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .to-\[\#0366d6\] {
    --tw-gradient-to: #0366d6;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[\#0480ea\]\/10 {
    --tw-gradient-to: color-mix(in oklab, #0480ea 10%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[\#0480ea\]\/80 {
    --tw-gradient-to: color-mix(in oklab, #0480ea 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[\#f07499\] {
    --tw-gradient-to: #f07499;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[\#f07499\]\/10 {
    --tw-gradient-to: color-mix(in oklab, #f07499 10%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-blue-50\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(97% 0.014 254.604) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-blue-50) 30%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-blue-100 {
    --tw-gradient-to: var(--color-blue-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-blue-600 {
    --tw-gradient-to: var(--color-blue-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-indigo-100 {
    --tw-gradient-to: var(--color-indigo-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-neutral-100 {
    --tw-gradient-to: var(--color-neutral-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-sky-50 {
    --tw-gradient-to: var(--color-sky-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-teal-600 {
    --tw-gradient-to: var(--color-teal-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .bg-clip-padding {
    background-clip: padding-box;
  }
  .bg-clip-text {
    background-clip: text;
  }
  .fill-current {
    fill: currentcolor;
  }
  .stroke-\(--checkbox-check\) {
    stroke: var(--checkbox-check);
  }
  .stroke-current {
    stroke: currentcolor;
  }
  .stroke-neutral-500 {
    stroke: var(--color-neutral-500);
  }
  .stroke-zinc-500 {
    stroke: var(--color-zinc-500);
  }
  .object-contain {
    object-fit: contain;
  }
  .object-cover {
    object-fit: cover;
  }
  .object-center {
    object-position: center;
  }
  .object-right {
    object-position: right;
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-1\.5 {
    padding: calc(var(--spacing) * 1.5);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-2\.5 {
    padding: calc(var(--spacing) * 2.5);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-4\! {
    padding: calc(var(--spacing) * 4) !important;
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-7 {
    padding: calc(var(--spacing) * 7);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .p-\[3px\] {
    padding: 3px;
  }
  .p-\[5\%\] {
    padding: 5%;
  }
  .px-0 {
    padding-inline: calc(var(--spacing) * 0);
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-1\.5 {
    padding-inline: calc(var(--spacing) * 1.5);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-2\.5 {
    padding-inline: calc(var(--spacing) * 2.5);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-3\.5 {
    padding-inline: calc(var(--spacing) * 3.5);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-7 {
    padding-inline: calc(var(--spacing) * 7);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .px-\[calc\(--spacing\(3\.5\)-1px\)\] {
    padding-inline: calc(calc(var(--spacing) * 3.5) - 1px);
  }
  .px-\[calc\(--spacing\(4\)-1px\)\] {
    padding-inline: calc(calc(var(--spacing) * 4) - 1px);
  }
  .py-0\.5 {
    padding-block: calc(var(--spacing) * 0.5);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-1\.75\! {
    padding-block: calc(var(--spacing) * 1.75) !important;
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-7 {
    padding-block: calc(var(--spacing) * 7);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .py-10 {
    padding-block: calc(var(--spacing) * 10);
  }
  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }
  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }
  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }
  .py-24 {
    padding-block: calc(var(--spacing) * 24);
  }
  .py-\[calc\(--spacing\(2\.5\)-1px\)\] {
    padding-block: calc(calc(var(--spacing) * 2.5) - 1px);
  }
  .ps-1 {
    padding-inline-start: calc(var(--spacing) * 1);
  }
  .ps-3 {
    padding-inline-start: calc(var(--spacing) * 3);
  }
  .ps-4 {
    padding-inline-start: calc(var(--spacing) * 4);
  }
  .ps-5 {
    padding-inline-start: calc(var(--spacing) * 5);
  }
  .ps-8\! {
    padding-inline-start: calc(var(--spacing) * 8) !important;
  }
  .pe-2 {
    padding-inline-end: calc(var(--spacing) * 2);
  }
  .pe-3 {
    padding-inline-end: calc(var(--spacing) * 3);
  }
  .pe-4 {
    padding-inline-end: calc(var(--spacing) * 4);
  }
  .pe-8 {
    padding-inline-end: calc(var(--spacing) * 8);
  }
  .pe-10\! {
    padding-inline-end: calc(var(--spacing) * 10) !important;
  }
  .pe-11 {
    padding-inline-end: calc(var(--spacing) * 11);
  }
  .pe-12 {
    padding-inline-end: calc(var(--spacing) * 12);
  }
  .pt-0\.5 {
    padding-top: calc(var(--spacing) * 0.5);
  }
  .pt-1 {
    padding-top: calc(var(--spacing) * 1);
  }
  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }
  .pt-3 {
    padding-top: calc(var(--spacing) * 3);
  }
  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }
  .pt-5 {
    padding-top: calc(var(--spacing) * 5);
  }
  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }
  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }
  .pt-10 {
    padding-top: calc(var(--spacing) * 10);
  }
  .pt-12 {
    padding-top: calc(var(--spacing) * 12);
  }
  .pt-14 {
    padding-top: calc(var(--spacing) * 14);
  }
  .pt-16 {
    padding-top: calc(var(--spacing) * 16);
  }
  .pt-20 {
    padding-top: calc(var(--spacing) * 20);
  }
  .pt-24 {
    padding-top: calc(var(--spacing) * 24);
  }
  .pt-\[1px\] {
    padding-top: 1px;
  }
  .pt-px {
    padding-top: 1px;
  }
  .pr-2 {
    padding-right: calc(var(--spacing) * 2);
  }
  .pr-3\.5 {
    padding-right: calc(var(--spacing) * 3.5);
  }
  .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }
  .pr-6 {
    padding-right: calc(var(--spacing) * 6);
  }
  .pr-\[calc\(--spacing\(7\)-1px\)\] {
    padding-right: calc(calc(var(--spacing) * 7) - 1px);
  }
  .pr-\[calc\(--spacing\(10\)-1px\)\] {
    padding-right: calc(calc(var(--spacing) * 10) - 1px);
  }
  .pb-0 {
    padding-bottom: calc(var(--spacing) * 0);
  }
  .pb-0\.5 {
    padding-bottom: calc(var(--spacing) * 0.5);
  }
  .pb-1 {
    padding-bottom: calc(var(--spacing) * 1);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pb-3 {
    padding-bottom: calc(var(--spacing) * 3);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .pb-5 {
    padding-bottom: calc(var(--spacing) * 5);
  }
  .pb-6 {
    padding-bottom: calc(var(--spacing) * 6);
  }
  .pb-8 {
    padding-bottom: calc(var(--spacing) * 8);
  }
  .pb-12 {
    padding-bottom: calc(var(--spacing) * 12);
  }
  .pb-14 {
    padding-bottom: calc(var(--spacing) * 14);
  }
  .pb-16 {
    padding-bottom: calc(var(--spacing) * 16);
  }
  .pb-20 {
    padding-bottom: calc(var(--spacing) * 20);
  }
  .pb-24 {
    padding-bottom: calc(var(--spacing) * 24);
  }
  .pb-28 {
    padding-bottom: calc(var(--spacing) * 28);
  }
  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }
  .pl-3 {
    padding-left: calc(var(--spacing) * 3);
  }
  .pl-3\.5 {
    padding-left: calc(var(--spacing) * 3.5);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .pl-6 {
    padding-left: calc(var(--spacing) * 6);
  }
  .pl-10 {
    padding-left: calc(var(--spacing) * 10);
  }
  .pl-20 {
    padding-left: calc(var(--spacing) * 20);
  }
  .pl-\[calc\(--spacing\(3\.5\)-1px\)\] {
    padding-left: calc(calc(var(--spacing) * 3.5) - 1px);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .text-start {
    text-align: start;
  }
  .align-middle {
    vertical-align: middle;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-4xl\/\[1\.1\] {
    font-size: var(--text-4xl);
    line-height: 1.1;
  }
  .text-4xl\/\[1\.15\] {
    font-size: var(--text-4xl);
    line-height: 1.15;
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-5xl\/\[1\.15\] {
    font-size: var(--text-5xl);
    line-height: 1.15;
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-base\/6 {
    font-size: var(--text-base);
    line-height: calc(var(--spacing) * 6);
  }
  .text-base\/6\! {
    font-size: var(--text-base) !important;
    line-height: calc(var(--spacing) * 6) !important;
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-lg\! {
    font-size: var(--text-lg) !important;
    line-height: var(--tw-leading, var(--text-lg--line-height)) !important;
  }
  .text-lg\/none {
    font-size: var(--text-lg);
    line-height: 1;
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-sm\/6 {
    font-size: var(--text-sm);
    line-height: calc(var(--spacing) * 6);
  }
  .text-sm\/none {
    font-size: var(--text-sm);
    line-height: 1;
  }
  .text-sm\/relaxed {
    font-size: var(--text-sm);
    line-height: var(--leading-relaxed);
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-xs\/5 {
    font-size: var(--text-xs);
    line-height: calc(var(--spacing) * 5);
  }
  .text-xs\/6 {
    font-size: var(--text-xs);
    line-height: calc(var(--spacing) * 6);
  }
  .text-\[0\.65rem\] {
    font-size: 0.65rem;
  }
  .text-\[48px\] {
    font-size: 48px;
  }
  .leading-5 {
    --tw-leading: calc(var(--spacing) * 5);
    line-height: calc(var(--spacing) * 5);
  }
  .leading-6 {
    --tw-leading: calc(var(--spacing) * 6);
    line-height: calc(var(--spacing) * 6);
  }
  .leading-\[1\.15\]\! {
    --tw-leading: 1.15 !important;
    line-height: 1.15 !important;
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }
  .leading-tight {
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  .tracking-wide {
    --tw-tracking: var(--tracking-wide);
    letter-spacing: var(--tracking-wide);
  }
  .tracking-wider {
    --tw-tracking: var(--tracking-wider);
    letter-spacing: var(--tracking-wider);
  }
  .tracking-widest {
    --tw-tracking: var(--tracking-widest);
    letter-spacing: var(--tracking-widest);
  }
  .text-pretty {
    text-wrap: pretty;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .text-\[\#0480ea\] {
    color: #0480ea;
  }
  .text-\[\#f07499\] {
    color: #f07499;
  }
  .text-amber-500 {
    color: var(--color-amber-500);
  }
  .text-amber-700 {
    color: var(--color-amber-700);
  }
  .text-amber-950 {
    color: var(--color-amber-950);
  }
  .text-black {
    color: var(--color-black);
  }
  .text-blue-600 {
    color: var(--color-blue-600);
  }
  .text-blue-700 {
    color: var(--color-blue-700);
  }
  .text-blue-800 {
    color: var(--color-blue-800);
  }
  .text-cyan-700 {
    color: var(--color-cyan-700);
  }
  .text-cyan-950 {
    color: var(--color-cyan-950);
  }
  .text-emerald-700 {
    color: var(--color-emerald-700);
  }
  .text-fuchsia-700 {
    color: var(--color-fuchsia-700);
  }
  .text-gray-200 {
    color: var(--color-gray-200);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-gray-900 {
    color: var(--color-gray-900);
  }
  .text-green-600 {
    color: var(--color-green-600);
  }
  .text-green-700 {
    color: var(--color-green-700);
  }
  .text-indigo-700 {
    color: var(--color-indigo-700);
  }
  .text-lime-700 {
    color: var(--color-lime-700);
  }
  .text-lime-950 {
    color: var(--color-lime-950);
  }
  .text-neutral-50 {
    color: var(--color-neutral-50);
  }
  .text-neutral-100 {
    color: var(--color-neutral-100);
  }
  .text-neutral-300 {
    color: var(--color-neutral-300);
  }
  .text-neutral-400 {
    color: var(--color-neutral-400);
  }
  .text-neutral-500 {
    color: var(--color-neutral-500);
  }
  .text-neutral-600 {
    color: var(--color-neutral-600);
  }
  .text-neutral-700 {
    color: var(--color-neutral-700);
  }
  .text-neutral-800 {
    color: var(--color-neutral-800);
  }
  .text-neutral-900 {
    color: var(--color-neutral-900);
  }
  .text-neutral-950 {
    color: var(--color-neutral-950);
  }
  .text-orange-400 {
    color: var(--color-orange-400);
  }
  .text-orange-700 {
    color: var(--color-orange-700);
  }
  .text-pink-700 {
    color: var(--color-pink-700);
  }
  .text-primary-500 {
    color: var(--color-primary-500);
  }
  .text-primary-600 {
    color: var(--color-primary-600);
  }
  .text-primary-800 {
    color: var(--color-primary-800);
  }
  .text-purple-700 {
    color: var(--color-purple-700);
  }
  .text-red-50 {
    color: var(--color-red-50);
  }
  .text-red-400 {
    color: var(--color-red-400);
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .text-red-600 {
    color: var(--color-red-600);
  }
  .text-red-700 {
    color: var(--color-red-700);
  }
  .text-rose-700 {
    color: var(--color-rose-700);
  }
  .text-secondary-500 {
    color: var(--color-secondary-500);
  }
  .text-secondary-600 {
    color: var(--color-secondary-600);
  }
  .text-secondary-700 {
    color: var(--color-secondary-700);
  }
  .text-sky-700 {
    color: var(--color-sky-700);
  }
  .text-slate-700 {
    color: var(--color-slate-700);
  }
  .text-slate-900 {
    color: var(--color-slate-900);
  }
  .text-teal-700 {
    color: var(--color-teal-700);
  }
  .text-transparent {
    color: transparent;
  }
  .text-violet-700 {
    color: var(--color-violet-700);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-white\/70 {
    color: color-mix(in srgb, #fff 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .text-white\/90 {
    color: color-mix(in srgb, #fff 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 90%, transparent);
    }
  }
  .text-yellow-400 {
    color: var(--color-yellow-400);
  }
  .text-yellow-500 {
    color: var(--color-yellow-500);
  }
  .text-yellow-600 {
    color: var(--color-yellow-600);
  }
  .text-yellow-700 {
    color: var(--color-yellow-700);
  }
  .text-yellow-950 {
    color: var(--color-yellow-950);
  }
  .text-zinc-500 {
    color: var(--color-zinc-500);
  }
  .text-zinc-950 {
    color: var(--color-zinc-950);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .line-through {
    text-decoration-line: line-through;
  }
  .underline {
    text-decoration-line: underline;
  }
  .placeholder-neutral-500 {
    &::placeholder {
      color: var(--color-neutral-500);
    }
  }
  .placeholder-neutral-800 {
    &::placeholder {
      color: var(--color-neutral-800);
    }
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-10 {
    opacity: 10%;
  }
  .opacity-20 {
    opacity: 20%;
  }
  .opacity-25 {
    opacity: 25%;
  }
  .opacity-40 {
    opacity: 40%;
  }
  .opacity-50 {
    opacity: 50%;
  }
  .opacity-60 {
    opacity: 60%;
  }
  .opacity-70 {
    opacity: 70%;
  }
  .opacity-80 {
    opacity: 80%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .mix-blend-multiply {
    mix-blend-mode: multiply;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-2xl {
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-inner {
    --tw-shadow: inset 0 2px 4px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .\!ring-0 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor) !important;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow) !important;
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-0 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-2 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .custom-shadow-1 {
    box-shadow: rgba(17, 17, 26, 0.05) 0px 4px 16px,
    rgba(17, 17, 26, 0.05) 0px 8px 32px;
  }
  .shadow-black\/10 {
    --tw-shadow-color: color-mix(in srgb, #000 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-black) 10%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-slate-200\/80 {
    --tw-shadow-color: color-mix(in srgb, oklch(92.9% 0.013 255.508) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-slate-200) 80%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .ring-\[\#0480ea\]\/20 {
    --tw-ring-color: color-mix(in oklab, #0480ea 20%, transparent);
  }
  .ring-black {
    --tw-ring-color: var(--color-black);
  }
  .ring-black\/5 {
    --tw-ring-color: color-mix(in srgb, #000 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-black) 5%, transparent);
    }
  }
  .ring-black\/10 {
    --tw-ring-color: color-mix(in srgb, #000 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-black) 10%, transparent);
    }
  }
  .ring-gray-300 {
    --tw-ring-color: var(--color-gray-300);
  }
  .ring-neutral-950\/10 {
    --tw-ring-color: color-mix(in srgb, oklch(14.5% 0 0) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-neutral-950) 10%, transparent);
    }
  }
  .ring-primary-500 {
    --tw-ring-color: var(--color-primary-500);
  }
  .ring-slate-900\/5 {
    --tw-ring-color: color-mix(in srgb, oklch(20.8% 0.042 265.755) 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-slate-900) 5%, transparent);
    }
  }
  .ring-white {
    --tw-ring-color: var(--color-white);
  }
  .ring-zinc-950\/10 {
    --tw-ring-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-zinc-950) 10%, transparent);
    }
  }
  .outline-hidden {
    --tw-outline-style: none;
    outline-style: none;
    @media (forced-colors: active) {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .-outline-offset-1 {
    outline-offset: calc(1px * -1);
  }
  .outline-black\/10 {
    outline-color: color-mix(in srgb, #000 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--color-black) 10%, transparent);
    }
  }
  .outline-transparent {
    outline-color: transparent;
  }
  .blur-2xl {
    --tw-blur: blur(var(--blur-2xl));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-3xl {
    --tw-blur: blur(var(--blur-3xl));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-sm {
    --tw-blur: blur(var(--blur-sm));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-xl {
    --tw-blur: blur(var(--blur-xl));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .brightness-50 {
    --tw-brightness: brightness(50%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .brightness-100 {
    --tw-brightness: brightness(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-xl {
    --tw-backdrop-blur: blur(var(--blur-xl));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-xs {
    --tw-backdrop-blur: blur(var(--blur-xs));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-filter {
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[filter\] {
    transition-property: filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[transform\,filter\] {
    transition-property: transform,filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-0 {
    --tw-duration: 0ms;
    transition-duration: 0ms;
  }
  .duration-75 {
    --tw-duration: 75ms;
    transition-duration: 75ms;
  }
  .duration-100 {
    --tw-duration: 100ms;
    transition-duration: 100ms;
  }
  .duration-150 {
    --tw-duration: 150ms;
    transition-duration: 150ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .duration-700 {
    --tw-duration: 700ms;
    transition-duration: 700ms;
  }
  .duration-800 {
    --tw-duration: 800ms;
    transition-duration: 800ms;
  }
  .duration-2000 {
    --tw-duration: 2000ms;
    transition-duration: 2000ms;
  }
  .ease-in {
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .forced-color-adjust-none {
    forced-color-adjust: none;
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .\[--anchor-gap\:--spacing\(2\)\] {
    --anchor-gap: calc(var(--spacing) * 2);
  }
  .\[--anchor-offset\:-1\.625rem\] {
    --anchor-offset: -1.625rem;
  }
  .\[--anchor-padding\:--spacing\(4\)\] {
    --anchor-padding: calc(var(--spacing) * 4);
  }
  .\[--avatar-radius\:20\%\] {
    --avatar-radius: 20%;
  }
  .\[--btn-bg\:var\(--color-amber-400\)\] {
    --btn-bg: var(--color-amber-400);
  }
  .\[--btn-bg\:var\(--color-blue-600\)\] {
    --btn-bg: var(--color-blue-600);
  }
  .\[--btn-bg\:var\(--color-cyan-300\)\] {
    --btn-bg: var(--color-cyan-300);
  }
  .\[--btn-bg\:var\(--color-emerald-600\)\] {
    --btn-bg: var(--color-emerald-600);
  }
  .\[--btn-bg\:var\(--color-fuchsia-500\)\] {
    --btn-bg: var(--color-fuchsia-500);
  }
  .\[--btn-bg\:var\(--color-green-600\)\] {
    --btn-bg: var(--color-green-600);
  }
  .\[--btn-bg\:var\(--color-indigo-500\)\] {
    --btn-bg: var(--color-indigo-500);
  }
  .\[--btn-bg\:var\(--color-lime-300\)\] {
    --btn-bg: var(--color-lime-300);
  }
  .\[--btn-bg\:var\(--color-neutral-600\)\] {
    --btn-bg: var(--color-neutral-600);
  }
  .\[--btn-bg\:var\(--color-neutral-900\)\] {
    --btn-bg: var(--color-neutral-900);
  }
  .\[--btn-bg\:var\(--color-orange-500\)\] {
    --btn-bg: var(--color-orange-500);
  }
  .\[--btn-bg\:var\(--color-pink-500\)\] {
    --btn-bg: var(--color-pink-500);
  }
  .\[--btn-bg\:var\(--color-primary-500\)\] {
    --btn-bg: var(--color-primary-500);
  }
  .\[--btn-bg\:var\(--color-purple-500\)\] {
    --btn-bg: var(--color-purple-500);
  }
  .\[--btn-bg\:var\(--color-red-600\)\] {
    --btn-bg: var(--color-red-600);
  }
  .\[--btn-bg\:var\(--color-rose-500\)\] {
    --btn-bg: var(--color-rose-500);
  }
  .\[--btn-bg\:var\(--color-sky-500\)\] {
    --btn-bg: var(--color-sky-500);
  }
  .\[--btn-bg\:var\(--color-teal-600\)\] {
    --btn-bg: var(--color-teal-600);
  }
  .\[--btn-bg\:var\(--color-violet-500\)\] {
    --btn-bg: var(--color-violet-500);
  }
  .\[--btn-bg\:var\(--color-yellow-300\)\] {
    --btn-bg: var(--color-yellow-300);
  }
  .\[--btn-bg\:white\] {
    --btn-bg: white;
  }
  .\[--btn-border\:var\(--color-amber-500\)\]\/80 {
    --btn-border: color-mix(in srgb, oklch(76.9% 0.188 70.08) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-amber-500) 80%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-blue-700\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(48.8% 0.243 264.376) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-blue-700) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-cyan-400\)\]\/80 {
    --btn-border: color-mix(in srgb, oklch(78.9% 0.154 211.53) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-cyan-400) 80%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-emerald-700\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(50.8% 0.118 165.612) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-emerald-700) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-fuchsia-600\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(59.1% 0.293 322.896) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-fuchsia-600) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-green-700\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(52.7% 0.154 150.069) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-green-700) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-indigo-600\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(51.1% 0.262 276.966) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-indigo-600) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-lime-400\)\]\/80 {
    --btn-border: color-mix(in srgb, oklch(84.1% 0.238 128.85) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-lime-400) 80%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-neutral-700\)\]\/90 {
    --btn-border: color-mix(in srgb, rgb(55, 65, 81) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-neutral-700) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-neutral-950\)\]\/10 {
    --btn-border: color-mix(in srgb, oklch(14.5% 0 0) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-neutral-950) 10%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-neutral-950\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(14.5% 0 0) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-neutral-950) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-orange-600\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(64.6% 0.222 41.116) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-orange-600) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-pink-600\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(59.2% 0.249 0.584) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-pink-600) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-primary-600\)\]\/90 {
    --btn-border: color-mix(in srgb, rgb(3, 105, 192) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-primary-600) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-purple-600\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(55.8% 0.288 302.321) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-purple-600) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-red-700\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(50.5% 0.213 27.518) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-red-700) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-rose-600\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(58.6% 0.253 17.585) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-rose-600) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-sky-600\)\]\/80 {
    --btn-border: color-mix(in srgb, oklch(58.8% 0.158 241.966) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-sky-600) 80%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-teal-700\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(51.1% 0.096 186.391) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-teal-700) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-violet-600\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(54.1% 0.281 293.009) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-violet-600) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-yellow-400\)\]\/80 {
    --btn-border: color-mix(in srgb, oklch(85.2% 0.199 91.936) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-yellow-400) 80%, transparent);
    }
  }
  .\[--btn-hover-overlay\:var\(--color-neutral-950\)\]\/\[2\.5\%\] {
    --btn-hover-overlay: color-mix(in srgb, oklch(14.5% 0 0) 2.5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-hover-overlay: color-mix(in oklab, var(--color-neutral-950) 2.5%, transparent);
    }
  }
  .\[--btn-hover-overlay\:var\(--color-white\)\]\/10 {
    --btn-hover-overlay: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-hover-overlay: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .\[--btn-hover-overlay\:var\(--color-white\)\]\/25 {
    --btn-hover-overlay: color-mix(in srgb, #fff 25%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-hover-overlay: color-mix(in oklab, var(--color-white) 25%, transparent);
    }
  }
  .\[--btn-icon\:var\(--color-amber-600\)\] {
    --btn-icon: var(--color-amber-600);
  }
  .\[--btn-icon\:var\(--color-blue-400\)\] {
    --btn-icon: var(--color-blue-400);
  }
  .\[--btn-icon\:var\(--color-cyan-500\)\] {
    --btn-icon: var(--color-cyan-500);
  }
  .\[--btn-icon\:var\(--color-fuchsia-300\)\] {
    --btn-icon: var(--color-fuchsia-300);
  }
  .\[--btn-icon\:var\(--color-indigo-300\)\] {
    --btn-icon: var(--color-indigo-300);
  }
  .\[--btn-icon\:var\(--color-lime-600\)\] {
    --btn-icon: var(--color-lime-600);
  }
  .\[--btn-icon\:var\(--color-neutral-400\)\] {
    --btn-icon: var(--color-neutral-400);
  }
  .\[--btn-icon\:var\(--color-neutral-500\)\] {
    --btn-icon: var(--color-neutral-500);
  }
  .\[--btn-icon\:var\(--color-orange-300\)\] {
    --btn-icon: var(--color-orange-300);
  }
  .\[--btn-icon\:var\(--color-pink-300\)\] {
    --btn-icon: var(--color-pink-300);
  }
  .\[--btn-icon\:var\(--color-primary-300\)\] {
    --btn-icon: var(--color-primary-300);
  }
  .\[--btn-icon\:var\(--color-purple-300\)\] {
    --btn-icon: var(--color-purple-300);
  }
  .\[--btn-icon\:var\(--color-red-300\)\] {
    --btn-icon: var(--color-red-300);
  }
  .\[--btn-icon\:var\(--color-rose-300\)\] {
    --btn-icon: var(--color-rose-300);
  }
  .\[--btn-icon\:var\(--color-violet-300\)\] {
    --btn-icon: var(--color-violet-300);
  }
  .\[--btn-icon\:var\(--color-white\)\]\/60 {
    --btn-icon: color-mix(in srgb, #fff 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-icon: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
  }
  .\[--btn-icon\:var\(--color-yellow-600\)\] {
    --btn-icon: var(--color-yellow-600);
  }
  .\[--checkbox-check\:var\(--color-amber-950\)\] {
    --checkbox-check: var(--color-amber-950);
  }
  .\[--checkbox-check\:var\(--color-cyan-950\)\] {
    --checkbox-check: var(--color-cyan-950);
  }
  .\[--checkbox-check\:var\(--color-lime-950\)\] {
    --checkbox-check: var(--color-lime-950);
  }
  .\[--checkbox-check\:var\(--color-neutral-900\)\] {
    --checkbox-check: var(--color-neutral-900);
  }
  .\[--checkbox-check\:var\(--color-white\)\] {
    --checkbox-check: var(--color-white);
  }
  .\[--checkbox-check\:var\(--color-yellow-950\)\] {
    --checkbox-check: var(--color-yellow-950);
  }
  .\[--checkbox-checked-bg\:var\(--color-amber-400\)\] {
    --checkbox-checked-bg: var(--color-amber-400);
  }
  .\[--checkbox-checked-bg\:var\(--color-blue-600\)\] {
    --checkbox-checked-bg: var(--color-blue-600);
  }
  .\[--checkbox-checked-bg\:var\(--color-cyan-300\)\] {
    --checkbox-checked-bg: var(--color-cyan-300);
  }
  .\[--checkbox-checked-bg\:var\(--color-emerald-600\)\] {
    --checkbox-checked-bg: var(--color-emerald-600);
  }
  .\[--checkbox-checked-bg\:var\(--color-fuchsia-500\)\] {
    --checkbox-checked-bg: var(--color-fuchsia-500);
  }
  .\[--checkbox-checked-bg\:var\(--color-green-600\)\] {
    --checkbox-checked-bg: var(--color-green-600);
  }
  .\[--checkbox-checked-bg\:var\(--color-indigo-500\)\] {
    --checkbox-checked-bg: var(--color-indigo-500);
  }
  .\[--checkbox-checked-bg\:var\(--color-lime-300\)\] {
    --checkbox-checked-bg: var(--color-lime-300);
  }
  .\[--checkbox-checked-bg\:var\(--color-neutral-600\)\] {
    --checkbox-checked-bg: var(--color-neutral-600);
  }
  .\[--checkbox-checked-bg\:var\(--color-neutral-900\)\] {
    --checkbox-checked-bg: var(--color-neutral-900);
  }
  .\[--checkbox-checked-bg\:var\(--color-orange-500\)\] {
    --checkbox-checked-bg: var(--color-orange-500);
  }
  .\[--checkbox-checked-bg\:var\(--color-pink-500\)\] {
    --checkbox-checked-bg: var(--color-pink-500);
  }
  .\[--checkbox-checked-bg\:var\(--color-purple-500\)\] {
    --checkbox-checked-bg: var(--color-purple-500);
  }
  .\[--checkbox-checked-bg\:var\(--color-red-600\)\] {
    --checkbox-checked-bg: var(--color-red-600);
  }
  .\[--checkbox-checked-bg\:var\(--color-rose-500\)\] {
    --checkbox-checked-bg: var(--color-rose-500);
  }
  .\[--checkbox-checked-bg\:var\(--color-sky-500\)\] {
    --checkbox-checked-bg: var(--color-sky-500);
  }
  .\[--checkbox-checked-bg\:var\(--color-teal-600\)\] {
    --checkbox-checked-bg: var(--color-teal-600);
  }
  .\[--checkbox-checked-bg\:var\(--color-violet-500\)\] {
    --checkbox-checked-bg: var(--color-violet-500);
  }
  .\[--checkbox-checked-bg\:var\(--color-white\)\] {
    --checkbox-checked-bg: var(--color-white);
  }
  .\[--checkbox-checked-bg\:var\(--color-yellow-300\)\] {
    --checkbox-checked-bg: var(--color-yellow-300);
  }
  .\[--checkbox-checked-border\:var\(--color-amber-500\)\]\/80 {
    --checkbox-checked-border: color-mix(in srgb, oklch(76.9% 0.188 70.08) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-amber-500) 80%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-blue-700\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(48.8% 0.243 264.376) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-blue-700) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-cyan-400\)\]\/80 {
    --checkbox-checked-border: color-mix(in srgb, oklch(78.9% 0.154 211.53) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-cyan-400) 80%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-emerald-700\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(50.8% 0.118 165.612) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-emerald-700) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-fuchsia-600\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(59.1% 0.293 322.896) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-fuchsia-600) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-green-700\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(52.7% 0.154 150.069) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-green-700) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-indigo-600\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(51.1% 0.262 276.966) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-indigo-600) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-lime-400\)\]\/80 {
    --checkbox-checked-border: color-mix(in srgb, oklch(84.1% 0.238 128.85) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-lime-400) 80%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-neutral-700\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, rgb(55, 65, 81) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-neutral-700) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-neutral-950\)\]\/15 {
    --checkbox-checked-border: color-mix(in srgb, oklch(14.5% 0 0) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-neutral-950) 15%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-neutral-950\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(14.5% 0 0) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-neutral-950) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-orange-600\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(64.6% 0.222 41.116) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-orange-600) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-pink-600\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(59.2% 0.249 0.584) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-pink-600) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-purple-600\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(55.8% 0.288 302.321) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-purple-600) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-red-700\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(50.5% 0.213 27.518) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-red-700) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-rose-600\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(58.6% 0.253 17.585) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-rose-600) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-sky-600\)\]\/80 {
    --checkbox-checked-border: color-mix(in srgb, oklch(58.8% 0.158 241.966) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-sky-600) 80%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-teal-700\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(51.1% 0.096 186.391) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-teal-700) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-violet-600\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(54.1% 0.281 293.009) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-violet-600) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-yellow-400\)\]\/80 {
    --checkbox-checked-border: color-mix(in srgb, oklch(85.2% 0.199 91.936) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-yellow-400) 80%, transparent);
    }
  }
  .\[--form-bg\:var\(--color-white\)\] {
    --form-bg: var(--color-white);
  }
  .\[--radio-checked-bg\:var\(--color-amber-400\)\] {
    --radio-checked-bg: var(--color-amber-400);
  }
  .\[--radio-checked-bg\:var\(--color-blue-600\)\] {
    --radio-checked-bg: var(--color-blue-600);
  }
  .\[--radio-checked-bg\:var\(--color-cyan-300\)\] {
    --radio-checked-bg: var(--color-cyan-300);
  }
  .\[--radio-checked-bg\:var\(--color-emerald-600\)\] {
    --radio-checked-bg: var(--color-emerald-600);
  }
  .\[--radio-checked-bg\:var\(--color-fuchsia-500\)\] {
    --radio-checked-bg: var(--color-fuchsia-500);
  }
  .\[--radio-checked-bg\:var\(--color-green-600\)\] {
    --radio-checked-bg: var(--color-green-600);
  }
  .\[--radio-checked-bg\:var\(--color-indigo-500\)\] {
    --radio-checked-bg: var(--color-indigo-500);
  }
  .\[--radio-checked-bg\:var\(--color-lime-300\)\] {
    --radio-checked-bg: var(--color-lime-300);
  }
  .\[--radio-checked-bg\:var\(--color-neutral-600\)\] {
    --radio-checked-bg: var(--color-neutral-600);
  }
  .\[--radio-checked-bg\:var\(--color-neutral-900\)\] {
    --radio-checked-bg: var(--color-neutral-900);
  }
  .\[--radio-checked-bg\:var\(--color-orange-500\)\] {
    --radio-checked-bg: var(--color-orange-500);
  }
  .\[--radio-checked-bg\:var\(--color-pink-500\)\] {
    --radio-checked-bg: var(--color-pink-500);
  }
  .\[--radio-checked-bg\:var\(--color-purple-500\)\] {
    --radio-checked-bg: var(--color-purple-500);
  }
  .\[--radio-checked-bg\:var\(--color-red-600\)\] {
    --radio-checked-bg: var(--color-red-600);
  }
  .\[--radio-checked-bg\:var\(--color-rose-500\)\] {
    --radio-checked-bg: var(--color-rose-500);
  }
  .\[--radio-checked-bg\:var\(--color-sky-500\)\] {
    --radio-checked-bg: var(--color-sky-500);
  }
  .\[--radio-checked-bg\:var\(--color-teal-600\)\] {
    --radio-checked-bg: var(--color-teal-600);
  }
  .\[--radio-checked-bg\:var\(--color-violet-500\)\] {
    --radio-checked-bg: var(--color-violet-500);
  }
  .\[--radio-checked-bg\:var\(--color-white\)\] {
    --radio-checked-bg: var(--color-white);
  }
  .\[--radio-checked-bg\:var\(--color-yellow-300\)\] {
    --radio-checked-bg: var(--color-yellow-300);
  }
  .\[--radio-checked-border\:var\(--color-amber-500\)\]\/80 {
    --radio-checked-border: color-mix(in srgb, oklch(76.9% 0.188 70.08) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-amber-500) 80%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-blue-700\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(48.8% 0.243 264.376) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-blue-700) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-cyan-400\)\]\/80 {
    --radio-checked-border: color-mix(in srgb, oklch(78.9% 0.154 211.53) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-cyan-400) 80%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-emerald-700\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(50.8% 0.118 165.612) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-emerald-700) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-fuchsia-600\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(59.1% 0.293 322.896) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-fuchsia-600) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-green-700\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(52.7% 0.154 150.069) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-green-700) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-indigo-600\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(51.1% 0.262 276.966) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-indigo-600) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-lime-400\)\]\/80 {
    --radio-checked-border: color-mix(in srgb, oklch(84.1% 0.238 128.85) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-lime-400) 80%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-neutral-700\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, rgb(55, 65, 81) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-neutral-700) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-neutral-950\)\]\/15 {
    --radio-checked-border: color-mix(in srgb, oklch(14.5% 0 0) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-neutral-950) 15%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-neutral-950\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(14.5% 0 0) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-neutral-950) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-orange-600\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(64.6% 0.222 41.116) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-orange-600) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-pink-600\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(59.2% 0.249 0.584) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-pink-600) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-purple-600\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(55.8% 0.288 302.321) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-purple-600) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-red-700\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(50.5% 0.213 27.518) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-red-700) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-rose-600\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(58.6% 0.253 17.585) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-rose-600) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-sky-600\)\]\/80 {
    --radio-checked-border: color-mix(in srgb, oklch(58.8% 0.158 241.966) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-sky-600) 80%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-teal-700\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(51.1% 0.096 186.391) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-teal-700) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-violet-600\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(54.1% 0.281 293.009) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-violet-600) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-yellow-400\)\]\/80 {
    --radio-checked-border: color-mix(in srgb, oklch(85.2% 0.199 91.936) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-yellow-400) 80%, transparent);
    }
  }
  .\[--radio-checked-indicator\:var\(--color-amber-950\)\] {
    --radio-checked-indicator: var(--color-amber-950);
  }
  .\[--radio-checked-indicator\:var\(--color-cyan-950\)\] {
    --radio-checked-indicator: var(--color-cyan-950);
  }
  .\[--radio-checked-indicator\:var\(--color-lime-950\)\] {
    --radio-checked-indicator: var(--color-lime-950);
  }
  .\[--radio-checked-indicator\:var\(--color-neutral-900\)\] {
    --radio-checked-indicator: var(--color-neutral-900);
  }
  .\[--radio-checked-indicator\:var\(--color-white\)\] {
    --radio-checked-indicator: var(--color-white);
  }
  .\[--radio-checked-indicator\:var\(--color-yellow-950\)\] {
    --radio-checked-indicator: var(--color-yellow-950);
  }
  .\[--radio-indicator\:transparent\] {
    --radio-indicator: transparent;
  }
  .\[--switch-bg-ring\:var\(--color-amber-500\)\]\/80 {
    --switch-bg-ring: color-mix(in srgb, oklch(76.9% 0.188 70.08) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-amber-500) 80%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-black\)\]\/15 {
    --switch-bg-ring: color-mix(in srgb, #000 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-black) 15%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-blue-700\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(48.8% 0.243 264.376) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-blue-700) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-cyan-400\)\]\/80 {
    --switch-bg-ring: color-mix(in srgb, oklch(78.9% 0.154 211.53) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-cyan-400) 80%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-emerald-600\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(59.6% 0.145 163.225) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-emerald-600) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-fuchsia-600\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(59.1% 0.293 322.896) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-fuchsia-600) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-green-700\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(52.7% 0.154 150.069) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-green-700) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-indigo-600\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(51.1% 0.262 276.966) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-indigo-600) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-lime-400\)\]\/80 {
    --switch-bg-ring: color-mix(in srgb, oklch(84.1% 0.238 128.85) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-lime-400) 80%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-neutral-700\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, rgb(55, 65, 81) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-neutral-700) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-neutral-950\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(14.5% 0 0) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-neutral-950) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-orange-600\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(64.6% 0.222 41.116) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-orange-600) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-pink-600\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(59.2% 0.249 0.584) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-pink-600) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-purple-600\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(55.8% 0.288 302.321) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-purple-600) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-red-700\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(50.5% 0.213 27.518) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-red-700) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-rose-600\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(58.6% 0.253 17.585) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-rose-600) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-sky-600\)\]\/80 {
    --switch-bg-ring: color-mix(in srgb, oklch(58.8% 0.158 241.966) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-sky-600) 80%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-teal-700\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(51.1% 0.096 186.391) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-teal-700) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-violet-600\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(54.1% 0.281 293.009) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-violet-600) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-yellow-400\)\]\/80 {
    --switch-bg-ring: color-mix(in srgb, oklch(85.2% 0.199 91.936) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-yellow-400) 80%, transparent);
    }
  }
  .\[--switch-bg\:var\(--color-amber-400\)\] {
    --switch-bg: var(--color-amber-400);
  }
  .\[--switch-bg\:var\(--color-blue-600\)\] {
    --switch-bg: var(--color-blue-600);
  }
  .\[--switch-bg\:var\(--color-cyan-300\)\] {
    --switch-bg: var(--color-cyan-300);
  }
  .\[--switch-bg\:var\(--color-emerald-500\)\] {
    --switch-bg: var(--color-emerald-500);
  }
  .\[--switch-bg\:var\(--color-fuchsia-500\)\] {
    --switch-bg: var(--color-fuchsia-500);
  }
  .\[--switch-bg\:var\(--color-green-600\)\] {
    --switch-bg: var(--color-green-600);
  }
  .\[--switch-bg\:var\(--color-indigo-500\)\] {
    --switch-bg: var(--color-indigo-500);
  }
  .\[--switch-bg\:var\(--color-lime-300\)\] {
    --switch-bg: var(--color-lime-300);
  }
  .\[--switch-bg\:var\(--color-neutral-600\)\] {
    --switch-bg: var(--color-neutral-600);
  }
  .\[--switch-bg\:var\(--color-neutral-900\)\] {
    --switch-bg: var(--color-neutral-900);
  }
  .\[--switch-bg\:var\(--color-orange-500\)\] {
    --switch-bg: var(--color-orange-500);
  }
  .\[--switch-bg\:var\(--color-pink-500\)\] {
    --switch-bg: var(--color-pink-500);
  }
  .\[--switch-bg\:var\(--color-purple-500\)\] {
    --switch-bg: var(--color-purple-500);
  }
  .\[--switch-bg\:var\(--color-red-600\)\] {
    --switch-bg: var(--color-red-600);
  }
  .\[--switch-bg\:var\(--color-rose-500\)\] {
    --switch-bg: var(--color-rose-500);
  }
  .\[--switch-bg\:var\(--color-sky-500\)\] {
    --switch-bg: var(--color-sky-500);
  }
  .\[--switch-bg\:var\(--color-teal-600\)\] {
    --switch-bg: var(--color-teal-600);
  }
  .\[--switch-bg\:var\(--color-violet-500\)\] {
    --switch-bg: var(--color-violet-500);
  }
  .\[--switch-bg\:var\(--color-yellow-300\)\] {
    --switch-bg: var(--color-yellow-300);
  }
  .\[--switch-bg\:white\] {
    --switch-bg: white;
  }
  .\[--switch-ring\:transparent\] {
    --switch-ring: transparent;
  }
  .\[--switch-ring\:var\(--color-blue-700\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(48.8% 0.243 264.376) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-blue-700) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-emerald-600\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(59.6% 0.145 163.225) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-emerald-600) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-fuchsia-600\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(59.1% 0.293 322.896) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-fuchsia-600) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-green-700\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(52.7% 0.154 150.069) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-green-700) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-indigo-600\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(51.1% 0.262 276.966) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-indigo-600) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-neutral-700\)\]\/90 {
    --switch-ring: color-mix(in srgb, rgb(55, 65, 81) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-neutral-700) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-neutral-950\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(14.5% 0 0) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-neutral-950) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-orange-600\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(64.6% 0.222 41.116) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-orange-600) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-pink-600\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(59.2% 0.249 0.584) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-pink-600) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-purple-600\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(55.8% 0.288 302.321) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-purple-600) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-red-700\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(50.5% 0.213 27.518) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-red-700) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-rose-600\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(58.6% 0.253 17.585) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-rose-600) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-sky-600\)\]\/80 {
    --switch-ring: color-mix(in srgb, oklch(58.8% 0.158 241.966) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-sky-600) 80%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-teal-700\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(51.1% 0.096 186.391) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-teal-700) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-violet-600\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(54.1% 0.281 293.009) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-violet-600) 90%, transparent);
    }
  }
  .\[--switch-shadow\:transparent\] {
    --switch-shadow: transparent;
  }
  .\[--switch-shadow\:var\(--color-black\)\]\/10 {
    --switch-shadow: color-mix(in srgb, #000 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-black) 10%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-blue-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(37.9% 0.146 265.522) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-blue-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-emerald-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(37.8% 0.077 168.94) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-emerald-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-fuchsia-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(40.1% 0.17 325.612) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-fuchsia-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-green-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(39.3% 0.095 152.535) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-green-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-indigo-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(35.9% 0.144 278.697) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-indigo-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-orange-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(40.8% 0.123 38.172) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-orange-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-pink-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(40.8% 0.153 2.432) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-pink-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-purple-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(38.1% 0.176 304.987) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-purple-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-red-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(39.6% 0.141 25.723) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-red-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-rose-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(41% 0.159 10.272) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-rose-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-sky-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(39.1% 0.09 240.876) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-sky-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-teal-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(38.6% 0.063 188.416) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-teal-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-violet-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(38% 0.189 293.745) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-violet-900) 20%, transparent);
    }
  }
  .\[--switch\:var\(--color-amber-950\)\] {
    --switch: var(--color-amber-950);
  }
  .\[--switch\:var\(--color-cyan-950\)\] {
    --switch: var(--color-cyan-950);
  }
  .\[--switch\:var\(--color-lime-950\)\] {
    --switch: var(--color-lime-950);
  }
  .\[--switch\:var\(--color-neutral-950\)\] {
    --switch: var(--color-neutral-950);
  }
  .\[--switch\:var\(--color-yellow-950\)\] {
    --switch: var(--color-yellow-950);
  }
  .\[--switch\:white\] {
    --switch: white;
  }
  .aspect-h-1 {
    --tw-aspect-h: 1;
  }
  .aspect-h-3 {
    --tw-aspect-h: 3;
  }
  .aspect-h-4 {
    --tw-aspect-h: 4;
  }
  .aspect-h-5 {
    --tw-aspect-h: 5;
  }
  .aspect-h-6 {
    --tw-aspect-h: 6;
  }
  .aspect-h-7 {
    --tw-aspect-h: 7;
  }
  .aspect-h-9 {
    --tw-aspect-h: 9;
  }
  .aspect-h-10 {
    --tw-aspect-h: 10;
  }
  .aspect-h-11 {
    --tw-aspect-h: 11;
  }
  .aspect-h-16 {
    --tw-aspect-h: 16;
  }
  .ring-inset {
    --tw-ring-inset: inset;
  }
  .\*\:col-start-1 {
    :is(& > *) {
      grid-column-start: 1;
    }
  }
  .\*\:row-start-1 {
    :is(& > *) {
      grid-row-start: 1;
    }
  }
  .\*\:rounded-\(--avatar-radius\) {
    :is(& > *) {
      border-radius: var(--avatar-radius);
    }
  }
  .\*\:rounded-full {
    :is(& > *) {
      border-radius: calc(infinity * 1px);
    }
  }
  .group-hover\:max-h-96 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        max-height: calc(var(--spacing) * 96);
      }
    }
  }
  .group-hover\:w-80 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        width: calc(var(--spacing) * 80);
      }
    }
  }
  .group-hover\:translate-x-1 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:-translate-y-1 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:scale-105 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .group-hover\:scale-110 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .group-hover\:rotate-90 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        rotate: 90deg;
      }
    }
  }
  .group-hover\:border-\[\#0480ea\]\/40 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        border-color: color-mix(in oklab, #0480ea 40%, transparent);
      }
    }
  }
  .group-hover\:border-blue-300 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        border-color: var(--color-blue-300);
      }
    }
  }
  .group-hover\:bg-\[\#0480ea\]\/20 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: color-mix(in oklab, #0480ea 20%, transparent);
      }
    }
  }
  .group-hover\:text-\[\#0480ea\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: #0480ea;
      }
    }
  }
  .group-hover\:text-blue-600 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-blue-600);
      }
    }
  }
  .group-hover\:text-neutral-700 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-neutral-700);
      }
    }
  }
  .group-hover\:text-neutral-950 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-neutral-950);
      }
    }
  }
  .group-hover\:opacity-0 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 0%;
      }
    }
  }
  .group-hover\:opacity-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .group-hover\:brightness-75 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-brightness: brightness(75%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .group-hover\/CardCategory7\:brightness-75 {
    &:is(:where(.group\/CardCategory7):hover *) {
      @media (hover: hover) {
        --tw-brightness: brightness(75%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .group-hover\/cardGallerySlider\:opacity-100 {
    &:is(:where(.group\/cardGallerySlider):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .group-has-data-disabled\:stroke-neutral-600 {
    &:is(:where(.group):has(*[data-disabled]) *) {
      stroke: var(--color-neutral-600);
    }
  }
  .group-data-active\:border-neutral-950\/20 {
    &:is(:where(.group)[data-active] *) {
      border-color: color-mix(in srgb, oklch(14.5% 0 0) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-neutral-950) 20%, transparent);
      }
    }
  }
  .group-data-checked\:translate-x-4 {
    &:is(:where(.group)[data-checked] *) {
      --tw-translate-x: calc(var(--spacing) * 4);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .group-data-checked\:border-transparent {
    &:is(:where(.group)[data-checked] *) {
      border-color: transparent;
    }
  }
  .group-data-checked\:bg-\(--checkbox-checked-border\) {
    &:is(:where(.group)[data-checked] *) {
      background-color: var(--checkbox-checked-border);
    }
  }
  .group-data-checked\:bg-\(--radio-checked-border\) {
    &:is(:where(.group)[data-checked] *) {
      background-color: var(--radio-checked-border);
    }
  }
  .group-data-checked\:bg-\(--switch\) {
    &:is(:where(.group)[data-checked] *) {
      background-color: var(--switch);
    }
  }
  .group-data-checked\:opacity-100 {
    &:is(:where(.group)[data-checked] *) {
      opacity: 100%;
    }
  }
  .group-data-checked\:shadow-\(--switch-shadow\) {
    &:is(:where(.group)[data-checked] *) {
      --tw-shadow: var(--switch-shadow);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .group-data-checked\:ring-\(--switch-ring\) {
    &:is(:where(.group)[data-checked] *) {
      --tw-ring-color: var(--switch-ring);
    }
  }
  .group-data-checked\:\[--radio-indicator\:var\(--radio-checked-indicator\)\] {
    &:is(:where(.group)[data-checked] *) {
      --radio-indicator: var(--radio-checked-indicator);
    }
  }
  .group-data-disabled\:border-neutral-950\/20 {
    &:is(:where(.group)[data-disabled] *) {
      border-color: color-mix(in srgb, oklch(14.5% 0 0) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-neutral-950) 20%, transparent);
      }
    }
  }
  .group-data-disabled\:border-neutral-950\/25 {
    &:is(:where(.group)[data-disabled] *) {
      border-color: color-mix(in srgb, oklch(14.5% 0 0) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-neutral-950) 25%, transparent);
      }
    }
  }
  .group-data-disabled\:bg-neutral-950\/5 {
    &:is(:where(.group)[data-disabled] *) {
      background-color: color-mix(in srgb, oklch(14.5% 0 0) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-950) 5%, transparent);
      }
    }
  }
  .group-data-disabled\:stroke-neutral-600 {
    &:is(:where(.group)[data-disabled] *) {
      stroke: var(--color-neutral-600);
    }
  }
  .group-data-disabled\:stroke-zinc-600 {
    &:is(:where(.group)[data-disabled] *) {
      stroke: var(--color-zinc-600);
    }
  }
  .group-data-disabled\:opacity-50 {
    &:is(:where(.group)[data-disabled] *) {
      opacity: 50%;
    }
  }
  .group-data-disabled\:opacity-100 {
    &:is(:where(.group)[data-disabled] *) {
      opacity: 100%;
    }
  }
  .group-data-disabled\:\[--checkbox-check\:var\(--color-neutral-950\)\]\/50 {
    &:is(:where(.group)[data-disabled] *) {
      --checkbox-check: color-mix(in srgb, oklch(14.5% 0 0) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --checkbox-check: color-mix(in oklab, var(--color-neutral-950) 50%, transparent);
      }
    }
  }
  .group-data-disabled\:\[--radio-checked-indicator\:var\(--color-neutral-950\)\]\/50 {
    &:is(:where(.group)[data-disabled] *) {
      --radio-checked-indicator: color-mix(in srgb, oklch(14.5% 0 0) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --radio-checked-indicator: color-mix(in oklab, var(--color-neutral-950) 50%, transparent);
      }
    }
  }
  .group-data-checked\:group-data-disabled\:bg-white {
    &:is(:where(.group)[data-checked] *) {
      &:is(:where(.group)[data-disabled] *) {
        background-color: var(--color-white);
      }
    }
  }
  .group-data-checked\:group-data-disabled\:shadow-sm {
    &:is(:where(.group)[data-checked] *) {
      &:is(:where(.group)[data-disabled] *) {
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .group-data-checked\:group-data-disabled\:ring-black\/5 {
    &:is(:where(.group)[data-checked] *) {
      &:is(:where(.group)[data-disabled] *) {
        --tw-ring-color: color-mix(in srgb, #000 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--color-black) 5%, transparent);
        }
      }
    }
  }
  .group-data-focus\:outline {
    &:is(:where(.group)[data-focus] *) {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .group-data-focus\:outline-2 {
    &:is(:where(.group)[data-focus] *) {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
  }
  .group-data-focus\:outline-offset-2 {
    &:is(:where(.group)[data-focus] *) {
      outline-offset: 2px;
    }
  }
  .group-data-focus\:outline-blue-500 {
    &:is(:where(.group)[data-focus] *) {
      outline-color: var(--color-blue-500);
    }
  }
  .group-data-focus\/option\:text-white {
    &:is(:where(.group\/option)[data-focus] *) {
      color: var(--color-white);
    }
  }
  .group-data-hover\:border-neutral-950\/20 {
    &:is(:where(.group)[data-hover] *) {
      border-color: color-mix(in srgb, oklch(14.5% 0 0) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-neutral-950) 20%, transparent);
      }
    }
  }
  .group-data-hover\:border-neutral-950\/30 {
    &:is(:where(.group)[data-hover] *) {
      border-color: color-mix(in srgb, oklch(14.5% 0 0) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-neutral-950) 30%, transparent);
      }
    }
  }
  .group-data-hover\:bg-amber-400\/30 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(82.8% 0.189 84.429) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-amber-400) 30%, transparent);
      }
    }
  }
  .group-data-hover\:bg-blue-500\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(62.3% 0.214 259.815) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-blue-500) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-cyan-400\/30 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(78.9% 0.154 211.53) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-cyan-400) 30%, transparent);
      }
    }
  }
  .group-data-hover\:bg-emerald-500\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(69.6% 0.17 162.48) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-emerald-500) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-fuchsia-400\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(74% 0.238 322.16) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-fuchsia-400) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-green-500\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(72.3% 0.219 149.579) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-green-500) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-indigo-500\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(58.5% 0.233 277.117) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-indigo-500) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-lime-400\/30 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(84.1% 0.238 128.85) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-lime-400) 30%, transparent);
      }
    }
  }
  .group-data-hover\:bg-neutral-600\/20 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, rgb(75, 85, 99) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-600) 20%, transparent);
      }
    }
  }
  .group-data-hover\:bg-orange-500\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(70.5% 0.213 47.604) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-orange-500) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-pink-400\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(71.8% 0.202 349.761) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-pink-400) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-purple-500\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(62.7% 0.265 303.9) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-purple-500) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-red-500\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-red-500) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-rose-400\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(71.2% 0.194 13.428) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-rose-400) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-sky-500\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(68.5% 0.169 237.323) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-sky-500) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-teal-500\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(70.4% 0.14 182.503) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-teal-500) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-violet-500\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(60.6% 0.25 292.717) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-violet-500) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-yellow-400\/30 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(85.2% 0.199 91.936) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-yellow-400) 30%, transparent);
      }
    }
  }
  .group-data-hover\:stroke-zinc-700 {
    &:is(:where(.group)[data-hover] *) {
      stroke: var(--color-zinc-700);
    }
  }
  .group-data-hover\:\[--radio-indicator\:var\(--color-neutral-900\)\]\/10 {
    &:is(:where(.group)[data-hover] *) {
      --radio-indicator: color-mix(in srgb, rgb(17, 24, 39) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --radio-indicator: color-mix(in oklab, var(--color-neutral-900) 10%, transparent);
      }
    }
  }
  .group-data-hover\:group-data-checked\:border-transparent {
    &:is(:where(.group)[data-hover] *) {
      &:is(:where(.group)[data-checked] *) {
        border-color: transparent;
      }
    }
  }
  .group-data-hover\:group-data-checked\:\[--radio-indicator\:var\(--radio-checked-indicator\)\] {
    &:is(:where(.group)[data-hover] *) {
      &:is(:where(.group)[data-checked] *) {
        --radio-indicator: var(--radio-checked-indicator);
      }
    }
  }
  .group-data-indeterminate\:opacity-0 {
    &:is(:where(.group)[data-indeterminate] *) {
      opacity: 0%;
    }
  }
  .group-data-indeterminate\:opacity-100 {
    &:is(:where(.group)[data-indeterminate] *) {
      opacity: 100%;
    }
  }
  .group-data-invalid\:border-red-500 {
    &:is(:where(.group)[data-invalid] *) {
      border-color: var(--color-red-500);
    }
  }
  .group-data-hover\:group-data-invalid\:border-red-500 {
    &:is(:where(.group)[data-hover] *) {
      &:is(:where(.group)[data-invalid] *) {
        border-color: var(--color-red-500);
      }
    }
  }
  .group-data-open\:visible {
    &:is(:where(.group)[data-open] *) {
      visibility: visible;
    }
  }
  .group-data-open\:rotate-180 {
    &:is(:where(.group)[data-open] *) {
      rotate: 180deg;
    }
  }
  .group-data-open\:shadow-lg {
    &:is(:where(.group)[data-open] *) {
      --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .group-data-selected\:block {
    &:is(:where(.group)[data-selected] *) {
      display: block;
    }
  }
  .group-data-selected\/option\:inline {
    &:is(:where(.group\/option)[data-selected] *) {
      display: inline;
    }
  }
  .group-data-selected\/tab\:block {
    &:is(:where(.group\/tab)[data-selected] *) {
      display: block;
    }
  }
  .placeholder\:truncate {
    &::placeholder {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }
  .placeholder\:text-gray-400 {
    &::placeholder {
      color: var(--color-gray-400);
    }
  }
  .placeholder\:text-neutral-500 {
    &::placeholder {
      color: var(--color-neutral-500);
    }
  }
  .placeholder\:text-zinc-500 {
    &::placeholder {
      color: var(--color-zinc-500);
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:-inset-px {
    &::before {
      content: var(--tw-content);
      inset: -1px;
    }
  }
  .before\:inset-0 {
    &::before {
      content: var(--tw-content);
      inset: calc(var(--spacing) * 0);
    }
  }
  .before\:inset-px {
    &::before {
      content: var(--tw-content);
      inset: 1px;
    }
  }
  .before\:-z-10 {
    &::before {
      content: var(--tw-content);
      z-index: calc(10 * -1);
    }
  }
  .before\:w-2 {
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 2);
    }
  }
  .before\:min-w-0 {
    &::before {
      content: var(--tw-content);
      min-width: calc(var(--spacing) * 0);
    }
  }
  .before\:shrink {
    &::before {
      content: var(--tw-content);
      flex-shrink: 1;
    }
  }
  .before\:rounded-\[calc\(0\.3125rem-1px\)\] {
    &::before {
      content: var(--tw-content);
      border-radius: calc(0.3125rem - 1px);
    }
  }
  .before\:rounded-\[calc\(var\(--radius-lg\)-1px\)\] {
    &::before {
      content: var(--tw-content);
      border-radius: calc(var(--radius-lg) - 1px);
    }
  }
  .before\:rounded-full {
    &::before {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
  .before\:rounded-lg {
    &::before {
      content: var(--tw-content);
      border-radius: var(--radius-lg);
    }
  }
  .before\:bg-\(--btn-bg\) {
    &::before {
      content: var(--tw-content);
      background-color: var(--btn-bg);
    }
  }
  .before\:bg-neutral-950\/5 {
    &::before {
      content: var(--tw-content);
      background-color: color-mix(in srgb, oklch(14.5% 0 0) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-950) 5%, transparent);
      }
    }
  }
  .before\:bg-white {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-white);
    }
  }
  .before\:shadow-sm {
    &::before {
      content: var(--tw-content);
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .group-data-checked\:before\:bg-\(--checkbox-checked-bg\) {
    &:is(:where(.group)[data-checked] *) {
      &::before {
        content: var(--tw-content);
        background-color: var(--checkbox-checked-bg);
      }
    }
  }
  .group-data-checked\:before\:bg-\(--radio-checked-bg\) {
    &:is(:where(.group)[data-checked] *) {
      &::before {
        content: var(--tw-content);
        background-color: var(--radio-checked-bg);
      }
    }
  }
  .group-data-disabled\:before\:bg-transparent {
    &:is(:where(.group)[data-disabled] *) {
      &::before {
        content: var(--tw-content);
        background-color: transparent;
      }
    }
  }
  .after\:pointer-events-none {
    &::after {
      content: var(--tw-content);
      pointer-events: none;
    }
  }
  .after\:absolute {
    &::after {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .after\:inset-0 {
    &::after {
      content: var(--tw-content);
      inset: calc(var(--spacing) * 0);
    }
  }
  .after\:-z-10 {
    &::after {
      content: var(--tw-content);
      z-index: calc(10 * -1);
    }
  }
  .after\:rounded-\[calc\(0\.3125rem-1px\)\] {
    &::after {
      content: var(--tw-content);
      border-radius: calc(0.3125rem - 1px);
    }
  }
  .after\:rounded-full {
    &::after {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
  .after\:rounded-lg {
    &::after {
      content: var(--tw-content);
      border-radius: var(--radius-lg);
    }
  }
  .after\:shadow-\[inset_0_1px_--theme\(--color-white\/15\%\)\] {
    &::after {
      content: var(--tw-content);
      --tw-shadow: inset 0 1px var(--tw-shadow-color, color-mix(in srgb, #fff 15%, transparent));
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow: inset 0 1px var(--tw-shadow-color, color-mix(in oklab, var(--color-white) 15%, transparent));
      }
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .after\:ring-transparent {
    &::after {
      content: var(--tw-content);
      --tw-ring-color: transparent;
    }
  }
  .after\:ring-inset {
    &::after {
      content: var(--tw-content);
      --tw-ring-inset: inset;
    }
  }
  .first\:ml-0 {
    &:first-child {
      margin-left: calc(var(--spacing) * 0);
    }
  }
  .first\:border-l-0 {
    &:first-child {
      border-left-style: var(--tw-border-style);
      border-left-width: 0px;
    }
  }
  .first\:border-none {
    &:first-child {
      --tw-border-style: none;
      border-style: none;
    }
  }
  .first\:pt-0 {
    &:first-child {
      padding-top: calc(var(--spacing) * 0);
    }
  }
  .first\:pl-\(--gutter\,--spacing\(2\)\) {
    &:first-child {
      padding-left: var(--gutter,calc(var(--spacing) * 2));
    }
  }
  .last\:pr-\(--gutter\,--spacing\(2\)\) {
    &:last-child {
      padding-right: var(--gutter,calc(var(--spacing) * 2));
    }
  }
  .last\:pb-0 {
    &:last-child {
      padding-bottom: calc(var(--spacing) * 0);
    }
  }
  .even\:bg-neutral-950\/\[2\.5\%\] {
    &:nth-child(even) {
      background-color: color-mix(in srgb, oklch(14.5% 0 0) 2.5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-950) 2.5%, transparent);
      }
    }
  }
  .empty\:invisible {
    &:empty {
      visibility: hidden;
    }
  }
  .focus-within\:ring-2 {
    &:focus-within {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-within\:ring-primary-500 {
    &:focus-within {
      --tw-ring-color: var(--color-primary-500);
    }
  }
  .focus-within\:ring-offset-2 {
    &:focus-within {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus-within\:outline-hidden {
    &:focus-within {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
  }
  .hover\:z-50 {
    &:hover {
      @media (hover: hover) {
        z-index: 50;
      }
    }
  }
  .hover\:translate-x-2 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 2);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:-translate-y-1 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:-translate-y-2 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -2);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:translate-y-0\.5 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * 0.5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:scale-105 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:rotate-90 {
    &:hover {
      @media (hover: hover) {
        rotate: 90deg;
      }
    }
  }
  .hover\:transform {
    &:hover {
      @media (hover: hover) {
        transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
      }
    }
  }
  .hover\:border-\[\#0480ea\]\/30 {
    &:hover {
      @media (hover: hover) {
        border-color: color-mix(in oklab, #0480ea 30%, transparent);
      }
    }
  }
  .hover\:border-\[\#0480ea\]\/40 {
    &:hover {
      @media (hover: hover) {
        border-color: color-mix(in oklab, #0480ea 40%, transparent);
      }
    }
  }
  .hover\:border-gray-800 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-gray-800);
      }
    }
  }
  .hover\:border-neutral-200 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-neutral-200);
      }
    }
  }
  .hover\:border-neutral-300 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-neutral-300);
      }
    }
  }
  .hover\:border-neutral-400 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-neutral-400);
      }
    }
  }
  .hover\:border-primary-300 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-primary-300);
      }
    }
  }
  .hover\:bg-\[\#0480ea\] {
    &:hover {
      @media (hover: hover) {
        background-color: #0480ea;
      }
    }
  }
  .hover\:bg-\[\#0480ea\]\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, #0480ea 10%, transparent);
      }
    }
  }
  .hover\:bg-\[\#0480ea\]\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, #0480ea 20%, transparent);
      }
    }
  }
  .hover\:bg-\[\#0480ea\]\/90 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, #0480ea 90%, transparent);
      }
    }
  }
  .hover\:bg-\[\#f07499\]\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, #f07499 20%, transparent);
      }
    }
  }
  .hover\:bg-black\/30 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #000 30%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-black) 30%, transparent);
        }
      }
    }
  }
  .hover\:bg-black\/50 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #000 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
        }
      }
    }
  }
  .hover\:bg-black\/70 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #000 70%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-black) 70%, transparent);
        }
      }
    }
  }
  .hover\:bg-gray-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-50);
      }
    }
  }
  .hover\:bg-gray-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
  }
  .hover\:bg-gray-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-800);
      }
    }
  }
  .hover\:bg-green-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-100);
      }
    }
  }
  .hover\:bg-indigo-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-500);
      }
    }
  }
  .hover\:bg-neutral-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-50);
      }
    }
  }
  .hover\:bg-neutral-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-100);
      }
    }
  }
  .hover\:bg-neutral-200\/70 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, rgb(229, 231, 235) 70%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-neutral-200) 70%, transparent);
        }
      }
    }
  }
  .hover\:bg-neutral-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-900);
      }
    }
  }
  .hover\:bg-neutral-950\/5 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(14.5% 0 0) 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-neutral-950) 5%, transparent);
        }
      }
    }
  }
  .hover\:bg-neutral-950\/\[2\.5\%\] {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(14.5% 0 0) 2.5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-neutral-950) 2.5%, transparent);
        }
      }
    }
  }
  .hover\:bg-orange-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-orange-100);
      }
    }
  }
  .hover\:bg-primary-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary-700);
      }
    }
  }
  .hover\:bg-primary-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary-900);
      }
    }
  }
  .hover\:bg-red-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-600);
      }
    }
  }
  .hover\:bg-white {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-white);
      }
    }
  }
  .hover\:bg-white\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-white\/50 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
        }
      }
    }
  }
  .hover\:bg-white\/70 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 70%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 70%, transparent);
        }
      }
    }
  }
  .hover\:from-\[\#0480ea\]\/90 {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-from: color-mix(in oklab, #0480ea 90%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .hover\:from-blue-600 {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-from: var(--color-blue-600);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .hover\:to-\[\#f07499\]\/90 {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-to: color-mix(in oklab, #f07499 90%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .hover\:to-blue-600\/90 {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-to: color-mix(in srgb, oklch(54.6% 0.245 262.881) 90%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-gradient-to: color-mix(in oklab, var(--color-blue-600) 90%, transparent);
        }
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .hover\:to-teal-600 {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-to: var(--color-teal-600);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .hover\:text-\[\#0480ea\] {
    &:hover {
      @media (hover: hover) {
        color: #0480ea;
      }
    }
  }
  .hover\:text-\[\#f07499\] {
    &:hover {
      @media (hover: hover) {
        color: #f07499;
      }
    }
  }
  .hover\:text-black {
    &:hover {
      @media (hover: hover) {
        color: var(--color-black);
      }
    }
  }
  .hover\:text-blue-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-600);
      }
    }
  }
  .hover\:text-gray-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-800);
      }
    }
  }
  .hover\:text-gray-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-900);
      }
    }
  }
  .hover\:text-neutral-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-700);
      }
    }
  }
  .hover\:text-neutral-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-900);
      }
    }
  }
  .hover\:text-primary-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary-500);
      }
    }
  }
  .hover\:text-primary-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary-600);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .hover\:opacity-100 {
    &:hover {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .hover\:shadow-2xl {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-lg {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-md {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-xl {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:ring-1 {
    &:hover {
      @media (hover: hover) {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-\[\#0480ea\]\/10 {
    &:hover {
      @media (hover: hover) {
        --tw-shadow-color: color-mix(in srgb, #0480ea 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, #0480ea 10%, transparent) var(--tw-shadow-alpha), transparent);
        }
      }
    }
  }
  .hover\:ring-\[\#0480ea\]\/20 {
    &:hover {
      @media (hover: hover) {
        --tw-ring-color: color-mix(in oklab, #0480ea 20%, transparent);
      }
    }
  }
  .hover\:brightness-75 {
    &:hover {
      @media (hover: hover) {
        --tw-brightness: brightness(75%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .focus\:border-\[\#0480ea\] {
    &:focus {
      border-color: #0480ea;
    }
  }
  .focus\:border-primary-300 {
    &:focus {
      border-color: var(--color-primary-300);
    }
  }
  .focus\:border-transparent {
    &:focus {
      border-color: transparent;
    }
  }
  .focus\:placeholder-neutral-300 {
    &:focus {
      &::placeholder {
        color: var(--color-neutral-300);
      }
    }
  }
  .focus\:ring-0 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-3 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-\[\#0480ea\]\/20 {
    &:focus {
      --tw-ring-color: color-mix(in oklab, #0480ea 20%, transparent);
    }
  }
  .focus\:ring-blue-500 {
    &:focus {
      --tw-ring-color: var(--color-blue-500);
    }
  }
  .focus\:ring-indigo-600 {
    &:focus {
      --tw-ring-color: var(--color-indigo-600);
    }
  }
  .focus\:ring-primary-200\/50 {
    &:focus {
      --tw-ring-color: color-mix(in srgb, rgb(191, 219, 254) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-primary-200) 50%, transparent);
      }
    }
  }
  .focus\:ring-primary-500 {
    &:focus {
      --tw-ring-color: var(--color-primary-500);
    }
  }
  .focus\:ring-primary-600 {
    &:focus {
      --tw-ring-color: var(--color-primary-600);
    }
  }
  .focus\:ring-offset-2 {
    &:focus {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus\:outline-hidden {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .focus\:ring-inset {
    &:focus {
      --tw-ring-inset: inset;
    }
  }
  .focus\:not-data-focus\:outline-hidden {
    &:focus {
      &:not(*[data-focus]) {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
    }
  }
  .focus-visible\:ring {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-visible\:ring-2 {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-visible\:ring-3 {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-visible\:ring-orange-500 {
    &:focus-visible {
      --tw-ring-color: var(--color-orange-500);
    }
  }
  .focus-visible\:ring-orange-500\/50 {
    &:focus-visible {
      --tw-ring-color: color-mix(in srgb, oklch(70.5% 0.213 47.604) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-orange-500) 50%, transparent);
      }
    }
  }
  .focus-visible\:ring-white\/75 {
    &:focus-visible {
      --tw-ring-color: color-mix(in srgb, #fff 75%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-white) 75%, transparent);
      }
    }
  }
  .focus-visible\:outline-hidden {
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
  }
  .focus-visible\:outline-0 {
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 0px;
    }
  }
  .focus-visible\:outline-2 {
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
  }
  .focus-visible\:outline-offset-2 {
    &:focus-visible {
      outline-offset: 2px;
    }
  }
  .focus-visible\:outline-indigo-600 {
    &:focus-visible {
      outline-color: var(--color-indigo-600);
    }
  }
  .focus-visible\:outline-none {
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .disabled\:cursor-not-allowed {
    &:disabled {
      cursor: not-allowed;
    }
  }
  .disabled\:opacity-50 {
    &:disabled {
      opacity: 50%;
    }
  }
  .has-data-disabled\:opacity-50 {
    &:has(*[data-disabled]) {
      opacity: 50%;
    }
  }
  .has-data-disabled\:before\:bg-neutral-950\/5 {
    &:has(*[data-disabled]) {
      &::before {
        content: var(--tw-content);
        background-color: color-mix(in srgb, oklch(14.5% 0 0) 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-neutral-950) 5%, transparent);
        }
      }
    }
  }
  .has-data-disabled\:before\:bg-zinc-950\/5 {
    &:has(*[data-disabled]) {
      &::before {
        content: var(--tw-content);
        background-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-zinc-950) 5%, transparent);
        }
      }
    }
  }
  .has-data-disabled\:before\:shadow-none {
    &:has(*[data-disabled]) {
      &::before {
        content: var(--tw-content);
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .has-data-focus\:after\:ring-2 {
    &:has(*[data-focus]) {
      &::after {
        content: var(--tw-content);
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .has-data-focus\:after\:ring-blue-500 {
    &:has(*[data-focus]) {
      &::after {
        content: var(--tw-content);
        --tw-ring-color: var(--color-blue-500);
      }
    }
  }
  .has-data-invalid\:before\:shadow-red-500\/10 {
    &:has(*[data-invalid]) {
      &::before {
        content: var(--tw-content);
        --tw-shadow-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-red-500) 10%, transparent) var(--tw-shadow-alpha), transparent);
        }
      }
    }
  }
  .has-data-\[slot\=description\]\:space-y-6 {
    &:has(*[data-slot="description"]) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .has-\[\.header-popover-full-panel\]\:border-b {
    &:has(*:is(.header-popover-full-panel)) {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 1px;
    }
  }
  .has-\[\[data-row-link\]\[data-focus\]\]\:outline-2 {
    &:has(*:is([data-row-link][data-focus])) {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
  }
  .has-\[\[data-row-link\]\[data-focus\]\]\:-outline-offset-2 {
    &:has(*:is([data-row-link][data-focus])) {
      outline-offset: calc(2px * -1);
    }
  }
  .has-\[\[data-row-link\]\[data-focus\]\]\:outline-blue-500 {
    &:has(*:is([data-row-link][data-focus])) {
      outline-color: var(--color-blue-500);
    }
  }
  .data-active\:bg-neutral-950\/5 {
    &[data-active] {
      background-color: color-mix(in srgb, oklch(14.5% 0 0) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-950) 5%, transparent);
      }
    }
  }
  .data-active\:bg-neutral-950\/\[2\.5\%\] {
    &[data-active] {
      background-color: color-mix(in srgb, oklch(14.5% 0 0) 2.5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-950) 2.5%, transparent);
      }
    }
  }
  .data-active\:\[--btn-border\:var\(--color-neutral-950\)\]\/15 {
    &[data-active] {
      --btn-border: color-mix(in srgb, oklch(14.5% 0 0) 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-border: color-mix(in oklab, var(--color-neutral-950) 15%, transparent);
      }
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-blue-300\)\] {
    &[data-active] {
      --btn-icon: var(--color-blue-300);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-fuchsia-200\)\] {
    &[data-active] {
      --btn-icon: var(--color-fuchsia-200);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-indigo-200\)\] {
    &[data-active] {
      --btn-icon: var(--color-indigo-200);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-lime-700\)\] {
    &[data-active] {
      --btn-icon: var(--color-lime-700);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-neutral-300\)\] {
    &[data-active] {
      --btn-icon: var(--color-neutral-300);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-neutral-500\)\] {
    &[data-active] {
      --btn-icon: var(--color-neutral-500);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-neutral-700\)\] {
    &[data-active] {
      --btn-icon: var(--color-neutral-700);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-orange-200\)\] {
    &[data-active] {
      --btn-icon: var(--color-orange-200);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-pink-200\)\] {
    &[data-active] {
      --btn-icon: var(--color-pink-200);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-primary-200\)\] {
    &[data-active] {
      --btn-icon: var(--color-primary-200);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-purple-200\)\] {
    &[data-active] {
      --btn-icon: var(--color-purple-200);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-red-200\)\] {
    &[data-active] {
      --btn-icon: var(--color-red-200);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-rose-200\)\] {
    &[data-active] {
      --btn-icon: var(--color-rose-200);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-violet-200\)\] {
    &[data-active] {
      --btn-icon: var(--color-violet-200);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-white\)\]\/80 {
    &[data-active] {
      --btn-icon: color-mix(in srgb, #fff 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-icon: color-mix(in oklab, var(--color-white) 80%, transparent);
      }
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-yellow-700\)\] {
    &[data-active] {
      --btn-icon: var(--color-yellow-700);
    }
  }
  .data-active\:after\:bg-\(--btn-hover-overlay\) {
    &[data-active] {
      &::after {
        content: var(--tw-content);
        background-color: var(--btn-hover-overlay);
      }
    }
  }
  .data-changing\:duration-200 {
    &[data-changing] {
      --tw-duration: 200ms;
      transition-duration: 200ms;
    }
  }
  .data-checked\:bg-\(--switch-bg\) {
    &[data-checked] {
      background-color: var(--switch-bg);
    }
  }
  .data-checked\:bg-black {
    &[data-checked] {
      background-color: var(--color-black);
    }
  }
  .data-checked\:text-white {
    &[data-checked] {
      color: var(--color-white);
    }
  }
  .data-checked\:shadow-lg {
    &[data-checked] {
      --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .data-checked\:shadow-black\/10 {
    &[data-checked] {
      --tw-shadow-color: color-mix(in srgb, #000 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-black) 10%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .data-checked\:ring-\(--switch-bg-ring\) {
    &[data-checked] {
      --tw-ring-color: var(--switch-bg-ring);
    }
  }
  .data-closed\:-translate-x-20 {
    &[data-closed] {
      --tw-translate-x: calc(var(--spacing) * -20);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-closed\:translate-x-20 {
    &[data-closed] {
      --tw-translate-x: calc(var(--spacing) * 20);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-closed\:translate-y-1 {
    &[data-closed] {
      --tw-translate-y: calc(var(--spacing) * 1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-closed\:translate-y-16 {
    &[data-closed] {
      --tw-translate-y: calc(var(--spacing) * 16);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-closed\:translate-y-28 {
    &[data-closed] {
      --tw-translate-y: calc(var(--spacing) * 28);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-closed\:translate-y-40 {
    &[data-closed] {
      --tw-translate-y: calc(var(--spacing) * 40);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-closed\:opacity-0 {
    &[data-closed] {
      opacity: 0%;
    }
  }
  .data-disabled\:border-neutral-950\/20 {
    &[data-disabled] {
      border-color: color-mix(in srgb, oklch(14.5% 0 0) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-neutral-950) 20%, transparent);
      }
    }
  }
  .data-disabled\:border-zinc-950\/20 {
    &[data-disabled] {
      border-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-zinc-950) 20%, transparent);
      }
    }
  }
  .data-disabled\:bg-neutral-200 {
    &[data-disabled] {
      background-color: var(--color-neutral-200);
    }
  }
  .data-disabled\:opacity-50 {
    &[data-disabled] {
      opacity: 50%;
    }
  }
  .data-disabled\:opacity-100 {
    &[data-disabled] {
      opacity: 100%;
    }
  }
  .data-disabled\:before\:bg-neutral-950\/5 {
    &[data-disabled] {
      &::before {
        content: var(--tw-content);
        background-color: color-mix(in srgb, oklch(14.5% 0 0) 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-neutral-950) 5%, transparent);
        }
      }
    }
  }
  .data-disabled\:before\:shadow-none {
    &[data-disabled] {
      &::before {
        content: var(--tw-content);
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .data-disabled\:after\:shadow-none {
    &[data-disabled] {
      &::after {
        content: var(--tw-content);
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .data-disabled\:data-checked\:bg-neutral-200 {
    &[data-disabled] {
      &[data-checked] {
        background-color: var(--color-neutral-200);
      }
    }
  }
  .data-disabled\:data-checked\:ring-black\/5 {
    &[data-disabled] {
      &[data-checked] {
        --tw-ring-color: color-mix(in srgb, #000 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--color-black) 5%, transparent);
        }
      }
    }
  }
  .data-enter\:duration-200 {
    &[data-enter] {
      --tw-duration: 200ms;
      transition-duration: 200ms;
    }
  }
  .data-enter\:duration-300 {
    &[data-enter] {
      --tw-duration: 300ms;
      transition-duration: 300ms;
    }
  }
  .data-enter\:data-closed\:-translate-y-5 {
    &[data-enter] {
      &[data-closed] {
        --tw-translate-y: calc(var(--spacing) * -5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .data-enter\:data-closed\:-translate-y-20 {
    &[data-enter] {
      &[data-closed] {
        --tw-translate-y: calc(var(--spacing) * -20);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .data-enter\:data-closed\:opacity-0 {
    &[data-enter] {
      &[data-closed] {
        opacity: 0%;
      }
    }
  }
  .data-focus\:bg-blue-500 {
    &[data-focus] {
      background-color: var(--color-blue-500);
    }
  }
  .data-focus\:bg-neutral-100 {
    &[data-focus] {
      background-color: var(--color-neutral-100);
    }
  }
  .data-focus\:text-white {
    &[data-focus] {
      color: var(--color-white);
    }
  }
  .data-focus\:outline-2 {
    &[data-focus] {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
  }
  .data-focus\:outline-offset-2 {
    &[data-focus] {
      outline-offset: 2px;
    }
  }
  .data-focus\:outline-blue-500 {
    &[data-focus] {
      outline-color: var(--color-blue-500);
    }
  }
  .data-focus\:after\:ring-2 {
    &[data-focus] {
      &::after {
        content: var(--tw-content);
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .data-focus\:after\:ring-blue-500 {
    &[data-focus] {
      &::after {
        content: var(--tw-content);
        --tw-ring-color: var(--color-blue-500);
      }
    }
  }
  .data-hover\:border-neutral-400 {
    &[data-hover] {
      border-color: var(--color-neutral-400);
    }
  }
  .data-hover\:border-zinc-950\/20 {
    &[data-hover] {
      border-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-zinc-950) 20%, transparent);
      }
    }
  }
  .data-hover\:bg-black\/5 {
    &[data-hover] {
      background-color: color-mix(in srgb, #000 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-black) 5%, transparent);
      }
    }
  }
  .data-hover\:bg-neutral-950\/5 {
    &[data-hover] {
      background-color: color-mix(in srgb, oklch(14.5% 0 0) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-950) 5%, transparent);
      }
    }
  }
  .data-hover\:bg-neutral-950\/\[2\.5\%\] {
    &[data-hover] {
      background-color: color-mix(in srgb, oklch(14.5% 0 0) 2.5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-950) 2.5%, transparent);
      }
    }
  }
  .data-hover\:ring-black\/15 {
    &[data-hover] {
      --tw-ring-color: color-mix(in srgb, #000 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-black) 15%, transparent);
      }
    }
  }
  .data-hover\:\[--btn-border\:var\(--color-neutral-950\)\]\/15 {
    &[data-hover] {
      --btn-border: color-mix(in srgb, oklch(14.5% 0 0) 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-border: color-mix(in oklab, var(--color-neutral-950) 15%, transparent);
      }
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-blue-300\)\] {
    &[data-hover] {
      --btn-icon: var(--color-blue-300);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-fuchsia-200\)\] {
    &[data-hover] {
      --btn-icon: var(--color-fuchsia-200);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-indigo-200\)\] {
    &[data-hover] {
      --btn-icon: var(--color-indigo-200);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-lime-700\)\] {
    &[data-hover] {
      --btn-icon: var(--color-lime-700);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-neutral-300\)\] {
    &[data-hover] {
      --btn-icon: var(--color-neutral-300);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-neutral-500\)\] {
    &[data-hover] {
      --btn-icon: var(--color-neutral-500);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-neutral-700\)\] {
    &[data-hover] {
      --btn-icon: var(--color-neutral-700);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-orange-200\)\] {
    &[data-hover] {
      --btn-icon: var(--color-orange-200);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-pink-200\)\] {
    &[data-hover] {
      --btn-icon: var(--color-pink-200);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-primary-200\)\] {
    &[data-hover] {
      --btn-icon: var(--color-primary-200);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-purple-200\)\] {
    &[data-hover] {
      --btn-icon: var(--color-purple-200);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-red-200\)\] {
    &[data-hover] {
      --btn-icon: var(--color-red-200);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-rose-200\)\] {
    &[data-hover] {
      --btn-icon: var(--color-rose-200);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-violet-200\)\] {
    &[data-hover] {
      --btn-icon: var(--color-violet-200);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-white\)\]\/80 {
    &[data-hover] {
      --btn-icon: color-mix(in srgb, #fff 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-icon: color-mix(in oklab, var(--color-white) 80%, transparent);
      }
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-yellow-700\)\] {
    &[data-hover] {
      --btn-icon: var(--color-yellow-700);
    }
  }
  .data-hover\:after\:bg-\(--btn-hover-overlay\) {
    &[data-hover] {
      &::after {
        content: var(--tw-content);
        background-color: var(--btn-hover-overlay);
      }
    }
  }
  .data-hover\:data-checked\:ring-\(--switch-bg-ring\) {
    &[data-hover] {
      &[data-checked] {
        --tw-ring-color: var(--switch-bg-ring);
      }
    }
  }
  .data-invalid\:border-red-500 {
    &[data-invalid] {
      border-color: var(--color-red-500);
    }
  }
  .data-invalid\:data-hover\:border-red-500 {
    &[data-invalid] {
      &[data-hover] {
        border-color: var(--color-red-500);
      }
    }
  }
  .data-leave\:duration-100 {
    &[data-leave] {
      --tw-duration: 100ms;
      transition-duration: 100ms;
    }
  }
  .data-closed\:data-leave\:opacity-0 {
    &[data-closed] {
      &[data-leave] {
        opacity: 0%;
      }
    }
  }
  .data-leave\:data-closed\:opacity-0 {
    &[data-leave] {
      &[data-closed] {
        opacity: 0%;
      }
    }
  }
  .data-selected\:bg-neutral-900 {
    &[data-selected] {
      background-color: var(--color-neutral-900);
    }
  }
  .data-selected\:text-\[\#0480ea\] {
    &[data-selected] {
      color: #0480ea;
    }
  }
  .data-selected\:text-neutral-950 {
    &[data-selected] {
      color: var(--color-neutral-950);
    }
  }
  .data-selected\:text-white {
    &[data-selected] {
      color: var(--color-white);
    }
  }
  .data-transition\:pointer-events-none {
    &[data-transition] {
      pointer-events: none;
    }
  }
  .\*\:data-\[slot\=avatar\]\:-m-0\.5 {
    :is(& > *) {
      &[data-slot="avatar"] {
        margin: calc(var(--spacing) * -0.5);
      }
    }
  }
  .\*\:data-\[slot\=avatar\]\:-mx-0\.5 {
    :is(& > *) {
      &[data-slot="avatar"] {
        margin-inline: calc(var(--spacing) * -0.5);
      }
    }
  }
  .\*\:data-\[slot\=avatar\]\:size-6 {
    :is(& > *) {
      &[data-slot="avatar"] {
        width: calc(var(--spacing) * 6);
        height: calc(var(--spacing) * 6);
      }
    }
  }
  .\*\:data-\[slot\=avatar\]\:size-7 {
    :is(& > *) {
      &[data-slot="avatar"] {
        width: calc(var(--spacing) * 7);
        height: calc(var(--spacing) * 7);
      }
    }
  }
  .\*\:data-\[slot\=avatar\]\:\[--avatar-radius\:var\(--radius-md\)\] {
    :is(& > *) {
      &[data-slot="avatar"] {
        --avatar-radius: var(--radius-md);
      }
    }
  }
  .\*\:data-\[slot\=control\]\:col-start-1 {
    :is(& > *) {
      &[data-slot="control"] {
        grid-column-start: 1;
      }
    }
  }
  .\*\:data-\[slot\=control\]\:col-start-2 {
    :is(& > *) {
      &[data-slot="control"] {
        grid-column-start: 2;
      }
    }
  }
  .\*\:data-\[slot\=control\]\:row-start-1 {
    :is(& > *) {
      &[data-slot="control"] {
        grid-row-start: 1;
      }
    }
  }
  .\*\:data-\[slot\=control\]\:mt-0\.75 {
    :is(& > *) {
      &[data-slot="control"] {
        margin-top: calc(var(--spacing) * 0.75);
      }
    }
  }
  .\*\:data-\[slot\=control\]\:self-start {
    :is(& > *) {
      &[data-slot="control"] {
        align-self: flex-start;
      }
    }
  }
  .has-data-\[slot\=description\]\:\*\*\:data-\[slot\=control\]\:mt-1 {
    &:has(*[data-slot="description"]) {
      :is(& *) {
        &[data-slot="control"] {
          margin-top: calc(var(--spacing) * 1);
        }
      }
    }
  }
  .\*\:data-\[slot\=description\]\:col-start-1 {
    :is(& > *) {
      &[data-slot="description"] {
        grid-column-start: 1;
      }
    }
  }
  .\*\:data-\[slot\=description\]\:col-start-2 {
    :is(& > *) {
      &[data-slot="description"] {
        grid-column-start: 2;
      }
    }
  }
  .\*\:data-\[slot\=description\]\:row-start-2 {
    :is(& > *) {
      &[data-slot="description"] {
        grid-row-start: 2;
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:-mx-0\.5 {
    :is(& > *) {
      &[data-slot="icon"] {
        margin-inline: calc(var(--spacing) * -0.5);
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:my-0\.5 {
    :is(& > *) {
      &[data-slot="icon"] {
        margin-block: calc(var(--spacing) * 0.5);
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:size-3\! {
    :is(& > *) {
      &[data-slot="icon"] {
        width: calc(var(--spacing) * 3) !important;
        height: calc(var(--spacing) * 3) !important;
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:size-5 {
    :is(& > *) {
      &[data-slot="icon"] {
        width: calc(var(--spacing) * 5);
        height: calc(var(--spacing) * 5);
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:size-6 {
    :is(& > *) {
      &[data-slot="icon"] {
        width: calc(var(--spacing) * 6);
        height: calc(var(--spacing) * 6);
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:shrink-0 {
    :is(& > *) {
      &[data-slot="icon"] {
        flex-shrink: 0;
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:self-center {
    :is(& > *) {
      &[data-slot="icon"] {
        align-self: center;
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:fill-neutral-500 {
    :is(& > *) {
      &[data-slot="icon"] {
        fill: var(--color-neutral-500);
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:text-neutral-500 {
    :is(& > *) {
      &[data-slot="icon"] {
        color: var(--color-neutral-500);
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:text-zinc-500 {
    :is(& > *) {
      &[data-slot="icon"] {
        color: var(--color-zinc-500);
      }
    }
  }
  .group-data-focus\/option\:\*\:data-\[slot\=icon\]\:text-white {
    &:is(:where(.group\/option)[data-focus] *) {
      :is(& > *) {
        &[data-slot="icon"] {
          color: var(--color-white);
        }
      }
    }
  }
  .\*\:not-nth-2\:last\:data-\[slot\=icon\]\:ml-auto {
    :is(& > *) {
      &:not(*:nth-child(2)) {
        &:last-child {
          &[data-slot="icon"] {
            margin-left: auto;
          }
        }
      }
    }
  }
  .\*\:not-nth-2\:last\:data-\[slot\=icon\]\:size-5 {
    :is(& > *) {
      &:not(*:nth-child(2)) {
        &:last-child {
          &[data-slot="icon"] {
            width: calc(var(--spacing) * 5);
            height: calc(var(--spacing) * 5);
          }
        }
      }
    }
  }
  .data-active\:\*\:data-\[slot\=icon\]\:fill-neutral-950 {
    &[data-active] {
      :is(& > *) {
        &[data-slot="icon"] {
          fill: var(--color-neutral-950);
        }
      }
    }
  }
  .data-hover\:\*\:data-\[slot\=icon\]\:fill-neutral-950 {
    &[data-hover] {
      :is(& > *) {
        &[data-slot="icon"] {
          fill: var(--color-neutral-950);
        }
      }
    }
  }
  .\*\:data-\[slot\=label\]\:col-start-1 {
    :is(& > *) {
      &[data-slot="label"] {
        grid-column-start: 1;
      }
    }
  }
  .\*\:data-\[slot\=label\]\:col-start-2 {
    :is(& > *) {
      &[data-slot="label"] {
        grid-column-start: 2;
      }
    }
  }
  .\*\:data-\[slot\=label\]\:row-start-1 {
    :is(& > *) {
      &[data-slot="label"] {
        grid-row-start: 1;
      }
    }
  }
  .\*\:data-\[slot\=label\]\:font-medium {
    :is(& > *) {
      &[data-slot="label"] {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
      }
    }
  }
  .\*\*\:data-\[slot\=label\]\:font-normal {
    :is(& *) {
      &[data-slot="label"] {
        --tw-font-weight: var(--font-weight-normal);
        font-weight: var(--font-weight-normal);
      }
    }
  }
  .has-data-\[slot\=description\]\:\*\*\:data-\[slot\=label\]\:font-medium {
    &:has(*[data-slot="description"]) {
      :is(& *) {
        &[data-slot="label"] {
          --tw-font-weight: var(--font-weight-medium);
          font-weight: var(--font-weight-medium);
        }
      }
    }
  }
  .\*\:data-\[slot\=text\]\:mt-1 {
    :is(& > *) {
      &[data-slot="text"] {
        margin-top: calc(var(--spacing) * 1);
      }
    }
  }
  .sm\:aspect-w-4 {
    @media (width >= 40rem) {
      position: relative;
      padding-bottom: calc(var(--tw-aspect-h) / var(--tw-aspect-w) * 100%);
      --tw-aspect-w: 4;
      > * {
        position: absolute;
        height: 100%;
        width: 100%;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
      }
    }
  }
  .sm\:-start-5 {
    @media (width >= 40rem) {
      inset-inline-start: calc(var(--spacing) * -5);
    }
  }
  .sm\:start-auto {
    @media (width >= 40rem) {
      inset-inline-start: auto;
    }
  }
  .sm\:-end-5 {
    @media (width >= 40rem) {
      inset-inline-end: calc(var(--spacing) * -5);
    }
  }
  .sm\:end-0 {
    @media (width >= 40rem) {
      inset-inline-end: calc(var(--spacing) * 0);
    }
  }
  .sm\:end-3 {
    @media (width >= 40rem) {
      inset-inline-end: calc(var(--spacing) * 3);
    }
  }
  .sm\:end-18 {
    @media (width >= 40rem) {
      inset-inline-end: calc(var(--spacing) * 18);
    }
  }
  .sm\:end-22 {
    @media (width >= 40rem) {
      inset-inline-end: calc(var(--spacing) * 22);
    }
  }
  .sm\:top-3 {
    @media (width >= 40rem) {
      top: calc(var(--spacing) * 3);
    }
  }
  .sm\:top-4 {
    @media (width >= 40rem) {
      top: calc(var(--spacing) * 4);
    }
  }
  .sm\:top-\[15\%\] {
    @media (width >= 40rem) {
      top: 15%;
    }
  }
  .sm\:right-4 {
    @media (width >= 40rem) {
      right: calc(var(--spacing) * 4);
    }
  }
  .sm\:left-4 {
    @media (width >= 40rem) {
      left: calc(var(--spacing) * 4);
    }
  }
  .sm\:col-span-6 {
    @media (width >= 40rem) {
      grid-column: span 6 / span 6;
    }
  }
  .sm\:my-8 {
    @media (width >= 40rem) {
      margin-block: calc(var(--spacing) * 8);
    }
  }
  .sm\:my-12 {
    @media (width >= 40rem) {
      margin-block: calc(var(--spacing) * 12);
    }
  }
  .sm\:ms-2 {
    @media (width >= 40rem) {
      margin-inline-start: calc(var(--spacing) * 2);
    }
  }
  .sm\:ms-4 {
    @media (width >= 40rem) {
      margin-inline-start: calc(var(--spacing) * 4);
    }
  }
  .sm\:prose {
    @media (width >= 40rem) {
      color: var(--tw-prose-body);
      max-width: 65ch;
      :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.25em;
        margin-bottom: 1.25em;
      }
      :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-lead);
        font-size: 1.25em;
        line-height: 1.6;
        margin-top: 1.2em;
        margin-bottom: 1.2em;
      }
      :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-links);
        text-decoration: underline;
        font-weight: 500;
      }
      :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-bold);
        font-weight: 600;
      }
      :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: decimal;
        margin-top: 1.25em;
        margin-bottom: 1.25em;
        padding-inline-start: 1.625em;
      }
      :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: upper-alpha;
      }
      :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: lower-alpha;
      }
      :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: upper-alpha;
      }
      :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: lower-alpha;
      }
      :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: upper-roman;
      }
      :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: lower-roman;
      }
      :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: upper-roman;
      }
      :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: lower-roman;
      }
      :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: decimal;
      }
      :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: disc;
        margin-top: 1.25em;
        margin-bottom: 1.25em;
        padding-inline-start: 1.625em;
      }
      :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
        font-weight: 400;
        color: var(--tw-prose-counters);
      }
      :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
        color: var(--tw-prose-bullets);
      }
      :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        margin-top: 1.25em;
      }
      :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        border-color: var(--tw-prose-hr);
        border-top-width: 1;
        margin-top: 3em;
        margin-bottom: 3em;
      }
      :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 500;
        font-style: italic;
        color: var(--tw-prose-quotes);
        border-inline-start-width: 0.25rem;
        border-inline-start-color: var(--tw-prose-quote-borders);
        quotes: "\201C""\201D""\2018""\2019";
        margin-top: 1.6em;
        margin-bottom: 1.6em;
        padding-inline-start: 1em;
      }
      :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
        content: open-quote;
      }
      :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
        content: close-quote;
      }
      :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 800;
        font-size: 2.25em;
        margin-top: 0;
        margin-bottom: 0.8888889em;
        line-height: 1.1111111;
      }
      :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 900;
        color: inherit;
      }
      :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 700;
        font-size: 1.5em;
        margin-top: 2em;
        margin-bottom: 1em;
        line-height: 1.3333333;
      }
      :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 800;
        color: inherit;
      }
      :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        font-size: 1.25em;
        margin-top: 1.6em;
        margin-bottom: 0.6em;
        line-height: 1.6;
      }
      :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 700;
        color: inherit;
      }
      :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        margin-top: 1.5em;
        margin-bottom: 0.5em;
        line-height: 1.5;
      }
      :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 700;
        color: inherit;
      }
      :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
      }
      :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        display: block;
        margin-top: 2em;
        margin-bottom: 2em;
      }
      :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
      }
      :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 500;
        font-family: inherit;
        color: var(--tw-prose-kbd);
        box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
        font-size: 0.875em;
        border-radius: 0.3125rem;
        padding-top: 0.1875em;
        padding-inline-end: 0.375em;
        padding-bottom: 0.1875em;
        padding-inline-start: 0.375em;
      }
      :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-code);
        font-weight: 600;
        font-size: 0.875em;
      }
      :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
        content: "`";
      }
      :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
        content: "`";
      }
      :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
        font-size: 0.875em;
      }
      :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
        font-size: 0.9em;
      }
      :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-pre-code);
        background-color: var(--tw-prose-pre-bg);
        overflow-x: auto;
        font-weight: 400;
        font-size: 0.875em;
        line-height: 1.7142857;
        margin-top: 1.7142857em;
        margin-bottom: 1.7142857em;
        border-radius: 0.375rem;
        padding-top: 0.8571429em;
        padding-inline-end: 1.1428571em;
        padding-bottom: 0.8571429em;
        padding-inline-start: 1.1428571em;
      }
      :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        background-color: transparent;
        border-width: 0;
        border-radius: 0;
        padding: 0;
        font-weight: inherit;
        color: inherit;
        font-size: inherit;
        font-family: inherit;
        line-height: inherit;
      }
      :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
        content: none;
      }
      :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
        content: none;
      }
      :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        width: 100%;
        table-layout: auto;
        margin-top: 2em;
        margin-bottom: 2em;
        font-size: 0.875em;
        line-height: 1.7142857;
      }
      :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        border-bottom-width: 1px;
        border-bottom-color: var(--tw-prose-th-borders);
      }
      :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        vertical-align: bottom;
        padding-inline-end: 0.5714286em;
        padding-bottom: 0.5714286em;
        padding-inline-start: 0.5714286em;
      }
      :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        border-bottom-width: 1px;
        border-bottom-color: var(--tw-prose-td-borders);
      }
      :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        border-bottom-width: 0;
      }
      :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        vertical-align: baseline;
      }
      :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        border-top-width: 1px;
        border-top-color: var(--tw-prose-th-borders);
      }
      :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        vertical-align: top;
      }
      :where(th, td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        text-align: start;
      }
      :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
        margin-bottom: 0;
      }
      :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-captions);
        font-size: 0.875em;
        line-height: 1.4285714;
        margin-top: 0.8571429em;
      }
      --tw-prose-body: oklch(37.3% 0.034 259.733);
      --tw-prose-headings: oklch(21% 0.034 264.665);
      --tw-prose-lead: oklch(44.6% 0.03 256.802);
      --tw-prose-links: oklch(21% 0.034 264.665);
      --tw-prose-bold: oklch(21% 0.034 264.665);
      --tw-prose-counters: oklch(55.1% 0.027 264.364);
      --tw-prose-bullets: oklch(87.2% 0.01 258.338);
      --tw-prose-hr: oklch(92.8% 0.006 264.531);
      --tw-prose-quotes: oklch(21% 0.034 264.665);
      --tw-prose-quote-borders: oklch(92.8% 0.006 264.531);
      --tw-prose-captions: oklch(55.1% 0.027 264.364);
      --tw-prose-kbd: oklch(21% 0.034 264.665);
      --tw-prose-kbd-shadows: NaN NaN NaN;
      --tw-prose-code: oklch(21% 0.034 264.665);
      --tw-prose-pre-code: oklch(92.8% 0.006 264.531);
      --tw-prose-pre-bg: oklch(27.8% 0.033 256.848);
      --tw-prose-th-borders: oklch(87.2% 0.01 258.338);
      --tw-prose-td-borders: oklch(92.8% 0.006 264.531);
      --tw-prose-invert-body: oklch(87.2% 0.01 258.338);
      --tw-prose-invert-headings: #fff;
      --tw-prose-invert-lead: oklch(70.7% 0.022 261.325);
      --tw-prose-invert-links: #fff;
      --tw-prose-invert-bold: #fff;
      --tw-prose-invert-counters: oklch(70.7% 0.022 261.325);
      --tw-prose-invert-bullets: oklch(44.6% 0.03 256.802);
      --tw-prose-invert-hr: oklch(37.3% 0.034 259.733);
      --tw-prose-invert-quotes: oklch(96.7% 0.003 264.542);
      --tw-prose-invert-quote-borders: oklch(37.3% 0.034 259.733);
      --tw-prose-invert-captions: oklch(70.7% 0.022 261.325);
      --tw-prose-invert-kbd: #fff;
      --tw-prose-invert-kbd-shadows: 255 255 255;
      --tw-prose-invert-code: #fff;
      --tw-prose-invert-pre-code: oklch(87.2% 0.01 258.338);
      --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
      --tw-prose-invert-th-borders: oklch(44.6% 0.03 256.802);
      --tw-prose-invert-td-borders: oklch(37.3% 0.034 259.733);
      font-size: 1rem;
      line-height: 1.75;
      :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
        margin-bottom: 0;
      }
      :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.5em;
        margin-bottom: 0.5em;
      }
      :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0.375em;
      }
      :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0.375em;
      }
      :where(.sm\:prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.75em;
        margin-bottom: 0.75em;
      }
      :where(.sm\:prose > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.25em;
      }
      :where(.sm\:prose > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 1.25em;
      }
      :where(.sm\:prose > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.25em;
      }
      :where(.sm\:prose > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 1.25em;
      }
      :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.75em;
        margin-bottom: 0.75em;
      }
      :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.25em;
        margin-bottom: 1.25em;
      }
      :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.5em;
        padding-inline-start: 1.625em;
      }
      :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0;
      }
      :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-end: 0;
      }
      :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-top: 0.5714286em;
        padding-inline-end: 0.5714286em;
        padding-bottom: 0.5714286em;
        padding-inline-start: 0.5714286em;
      }
      :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0;
      }
      :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-end: 0;
      }
      :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
      }
      :where(.sm\:prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(.sm\:prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 0;
      }
    }
  }
  .sm\:mt-0 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 0);
    }
  }
  .sm\:mt-1\.5 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 1.5);
    }
  }
  .sm\:mt-11 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 11);
    }
  }
  .sm\:mt-14 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 14);
    }
  }
  .sm\:mt-16 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 16);
    }
  }
  .sm\:mt-20 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 20);
    }
  }
  .sm\:ml-2 {
    @media (width >= 40rem) {
      margin-left: calc(var(--spacing) * 2);
    }
  }
  .sm\:ml-5 {
    @media (width >= 40rem) {
      margin-left: calc(var(--spacing) * 5);
    }
  }
  .sm\:block {
    @media (width >= 40rem) {
      display: block;
    }
  }
  .sm\:flex {
    @media (width >= 40rem) {
      display: flex;
    }
  }
  .sm\:grid {
    @media (width >= 40rem) {
      display: grid;
    }
  }
  .sm\:hidden {
    @media (width >= 40rem) {
      display: none;
    }
  }
  .sm\:inline {
    @media (width >= 40rem) {
      display: inline;
    }
  }
  .sm\:inline-block {
    @media (width >= 40rem) {
      display: inline-block;
    }
  }
  .sm\:size-3\.5 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 3.5);
      height: calc(var(--spacing) * 3.5);
    }
  }
  .sm\:size-4 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
  }
  .sm\:size-6 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 6);
      height: calc(var(--spacing) * 6);
    }
  }
  .sm\:size-12 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 12);
      height: calc(var(--spacing) * 12);
    }
  }
  .sm\:size-\[1\.0625rem\] {
    @media (width >= 40rem) {
      width: 1.0625rem;
      height: 1.0625rem;
    }
  }
  .sm\:h-3\.5 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 3.5);
    }
  }
  .sm\:h-5 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 5);
    }
  }
  .sm\:h-8 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 8);
    }
  }
  .sm\:h-11 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 11);
    }
  }
  .sm\:h-12 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 12);
    }
  }
  .sm\:min-h-9 {
    @media (width >= 40rem) {
      min-height: calc(var(--spacing) * 9);
    }
  }
  .sm\:w-1\/3 {
    @media (width >= 40rem) {
      width: calc(1/3 * 100%);
    }
  }
  .sm\:w-3\.5 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 3.5);
    }
  }
  .sm\:w-8 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 8);
    }
  }
  .sm\:w-11 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 11);
    }
  }
  .sm\:w-12 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 12);
    }
  }
  .sm\:w-36 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 36);
    }
  }
  .sm\:w-40 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 40);
    }
  }
  .sm\:w-64 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 64);
    }
  }
  .sm\:max-w-md {
    @media (width >= 40rem) {
      max-width: var(--container-md);
    }
  }
  .sm\:min-w-\[340px\] {
    @media (width >= 40rem) {
      min-width: 340px;
    }
  }
  .sm\:shrink-0 {
    @media (width >= 40rem) {
      flex-shrink: 0;
    }
  }
  .sm\:translate-x-0 {
    @media (width >= 40rem) {
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .sm\:grid-cols-1 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(1, minmax(0, 1fr));
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:grid-cols-3 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .sm\:grid-cols-\[--spacing\(4\)_1fr\] {
    @media (width >= 40rem) {
      grid-template-columns: calc(var(--spacing) * 4) 1fr;
    }
  }
  .sm\:grid-cols-\[1\.5rem_1fr\] {
    @media (width >= 40rem) {
      grid-template-columns: 1.5rem 1fr;
    }
  }
  .sm\:grid-cols-\[1fr_--spacing\(4\)\] {
    @media (width >= 40rem) {
      grid-template-columns: 1fr calc(var(--spacing) * 4);
    }
  }
  .sm\:grid-cols-\[1fr_auto\] {
    @media (width >= 40rem) {
      grid-template-columns: 1fr auto;
    }
  }
  .sm\:grid-cols-\[1rem_1fr\] {
    @media (width >= 40rem) {
      grid-template-columns: 1rem 1fr;
    }
  }
  .sm\:grid-cols-\[min\(50\%\,--spacing\(80\)\)_auto\] {
    @media (width >= 40rem) {
      grid-template-columns: min(50%, calc(var(--spacing) * 80)) auto;
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:items-center {
    @media (width >= 40rem) {
      align-items: center;
    }
  }
  .sm\:justify-between {
    @media (width >= 40rem) {
      justify-content: space-between;
    }
  }
  .sm\:gap-4\.5 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 4.5);
    }
  }
  .sm\:gap-6 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 6);
    }
  }
  .sm\:gap-16 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 16);
    }
  }
  .sm\:gap-20 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 20);
    }
  }
  .sm\:space-y-0 {
    @media (width >= 40rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .sm\:gap-x-1\.5 {
    @media (width >= 40rem) {
      column-gap: calc(var(--spacing) * 1.5);
    }
  }
  .sm\:gap-x-3 {
    @media (width >= 40rem) {
      column-gap: calc(var(--spacing) * 3);
    }
  }
  .sm\:gap-x-4 {
    @media (width >= 40rem) {
      column-gap: calc(var(--spacing) * 4);
    }
  }
  .sm\:gap-x-5 {
    @media (width >= 40rem) {
      column-gap: calc(var(--spacing) * 5);
    }
  }
  .sm\:gap-x-6 {
    @media (width >= 40rem) {
      column-gap: calc(var(--spacing) * 6);
    }
  }
  .sm\:gap-x-8 {
    @media (width >= 40rem) {
      column-gap: calc(var(--spacing) * 8);
    }
  }
  .sm\:gap-x-14 {
    @media (width >= 40rem) {
      column-gap: calc(var(--spacing) * 14);
    }
  }
  .sm\:space-x-8 {
    @media (width >= 40rem) {
      :where(& > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));
      }
    }
  }
  .sm\:gap-y-0 {
    @media (width >= 40rem) {
      row-gap: calc(var(--spacing) * 0);
    }
  }
  .sm\:gap-y-6 {
    @media (width >= 40rem) {
      row-gap: calc(var(--spacing) * 6);
    }
  }
  .sm\:gap-y-7 {
    @media (width >= 40rem) {
      row-gap: calc(var(--spacing) * 7);
    }
  }
  .sm\:gap-y-8 {
    @media (width >= 40rem) {
      row-gap: calc(var(--spacing) * 8);
    }
  }
  .sm\:gap-y-10 {
    @media (width >= 40rem) {
      row-gap: calc(var(--spacing) * 10);
    }
  }
  .sm\:gap-y-16 {
    @media (width >= 40rem) {
      row-gap: calc(var(--spacing) * 16);
    }
  }
  .sm\:divide-x {
    @media (width >= 40rem) {
      :where(& > :not(:last-child)) {
        --tw-divide-x-reverse: 0;
        border-inline-style: var(--tw-border-style);
        border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
        border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
      }
    }
  }
  .sm\:divide-y-0 {
    @media (width >= 40rem) {
      :where(& > :not(:last-child)) {
        --tw-divide-y-reverse: 0;
        border-bottom-style: var(--tw-border-style);
        border-top-style: var(--tw-border-style);
        border-top-width: calc(0px * var(--tw-divide-y-reverse));
        border-bottom-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));
      }
    }
  }
  .sm\:rounded-2xl {
    @media (width >= 40rem) {
      border-radius: var(--radius-2xl);
    }
  }
  .sm\:rounded-3xl {
    @media (width >= 40rem) {
      border-radius: var(--radius-3xl);
    }
  }
  .sm\:rounded-4xl {
    @media (width >= 40rem) {
      border-radius: var(--radius-4xl);
    }
  }
  .sm\:rounded-\[50px\] {
    @media (width >= 40rem) {
      border-radius: 50px;
    }
  }
  .sm\:border {
    @media (width >= 40rem) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .sm\:border-\[10px\] {
    @media (width >= 40rem) {
      border-style: var(--tw-border-style);
      border-width: 10px;
    }
  }
  .sm\:border-t {
    @media (width >= 40rem) {
      border-top-style: var(--tw-border-style);
      border-top-width: 1px;
    }
  }
  .sm\:border-neutral-950\/5 {
    @media (width >= 40rem) {
      border-color: color-mix(in srgb, oklch(14.5% 0 0) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-neutral-950) 5%, transparent);
      }
    }
  }
  .sm\:p-5 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 5);
    }
  }
  .sm\:p-6 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 6);
    }
  }
  .sm\:p-8 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 8);
    }
  }
  .sm\:px-\(--gutter\) {
    @media (width >= 40rem) {
      padding-inline: var(--gutter);
    }
  }
  .sm\:px-0 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 0);
    }
  }
  .sm\:px-4 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 4);
    }
  }
  .sm\:px-5 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 5);
    }
  }
  .sm\:px-6 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .sm\:px-8 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .sm\:px-\[calc\(--spacing\(3\)-1px\)\] {
    @media (width >= 40rem) {
      padding-inline: calc(calc(var(--spacing) * 3) - 1px);
    }
  }
  .sm\:px-\[calc\(--spacing\(5\)-1px\)\] {
    @media (width >= 40rem) {
      padding-inline: calc(calc(var(--spacing) * 5) - 1px);
    }
  }
  .sm\:py-1\.5 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 1.5);
    }
  }
  .sm\:py-3 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 3);
    }
  }
  .sm\:py-4 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 4);
    }
  }
  .sm\:py-5 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 5);
    }
  }
  .sm\:py-6 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 6);
    }
  }
  .sm\:py-7 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 7);
    }
  }
  .sm\:py-20 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 20);
    }
  }
  .sm\:py-24 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 24);
    }
  }
  .sm\:py-\[calc\(--spacing\(1\.5\)-1px\)\] {
    @media (width >= 40rem) {
      padding-block: calc(calc(var(--spacing) * 1.5) - 1px);
    }
  }
  .sm\:ps-5 {
    @media (width >= 40rem) {
      padding-inline-start: calc(var(--spacing) * 5);
    }
  }
  .sm\:pe-4 {
    @media (width >= 40rem) {
      padding-inline-end: calc(var(--spacing) * 4);
    }
  }
  .sm\:pe-6 {
    @media (width >= 40rem) {
      padding-inline-end: calc(var(--spacing) * 6);
    }
  }
  .sm\:pe-20 {
    @media (width >= 40rem) {
      padding-inline-end: calc(var(--spacing) * 20);
    }
  }
  .sm\:pt-16 {
    @media (width >= 40rem) {
      padding-top: calc(var(--spacing) * 16);
    }
  }
  .sm\:pt-20 {
    @media (width >= 40rem) {
      padding-top: calc(var(--spacing) * 20);
    }
  }
  .sm\:pt-24 {
    @media (width >= 40rem) {
      padding-top: calc(var(--spacing) * 24);
    }
  }
  .sm\:pr-2 {
    @media (width >= 40rem) {
      padding-right: calc(var(--spacing) * 2);
    }
  }
  .sm\:pr-3 {
    @media (width >= 40rem) {
      padding-right: calc(var(--spacing) * 3);
    }
  }
  .sm\:pr-\[calc\(--spacing\(9\)-1px\)\] {
    @media (width >= 40rem) {
      padding-right: calc(calc(var(--spacing) * 9) - 1px);
    }
  }
  .sm\:pb-4 {
    @media (width >= 40rem) {
      padding-bottom: calc(var(--spacing) * 4);
    }
  }
  .sm\:pb-5 {
    @media (width >= 40rem) {
      padding-bottom: calc(var(--spacing) * 5);
    }
  }
  .sm\:pl-1\.5 {
    @media (width >= 40rem) {
      padding-left: calc(var(--spacing) * 1.5);
    }
  }
  .sm\:pl-3 {
    @media (width >= 40rem) {
      padding-left: calc(var(--spacing) * 3);
    }
  }
  .sm\:pl-\[calc\(--spacing\(3\)-1px\)\] {
    @media (width >= 40rem) {
      padding-left: calc(calc(var(--spacing) * 3) - 1px);
    }
  }
  .sm\:text-right {
    @media (width >= 40rem) {
      text-align: right;
    }
  }
  .sm\:text-start {
    @media (width >= 40rem) {
      text-align: start;
    }
  }
  .sm\:text-2xl {
    @media (width >= 40rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .sm\:text-3xl {
    @media (width >= 40rem) {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  .sm\:text-4xl {
    @media (width >= 40rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .sm\:text-4xl\/10 {
    @media (width >= 40rem) {
      font-size: var(--text-4xl);
      line-height: calc(var(--spacing) * 10);
    }
  }
  .sm\:text-5xl {
    @media (width >= 40rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .sm\:text-5xl\/\[1\.15\] {
    @media (width >= 40rem) {
      font-size: var(--text-5xl);
      line-height: 1.15;
    }
  }
  .sm\:text-base {
    @media (width >= 40rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .sm\:text-base\/normal {
    @media (width >= 40rem) {
      font-size: var(--text-base);
      line-height: var(--leading-normal);
    }
  }
  .sm\:text-base\/relaxed {
    @media (width >= 40rem) {
      font-size: var(--text-base);
      line-height: var(--leading-relaxed);
    }
  }
  .sm\:text-lg {
    @media (width >= 40rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .sm\:text-lg\! {
    @media (width >= 40rem) {
      font-size: var(--text-lg) !important;
      line-height: var(--tw-leading, var(--text-lg--line-height)) !important;
    }
  }
  .sm\:text-sm {
    @media (width >= 40rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .sm\:text-sm\/5 {
    @media (width >= 40rem) {
      font-size: var(--text-sm);
      line-height: calc(var(--spacing) * 5);
    }
  }
  .sm\:text-sm\/6 {
    @media (width >= 40rem) {
      font-size: var(--text-sm);
      line-height: calc(var(--spacing) * 6);
    }
  }
  .sm\:text-xl {
    @media (width >= 40rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .sm\:text-pretty {
    @media (width >= 40rem) {
      text-wrap: pretty;
    }
  }
  .sm\:shadow-xl {
    @media (width >= 40rem) {
      --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .sm\:\[--anchor-offset\:-1\.375rem\] {
    @media (width >= 40rem) {
      --anchor-offset: -1.375rem;
    }
  }
  .sm\:aspect-h-3 {
    @media (width >= 40rem) {
      --tw-aspect-h: 3;
    }
  }
  .sm\:aspect-h-4 {
    @media (width >= 40rem) {
      --tw-aspect-h: 4;
    }
  }
  .sm\:aspect-h-6 {
    @media (width >= 40rem) {
      --tw-aspect-h: 6;
    }
  }
  .sm\:aspect-h-9 {
    @media (width >= 40rem) {
      --tw-aspect-h: 9;
    }
  }
  .sm\:aspect-h-12 {
    @media (width >= 40rem) {
      --tw-aspect-h: 12;
    }
  }
  .sm\:group-data-checked\:translate-x-3 {
    @media (width >= 40rem) {
      &:is(:where(.group)[data-checked] *) {
        --tw-translate-x: calc(var(--spacing) * 3);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .sm\:first\:ml-0 {
    @media (width >= 40rem) {
      &:first-child {
        margin-left: calc(var(--spacing) * 0);
      }
    }
  }
  .sm\:first\:pl-1 {
    @media (width >= 40rem) {
      &:first-child {
        padding-left: calc(var(--spacing) * 1);
      }
    }
  }
  .sm\:last\:pr-1 {
    @media (width >= 40rem) {
      &:last-child {
        padding-right: calc(var(--spacing) * 1);
      }
    }
  }
  .sm\:focus-within\:after\:ring-2 {
    @media (width >= 40rem) {
      &:focus-within {
        &::after {
          content: var(--tw-content);
          --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
          box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
      }
    }
  }
  .sm\:focus-within\:after\:ring-blue-500 {
    @media (width >= 40rem) {
      &:focus-within {
        &::after {
          content: var(--tw-content);
          --tw-ring-color: var(--color-blue-500);
        }
      }
    }
  }
  .sm\:data-\[anchor\~\=start\]\:\[--anchor-offset\:-4px\] {
    @media (width >= 40rem) {
      &[data-anchor~="start"] {
        --anchor-offset: -4px;
      }
    }
  }
  .sm\:\*\:data-\[slot\=avatar\]\:size-5 {
    @media (width >= 40rem) {
      :is(& > *) {
        &[data-slot="avatar"] {
          width: calc(var(--spacing) * 5);
          height: calc(var(--spacing) * 5);
        }
      }
    }
  }
  .sm\:\*\:data-\[slot\=avatar\]\:size-6 {
    @media (width >= 40rem) {
      :is(& > *) {
        &[data-slot="avatar"] {
          width: calc(var(--spacing) * 6);
          height: calc(var(--spacing) * 6);
        }
      }
    }
  }
  .sm\:\*\:data-\[slot\=control\]\:mt-0\.5 {
    @media (width >= 40rem) {
      :is(& > *) {
        &[data-slot="control"] {
          margin-top: calc(var(--spacing) * 0.5);
        }
      }
    }
  }
  .sm\:\*\:data-\[slot\=control\]\:mt-1 {
    @media (width >= 40rem) {
      :is(& > *) {
        &[data-slot="control"] {
          margin-top: calc(var(--spacing) * 1);
        }
      }
    }
  }
  .sm\:\*\:data-\[slot\=icon\]\:my-1 {
    @media (width >= 40rem) {
      :is(& > *) {
        &[data-slot="icon"] {
          margin-block: calc(var(--spacing) * 1);
        }
      }
    }
  }
  .sm\:\*\:data-\[slot\=icon\]\:size-4 {
    @media (width >= 40rem) {
      :is(& > *) {
        &[data-slot="icon"] {
          width: calc(var(--spacing) * 4);
          height: calc(var(--spacing) * 4);
        }
      }
    }
  }
  .sm\:\*\:data-\[slot\=icon\]\:size-5 {
    @media (width >= 40rem) {
      :is(& > *) {
        &[data-slot="icon"] {
          width: calc(var(--spacing) * 5);
          height: calc(var(--spacing) * 5);
        }
      }
    }
  }
  .sm\:\*\:not-nth-2\:last\:data-\[slot\=icon\]\:size-4 {
    @media (width >= 40rem) {
      :is(& > *) {
        &:not(*:nth-child(2)) {
          &:last-child {
            &[data-slot="icon"] {
              width: calc(var(--spacing) * 4);
              height: calc(var(--spacing) * 4);
            }
          }
        }
      }
    }
  }
  .sm\:nth-2\:border-none {
    @media (width >= 40rem) {
      &:nth-child(2) {
        --tw-border-style: none;
        border-style: none;
      }
    }
  }
  .md\:end-0 {
    @media (width >= 48rem) {
      inset-inline-end: calc(var(--spacing) * 0);
    }
  }
  .md\:end-5 {
    @media (width >= 48rem) {
      inset-inline-end: calc(var(--spacing) * 5);
    }
  }
  .md\:end-40 {
    @media (width >= 48rem) {
      inset-inline-end: calc(var(--spacing) * 40);
    }
  }
  .md\:top-0 {
    @media (width >= 48rem) {
      top: calc(var(--spacing) * 0);
    }
  }
  .md\:top-1\/2 {
    @media (width >= 48rem) {
      top: calc(1/2 * 100%);
    }
  }
  .md\:top-5 {
    @media (width >= 48rem) {
      top: calc(var(--spacing) * 5);
    }
  }
  .md\:top-10 {
    @media (width >= 48rem) {
      top: calc(var(--spacing) * 10);
    }
  }
  .md\:bottom-0 {
    @media (width >= 48rem) {
      bottom: calc(var(--spacing) * 0);
    }
  }
  .md\:bottom-auto {
    @media (width >= 48rem) {
      bottom: auto;
    }
  }
  .md\:order-1 {
    @media (width >= 48rem) {
      order: 1;
    }
  }
  .md\:order-2 {
    @media (width >= 48rem) {
      order: 2;
    }
  }
  .md\:col-span-1 {
    @media (width >= 48rem) {
      grid-column: span 1 / span 1;
    }
  }
  .md\:col-span-2 {
    @media (width >= 48rem) {
      grid-column: span 2 / span 2;
    }
  }
  .md\:col-span-3 {
    @media (width >= 48rem) {
      grid-column: span 3 / span 3;
    }
  }
  .md\:col-span-4 {
    @media (width >= 48rem) {
      grid-column: span 4 / span 4;
    }
  }
  .md\:mx-6 {
    @media (width >= 48rem) {
      margin-inline: calc(var(--spacing) * 6);
    }
  }
  .md\:my-0 {
    @media (width >= 48rem) {
      margin-block: calc(var(--spacing) * 0);
    }
  }
  .md\:my-10 {
    @media (width >= 48rem) {
      margin-block: calc(var(--spacing) * 10);
    }
  }
  .md\:mt-0 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 0);
    }
  }
  .md\:mt-24 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 24);
    }
  }
  .md\:mb-12 {
    @media (width >= 48rem) {
      margin-bottom: calc(var(--spacing) * 12);
    }
  }
  .md\:mb-16 {
    @media (width >= 48rem) {
      margin-bottom: calc(var(--spacing) * 16);
    }
  }
  .md\:block {
    @media (width >= 48rem) {
      display: block;
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:grid {
    @media (width >= 48rem) {
      display: grid;
    }
  }
  .md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .md\:aspect-3\/4 {
    @media (width >= 48rem) {
      aspect-ratio: 3/4;
    }
  }
  .md\:aspect-4\/4 {
    @media (width >= 48rem) {
      aspect-ratio: 4/4;
    }
  }
  .md\:aspect-5\/4 {
    @media (width >= 48rem) {
      aspect-ratio: 5/4;
    }
  }
  .md\:size-10 {
    @media (width >= 48rem) {
      width: calc(var(--spacing) * 10);
      height: calc(var(--spacing) * 10);
    }
  }
  .md\:size-12 {
    @media (width >= 48rem) {
      width: calc(var(--spacing) * 12);
      height: calc(var(--spacing) * 12);
    }
  }
  .md\:h-20 {
    @media (width >= 48rem) {
      height: calc(var(--spacing) * 20);
    }
  }
  .md\:h-24 {
    @media (width >= 48rem) {
      height: calc(var(--spacing) * 24);
    }
  }
  .md\:min-h-\[120px\] {
    @media (width >= 48rem) {
      min-height: 120px;
    }
  }
  .md\:w-20 {
    @media (width >= 48rem) {
      width: calc(var(--spacing) * 20);
    }
  }
  .md\:w-24 {
    @media (width >= 48rem) {
      width: calc(var(--spacing) * 24);
    }
  }
  .md\:w-72 {
    @media (width >= 48rem) {
      width: calc(var(--spacing) * 72);
    }
  }
  .md\:w-auto {
    @media (width >= 48rem) {
      width: auto;
    }
  }
  .md\:grow-0 {
    @media (width >= 48rem) {
      flex-grow: 0;
    }
  }
  .md\:-translate-y-1\/2 {
    @media (width >= 48rem) {
      --tw-translate-y: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .md\:grid-cols-1 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(1, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-4 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:items-center {
    @media (width >= 48rem) {
      align-items: center;
    }
  }
  .md\:justify-between {
    @media (width >= 48rem) {
      justify-content: space-between;
    }
  }
  .md\:gap-2 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 2);
    }
  }
  .md\:gap-4 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 4);
    }
  }
  .md\:gap-5 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 5);
    }
  }
  .md\:gap-7 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 7);
    }
  }
  .md\:gap-8 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .md\:gap-10 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 10);
    }
  }
  .md\:space-y-2 {
    @media (width >= 48rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .md\:gap-x-2 {
    @media (width >= 48rem) {
      column-gap: calc(var(--spacing) * 2);
    }
  }
  .md\:gap-x-4 {
    @media (width >= 48rem) {
      column-gap: calc(var(--spacing) * 4);
    }
  }
  .md\:gap-x-8 {
    @media (width >= 48rem) {
      column-gap: calc(var(--spacing) * 8);
    }
  }
  .md\:gap-x-14 {
    @media (width >= 48rem) {
      column-gap: calc(var(--spacing) * 14);
    }
  }
  .md\:gap-y-2 {
    @media (width >= 48rem) {
      row-gap: calc(var(--spacing) * 2);
    }
  }
  .md\:gap-y-12 {
    @media (width >= 48rem) {
      row-gap: calc(var(--spacing) * 12);
    }
  }
  .md\:p-3 {
    @media (width >= 48rem) {
      padding: calc(var(--spacing) * 3);
    }
  }
  .md\:p-8 {
    @media (width >= 48rem) {
      padding: calc(var(--spacing) * 8);
    }
  }
  .md\:px-0 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 0);
    }
  }
  .md\:px-4 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 4);
    }
  }
  .md\:px-8 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .md\:py-2\.5 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 2.5);
    }
  }
  .md\:py-5 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 5);
    }
  }
  .md\:py-6 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 6);
    }
  }
  .md\:py-8 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 8);
    }
  }
  .md\:ps-2 {
    @media (width >= 48rem) {
      padding-inline-start: calc(var(--spacing) * 2);
    }
  }
  .md\:ps-16 {
    @media (width >= 48rem) {
      padding-inline-start: calc(var(--spacing) * 16);
    }
  }
  .md\:ps-24 {
    @media (width >= 48rem) {
      padding-inline-start: calc(var(--spacing) * 24);
    }
  }
  .md\:pe-6 {
    @media (width >= 48rem) {
      padding-inline-end: calc(var(--spacing) * 6);
    }
  }
  .md\:pt-7 {
    @media (width >= 48rem) {
      padding-top: calc(var(--spacing) * 7);
    }
  }
  .md\:text-2xl {
    @media (width >= 48rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .md\:text-3xl {
    @media (width >= 48rem) {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  .md\:text-4xl {
    @media (width >= 48rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .md\:text-5xl {
    @media (width >= 48rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .md\:text-5xl\/\[1\.15\] {
    @media (width >= 48rem) {
      font-size: var(--text-5xl);
      line-height: 1.15;
    }
  }
  .md\:text-6xl {
    @media (width >= 48rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  .md\:text-6xl\/\[1\.1\] {
    @media (width >= 48rem) {
      font-size: var(--text-6xl);
      line-height: 1.1;
    }
  }
  .md\:text-base {
    @media (width >= 48rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .md\:text-lg {
    @media (width >= 48rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .md\:text-sm {
    @media (width >= 48rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .md\:text-xl {
    @media (width >= 48rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .md\:leading-\[120\%\]\! {
    @media (width >= 48rem) {
      --tw-leading: 120% !important;
      line-height: 120% !important;
    }
  }
  .md\:opacity-100 {
    @media (width >= 48rem) {
      opacity: 100%;
    }
  }
  .md\:aspect-h-4 {
    @media (width >= 48rem) {
      --tw-aspect-h: 4;
    }
  }
  .md\:aspect-h-11 {
    @media (width >= 48rem) {
      --tw-aspect-h: 11;
    }
  }
  .lg\:aspect-w-16 {
    @media (width >= 64rem) {
      position: relative;
      padding-bottom: calc(var(--tw-aspect-h) / var(--tw-aspect-w) * 100%);
      --tw-aspect-w: 16;
      > * {
        position: absolute;
        height: 100%;
        width: 100%;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
      }
    }
  }
  .lg\:sticky {
    @media (width >= 64rem) {
      position: sticky;
    }
  }
  .lg\:start-full {
    @media (width >= 64rem) {
      inset-inline-start: 100%;
    }
  }
  .lg\:end-3 {
    @media (width >= 64rem) {
      inset-inline-end: calc(var(--spacing) * 3);
    }
  }
  .lg\:top-0 {
    @media (width >= 64rem) {
      top: calc(var(--spacing) * 0);
    }
  }
  .lg\:top-5 {
    @media (width >= 64rem) {
      top: calc(var(--spacing) * 5);
    }
  }
  .lg\:top-24 {
    @media (width >= 64rem) {
      top: calc(var(--spacing) * 24);
    }
  }
  .lg\:top-32 {
    @media (width >= 64rem) {
      top: calc(var(--spacing) * 32);
    }
  }
  .lg\:right-20 {
    @media (width >= 64rem) {
      right: calc(var(--spacing) * 20);
    }
  }
  .lg\:left-20 {
    @media (width >= 64rem) {
      left: calc(var(--spacing) * 20);
    }
  }
  .lg\:col-span-4 {
    @media (width >= 64rem) {
      grid-column: span 4 / span 4;
    }
  }
  .lg\:-mx-3\.5 {
    @media (width >= 64rem) {
      margin-inline: calc(var(--spacing) * -3.5);
    }
  }
  .lg\:mx-10 {
    @media (width >= 64rem) {
      margin-inline: calc(var(--spacing) * 10);
    }
  }
  .lg\:my-24 {
    @media (width >= 64rem) {
      margin-block: calc(var(--spacing) * 24);
    }
  }
  .lg\:me-10 {
    @media (width >= 64rem) {
      margin-inline-end: calc(var(--spacing) * 10);
    }
  }
  .lg\:prose-lg {
    @media (width >= 64rem) {
      font-size: 1.125rem;
      line-height: 1.7777778;
      :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.3333333em;
        margin-bottom: 1.3333333em;
      }
      :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 1.2222222em;
        line-height: 1.4545455;
        margin-top: 1.0909091em;
        margin-bottom: 1.0909091em;
      }
      :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.6666667em;
        margin-bottom: 1.6666667em;
        padding-inline-start: 1em;
      }
      :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 2.6666667em;
        margin-top: 0;
        margin-bottom: 0.8333333em;
        line-height: 1;
      }
      :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 1.6666667em;
        margin-top: 1.8666667em;
        margin-bottom: 1.0666667em;
        line-height: 1.3333333;
      }
      :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 1.3333333em;
        margin-top: 1.6666667em;
        margin-bottom: 0.6666667em;
        line-height: 1.5;
      }
      :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 0.4444444em;
        line-height: 1.5555556;
      }
      :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 1.7777778em;
      }
      :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 1.7777778em;
      }
      :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
        margin-bottom: 0;
      }
      :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 1.7777778em;
      }
      :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.8888889em;
        border-radius: 0.3125rem;
        padding-top: 0.2222222em;
        padding-inline-end: 0.4444444em;
        padding-bottom: 0.2222222em;
        padding-inline-start: 0.4444444em;
      }
      :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.8888889em;
      }
      :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.8666667em;
      }
      :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.875em;
      }
      :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.8888889em;
        line-height: 1.75;
        margin-top: 2em;
        margin-bottom: 2em;
        border-radius: 0.375rem;
        padding-top: 1em;
        padding-inline-end: 1.5em;
        padding-bottom: 1em;
        padding-inline-start: 1.5em;
      }
      :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.3333333em;
        margin-bottom: 1.3333333em;
        padding-inline-start: 1.5555556em;
      }
      :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.3333333em;
        margin-bottom: 1.3333333em;
        padding-inline-start: 1.5555556em;
      }
      :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.6666667em;
        margin-bottom: 0.6666667em;
      }
      :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0.4444444em;
      }
      :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0.4444444em;
      }
      :where(.lg\:prose-lg > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.8888889em;
        margin-bottom: 0.8888889em;
      }
      :where(.lg\:prose-lg > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.3333333em;
      }
      :where(.lg\:prose-lg > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 1.3333333em;
      }
      :where(.lg\:prose-lg > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.3333333em;
      }
      :where(.lg\:prose-lg > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 1.3333333em;
      }
      :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.8888889em;
        margin-bottom: 0.8888889em;
      }
      :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.3333333em;
        margin-bottom: 1.3333333em;
      }
      :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.3333333em;
      }
      :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.6666667em;
        padding-inline-start: 1.5555556em;
      }
      :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 3.1111111em;
        margin-bottom: 3.1111111em;
      }
      :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.8888889em;
        line-height: 1.5;
      }
      :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-end: 0.75em;
        padding-bottom: 0.75em;
        padding-inline-start: 0.75em;
      }
      :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0;
      }
      :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-end: 0;
      }
      :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-top: 0.75em;
        padding-inline-end: 0.75em;
        padding-bottom: 0.75em;
        padding-inline-start: 0.75em;
      }
      :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0;
      }
      :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-end: 0;
      }
      :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 1.7777778em;
      }
      :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
        margin-bottom: 0;
      }
      :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.8888889em;
        line-height: 1.5;
        margin-top: 1em;
      }
      :where(.lg\:prose-lg > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(.lg\:prose-lg > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 0;
      }
    }
  }
  .lg\:mt-0 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 0);
    }
  }
  .lg\:mt-10 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 10);
    }
  }
  .lg\:mt-16 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 16);
    }
  }
  .lg\:mt-20 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 20);
    }
  }
  .lg\:mt-24 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 24);
    }
  }
  .lg\:mt-32 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 32);
    }
  }
  .lg\:mr-3 {
    @media (width >= 64rem) {
      margin-right: calc(var(--spacing) * 3);
    }
  }
  .lg\:mb-0 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 0);
    }
  }
  .lg\:mb-4 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 4);
    }
  }
  .lg\:mb-6 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 6);
    }
  }
  .lg\:mb-10 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 10);
    }
  }
  .lg\:mb-12 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 12);
    }
  }
  .lg\:mb-28 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 28);
    }
  }
  .lg\:mb-32 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 32);
    }
  }
  .lg\:ml-3 {
    @media (width >= 64rem) {
      margin-left: calc(var(--spacing) * 3);
    }
  }
  .lg\:block {
    @media (width >= 64rem) {
      display: block;
    }
  }
  .lg\:flex {
    @media (width >= 64rem) {
      display: flex;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:size-7 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 7);
      height: calc(var(--spacing) * 7);
    }
  }
  .lg\:h-5 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 5);
    }
  }
  .lg\:h-6 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 6);
    }
  }
  .lg\:h-7 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 7);
    }
  }
  .lg\:h-10 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 10);
    }
  }
  .lg\:h-24 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 24);
    }
  }
  .lg\:h-26 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 26);
    }
  }
  .lg\:h-28 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 28);
    }
  }
  .lg\:h-52 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 52);
    }
  }
  .lg\:h-96 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 96);
    }
  }
  .lg\:h-\[700px\] {
    @media (width >= 64rem) {
      height: 700px;
    }
  }
  .lg\:min-h-\[80vh\] {
    @media (width >= 64rem) {
      min-height: 80vh;
    }
  }
  .lg\:min-h-\[150px\] {
    @media (width >= 64rem) {
      min-height: 150px;
    }
  }
  .lg\:min-h-\[500px\] {
    @media (width >= 64rem) {
      min-height: 500px;
    }
  }
  .lg\:w-1\/2 {
    @media (width >= 64rem) {
      width: calc(1/2 * 100%);
    }
  }
  .lg\:w-1\/3 {
    @media (width >= 64rem) {
      width: calc(1/3 * 100%);
    }
  }
  .lg\:w-1\/4 {
    @media (width >= 64rem) {
      width: calc(1/4 * 100%);
    }
  }
  .lg\:w-2\/3 {
    @media (width >= 64rem) {
      width: calc(2/3 * 100%);
    }
  }
  .lg\:w-2\/5 {
    @media (width >= 64rem) {
      width: calc(2/5 * 100%);
    }
  }
  .lg\:w-3\/4 {
    @media (width >= 64rem) {
      width: calc(3/4 * 100%);
    }
  }
  .lg\:w-3\/5 {
    @media (width >= 64rem) {
      width: calc(3/5 * 100%);
    }
  }
  .lg\:w-3xl {
    @media (width >= 64rem) {
      width: var(--container-3xl);
    }
  }
  .lg\:w-4\/9 {
    @media (width >= 64rem) {
      width: calc(4/9 * 100%);
    }
  }
  .lg\:w-5 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 5);
    }
  }
  .lg\:w-6 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 6);
    }
  }
  .lg\:w-7 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 7);
    }
  }
  .lg\:w-24 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 24);
    }
  }
  .lg\:w-26 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 26);
    }
  }
  .lg\:w-28 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 28);
    }
  }
  .lg\:w-32 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 32);
    }
  }
  .lg\:w-36 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 36);
    }
  }
  .lg\:w-52 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 52);
    }
  }
  .lg\:w-96 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 96);
    }
  }
  .lg\:w-\[30\%\] {
    @media (width >= 64rem) {
      width: 30%;
    }
  }
  .lg\:w-\[70\%\] {
    @media (width >= 64rem) {
      width: 70%;
    }
  }
  .lg\:max-w-lg {
    @media (width >= 64rem) {
      max-width: var(--container-lg);
    }
  }
  .lg\:max-w-sm {
    @media (width >= 64rem) {
      max-width: var(--container-sm);
    }
  }
  .lg\:flex-1 {
    @media (width >= 64rem) {
      flex: 1;
    }
  }
  .lg\:grid-cols-1 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(1, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-2 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-4 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-5 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-6 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(6, minmax(0, 1fr));
    }
  }
  .lg\:flex-col {
    @media (width >= 64rem) {
      flex-direction: column;
    }
  }
  .lg\:flex-row {
    @media (width >= 64rem) {
      flex-direction: row;
    }
  }
  .lg\:flex-row-reverse {
    @media (width >= 64rem) {
      flex-direction: row-reverse;
    }
  }
  .lg\:items-center {
    @media (width >= 64rem) {
      align-items: center;
    }
  }
  .lg\:items-start {
    @media (width >= 64rem) {
      align-items: flex-start;
    }
  }
  .lg\:justify-between {
    @media (width >= 64rem) {
      justify-content: space-between;
    }
  }
  .lg\:gap-6 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 6);
    }
  }
  .lg\:gap-8 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .lg\:gap-10 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 10);
    }
  }
  .lg\:gap-12 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 12);
    }
  }
  .lg\:gap-20 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 20);
    }
  }
  .lg\:space-y-0 {
    @media (width >= 64rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .lg\:space-y-10 {
    @media (width >= 64rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 10) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 10) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .lg\:gap-x-0 {
    @media (width >= 64rem) {
      column-gap: calc(var(--spacing) * 0);
    }
  }
  .lg\:gap-x-10 {
    @media (width >= 64rem) {
      column-gap: calc(var(--spacing) * 10);
    }
  }
  .lg\:gap-y-2\.5 {
    @media (width >= 64rem) {
      row-gap: calc(var(--spacing) * 2.5);
    }
  }
  .lg\:gap-y-28 {
    @media (width >= 64rem) {
      row-gap: calc(var(--spacing) * 28);
    }
  }
  .lg\:gap-y-32 {
    @media (width >= 64rem) {
      row-gap: calc(var(--spacing) * 32);
    }
  }
  .lg\:self-center {
    @media (width >= 64rem) {
      align-self: center;
    }
  }
  .lg\:rounded-l-\[3rem\] {
    @media (width >= 64rem) {
      border-top-left-radius: 3rem;
      border-bottom-left-radius: 3rem;
    }
  }
  .lg\:border {
    @media (width >= 64rem) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .lg\:p-4 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 4);
    }
  }
  .lg\:p-8 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 8);
    }
  }
  .lg\:p-10 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 10);
    }
  }
  .lg\:p-12 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 12);
    }
  }
  .lg\:px-3\.5 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 3.5);
    }
  }
  .lg\:px-5 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 5);
    }
  }
  .lg\:px-8 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .lg\:py-8 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 8);
    }
  }
  .lg\:py-12 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 12);
    }
  }
  .lg\:py-16 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 16);
    }
  }
  .lg\:py-20 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 20);
    }
  }
  .lg\:py-24 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 24);
    }
  }
  .lg\:py-28 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 28);
    }
  }
  .lg\:py-32 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 32);
    }
  }
  .lg\:ps-10 {
    @media (width >= 64rem) {
      padding-inline-start: calc(var(--spacing) * 10);
    }
  }
  .lg\:ps-16 {
    @media (width >= 64rem) {
      padding-inline-start: calc(var(--spacing) * 16);
    }
  }
  .lg\:pe-5 {
    @media (width >= 64rem) {
      padding-inline-end: calc(var(--spacing) * 5);
    }
  }
  .lg\:pe-10 {
    @media (width >= 64rem) {
      padding-inline-end: calc(var(--spacing) * 10);
    }
  }
  .lg\:pe-16 {
    @media (width >= 64rem) {
      padding-inline-end: calc(var(--spacing) * 16);
    }
  }
  .lg\:pt-3 {
    @media (width >= 64rem) {
      padding-top: calc(var(--spacing) * 3);
    }
  }
  .lg\:pt-5 {
    @media (width >= 64rem) {
      padding-top: calc(var(--spacing) * 5);
    }
  }
  .lg\:pt-6 {
    @media (width >= 64rem) {
      padding-top: calc(var(--spacing) * 6);
    }
  }
  .lg\:pt-8 {
    @media (width >= 64rem) {
      padding-top: calc(var(--spacing) * 8);
    }
  }
  .lg\:pt-12 {
    @media (width >= 64rem) {
      padding-top: calc(var(--spacing) * 12);
    }
  }
  .lg\:pt-16 {
    @media (width >= 64rem) {
      padding-top: calc(var(--spacing) * 16);
    }
  }
  .lg\:pt-24 {
    @media (width >= 64rem) {
      padding-top: calc(var(--spacing) * 24);
    }
  }
  .lg\:pt-32 {
    @media (width >= 64rem) {
      padding-top: calc(var(--spacing) * 32);
    }
  }
  .lg\:pb-0 {
    @media (width >= 64rem) {
      padding-bottom: calc(var(--spacing) * 0);
    }
  }
  .lg\:pb-3 {
    @media (width >= 64rem) {
      padding-bottom: calc(var(--spacing) * 3);
    }
  }
  .lg\:pb-12 {
    @media (width >= 64rem) {
      padding-bottom: calc(var(--spacing) * 12);
    }
  }
  .lg\:pb-16 {
    @media (width >= 64rem) {
      padding-bottom: calc(var(--spacing) * 16);
    }
  }
  .lg\:pb-20 {
    @media (width >= 64rem) {
      padding-bottom: calc(var(--spacing) * 20);
    }
  }
  .lg\:pb-28 {
    @media (width >= 64rem) {
      padding-bottom: calc(var(--spacing) * 28);
    }
  }
  .lg\:pb-32 {
    @media (width >= 64rem) {
      padding-bottom: calc(var(--spacing) * 32);
    }
  }
  .lg\:pb-60 {
    @media (width >= 64rem) {
      padding-bottom: calc(var(--spacing) * 60);
    }
  }
  .lg\:pb-64 {
    @media (width >= 64rem) {
      padding-bottom: calc(var(--spacing) * 64);
    }
  }
  .lg\:text-left {
    @media (width >= 64rem) {
      text-align: left;
    }
  }
  .lg\:text-2xl {
    @media (width >= 64rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .lg\:text-3xl {
    @media (width >= 64rem) {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  .lg\:text-4xl {
    @media (width >= 64rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .lg\:text-5xl {
    @media (width >= 64rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .lg\:text-6xl {
    @media (width >= 64rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  .lg\:text-base {
    @media (width >= 64rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .lg\:text-lg {
    @media (width >= 64rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .lg\:text-sm {
    @media (width >= 64rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .lg\:text-xl {
    @media (width >= 64rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .lg\:text-\[15px\] {
    @media (width >= 64rem) {
      font-size: 15px;
    }
  }
  .lg\:aspect-h-2 {
    @media (width >= 64rem) {
      --tw-aspect-h: 2;
    }
  }
  .lg\:aspect-h-9 {
    @media (width >= 64rem) {
      --tw-aspect-h: 9;
    }
  }
  .lg\:md\:col-span-1 {
    @media (width >= 64rem) {
      @media (width >= 48rem) {
        grid-column: span 1 / span 1;
      }
    }
  }
  .xl\:static {
    @media (width >= 80rem) {
      position: static;
    }
  }
  .xl\:sticky {
    @media (width >= 80rem) {
      position: sticky;
    }
  }
  .xl\:-start-5 {
    @media (width >= 80rem) {
      inset-inline-start: calc(var(--spacing) * -5);
    }
  }
  .xl\:-end-6 {
    @media (width >= 80rem) {
      inset-inline-end: calc(var(--spacing) * -6);
    }
  }
  .xl\:-end-10 {
    @media (width >= 80rem) {
      inset-inline-end: calc(var(--spacing) * -10);
    }
  }
  .xl\:end-4 {
    @media (width >= 80rem) {
      inset-inline-end: calc(var(--spacing) * 4);
    }
  }
  .xl\:top-0 {
    @media (width >= 80rem) {
      top: calc(var(--spacing) * 0);
    }
  }
  .xl\:top-1\/2 {
    @media (width >= 80rem) {
      top: calc(1/2 * 100%);
    }
  }
  .xl\:top-40 {
    @media (width >= 80rem) {
      top: calc(var(--spacing) * 40);
    }
  }
  .xl\:z-0 {
    @media (width >= 80rem) {
      z-index: 0;
    }
  }
  .xl\:col-span-2 {
    @media (width >= 80rem) {
      grid-column: span 2 / span 2;
    }
  }
  .xl\:ms-10 {
    @media (width >= 80rem) {
      margin-inline-start: calc(var(--spacing) * 10);
    }
  }
  .xl\:me-0 {
    @media (width >= 80rem) {
      margin-inline-end: calc(var(--spacing) * 0);
    }
  }
  .xl\:me-2 {
    @media (width >= 80rem) {
      margin-inline-end: calc(var(--spacing) * 2);
    }
  }
  .xl\:mt-0 {
    @media (width >= 80rem) {
      margin-top: calc(var(--spacing) * 0);
    }
  }
  .xl\:ml-12 {
    @media (width >= 80rem) {
      margin-left: calc(var(--spacing) * 12);
    }
  }
  .xl\:block {
    @media (width >= 80rem) {
      display: block;
    }
  }
  .xl\:grid {
    @media (width >= 80rem) {
      display: grid;
    }
  }
  .xl\:size-11 {
    @media (width >= 80rem) {
      width: calc(var(--spacing) * 11);
      height: calc(var(--spacing) * 11);
    }
  }
  .xl\:h-screen {
    @media (width >= 80rem) {
      height: 100vh;
    }
  }
  .xl\:w-1\/2 {
    @media (width >= 80rem) {
      width: calc(1/2 * 100%);
    }
  }
  .xl\:w-1\/3 {
    @media (width >= 80rem) {
      width: calc(1/3 * 100%);
    }
  }
  .xl\:w-1\/4 {
    @media (width >= 80rem) {
      width: calc(1/4 * 100%);
    }
  }
  .xl\:w-1\/5 {
    @media (width >= 80rem) {
      width: calc(1/5 * 100%);
    }
  }
  .xl\:w-2\/3 {
    @media (width >= 80rem) {
      width: calc(2/3 * 100%);
    }
  }
  .xl\:w-2\/5 {
    @media (width >= 80rem) {
      width: calc(2/5 * 100%);
    }
  }
  .xl\:w-3\/5 {
    @media (width >= 80rem) {
      width: calc(3/5 * 100%);
    }
  }
  .xl\:w-5\/14 {
    @media (width >= 80rem) {
      width: calc(5/14 * 100%);
    }
  }
  .xl\:w-40 {
    @media (width >= 80rem) {
      width: calc(var(--spacing) * 40);
    }
  }
  .xl\:w-\[64\%\] {
    @media (width >= 80rem) {
      width: 64%;
    }
  }
  .xl\:w-full {
    @media (width >= 80rem) {
      width: 100%;
    }
  }
  .xl\:max-w-2xl {
    @media (width >= 80rem) {
      max-width: var(--container-2xl);
    }
  }
  .xl\:max-w-6xl {
    @media (width >= 80rem) {
      max-width: var(--container-6xl);
    }
  }
  .xl\:max-w-\[1340px\] {
    @media (width >= 80rem) {
      max-width: 1340px;
    }
  }
  .xl\:max-w-lg {
    @media (width >= 80rem) {
      max-width: var(--container-lg);
    }
  }
  .xl\:max-w-none {
    @media (width >= 80rem) {
      max-width: none;
    }
  }
  .xl\:grid-cols-2 {
    @media (width >= 80rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .xl\:grid-cols-3 {
    @media (width >= 80rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .xl\:grid-cols-4 {
    @media (width >= 80rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .xl\:grid-cols-5 {
    @media (width >= 80rem) {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
  }
  .xl\:justify-start {
    @media (width >= 80rem) {
      justify-content: flex-start;
    }
  }
  .xl\:gap-8 {
    @media (width >= 80rem) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .xl\:gap-10 {
    @media (width >= 80rem) {
      gap: calc(var(--spacing) * 10);
    }
  }
  .xl\:gap-x-8 {
    @media (width >= 80rem) {
      column-gap: calc(var(--spacing) * 8);
    }
  }
  .xl\:gap-x-10 {
    @media (width >= 80rem) {
      column-gap: calc(var(--spacing) * 10);
    }
  }
  .xl\:gap-x-12 {
    @media (width >= 80rem) {
      column-gap: calc(var(--spacing) * 12);
    }
  }
  .xl\:gap-y-8 {
    @media (width >= 80rem) {
      row-gap: calc(var(--spacing) * 8);
    }
  }
  .xl\:gap-y-10 {
    @media (width >= 80rem) {
      row-gap: calc(var(--spacing) * 10);
    }
  }
  .xl\:rounded-\[40px\] {
    @media (width >= 80rem) {
      border-radius: 40px;
    }
  }
  .xl\:rounded-t-3xl {
    @media (width >= 80rem) {
      border-top-left-radius: var(--radius-3xl);
      border-top-right-radius: var(--radius-3xl);
    }
  }
  .xl\:rounded-b-\[48px\] {
    @media (width >= 80rem) {
      border-bottom-right-radius: 48px;
      border-bottom-left-radius: 48px;
    }
  }
  .xl\:p-8 {
    @media (width >= 80rem) {
      padding: calc(var(--spacing) * 8);
    }
  }
  .xl\:px-5 {
    @media (width >= 80rem) {
      padding-inline: calc(var(--spacing) * 5);
    }
  }
  .xl\:px-8 {
    @media (width >= 80rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .xl\:py-6 {
    @media (width >= 80rem) {
      padding-block: calc(var(--spacing) * 6);
    }
  }
  .xl\:py-14 {
    @media (width >= 80rem) {
      padding-block: calc(var(--spacing) * 14);
    }
  }
  .xl\:py-24 {
    @media (width >= 80rem) {
      padding-block: calc(var(--spacing) * 24);
    }
  }
  .xl\:py-40 {
    @media (width >= 80rem) {
      padding-block: calc(var(--spacing) * 40);
    }
  }
  .xl\:pe-0 {
    @media (width >= 80rem) {
      padding-inline-end: calc(var(--spacing) * 0);
    }
  }
  .xl\:pe-6 {
    @media (width >= 80rem) {
      padding-inline-end: calc(var(--spacing) * 6);
    }
  }
  .xl\:pe-14 {
    @media (width >= 80rem) {
      padding-inline-end: calc(var(--spacing) * 14);
    }
  }
  .xl\:pr-20 {
    @media (width >= 80rem) {
      padding-right: calc(var(--spacing) * 20);
    }
  }
  .xl\:text-7xl {
    @media (width >= 80rem) {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }
  .xl\:text-7xl\/\[1\.1\] {
    @media (width >= 80rem) {
      font-size: var(--text-7xl);
      line-height: 1.1;
    }
  }
  .xl\:text-7xl\/\[1\.15\] {
    @media (width >= 80rem) {
      font-size: var(--text-7xl);
      line-height: 1.15;
    }
  }
  .xl\:text-lg {
    @media (width >= 80rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .xl\:aspect-h-8 {
    @media (width >= 80rem) {
      --tw-aspect-h: 8;
    }
  }
  .xl\:aspect-h-9 {
    @media (width >= 80rem) {
      --tw-aspect-h: 9;
    }
  }
  .\32 xl\:max-w-\(--breakpoint-2xl\) {
    @media (width >= 96rem) {
      max-width: var(--breakpoint-2xl);
    }
  }
  .\32 xl\:max-w-none {
    @media (width >= 96rem) {
      max-width: none;
    }
  }
  .\32 xl\:grid-cols-3 {
    @media (width >= 96rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .\32 xl\:gap-x-6 {
    @media (width >= 96rem) {
      column-gap: calc(var(--spacing) * 6);
    }
  }
  .\32 xl\:px-10 {
    @media (width >= 96rem) {
      padding-inline: calc(var(--spacing) * 10);
    }
  }
  .\32 xl\:py-48 {
    @media (width >= 96rem) {
      padding-block: calc(var(--spacing) * 48);
    }
  }
  .\32 xl\:ps-10 {
    @media (width >= 96rem) {
      padding-inline-start: calc(var(--spacing) * 10);
    }
  }
  .\32 xl\:aspect-h-9 {
    @media (width >= 96rem) {
      --tw-aspect-h: 9;
    }
  }
  .rtl\:-translate-x-5 {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      --tw-translate-x: calc(var(--spacing) * -5);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .rtl\:rotate-180 {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      rotate: 180deg;
    }
  }
  .rtl\:rotate-270 {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      rotate: 270deg;
    }
  }
  .rtl\:object-left {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      object-position: left;
    }
  }
  .sm\:rtl\:divide-x-reverse {
    @media (width >= 40rem) {
      &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        :where(& > :not(:last-child)) {
          --tw-divide-x-reverse: 1;
        }
      }
    }
  }
  .dark\:block {
    &:where(.dark, .dark *) {
      display: block;
    }
  }
  .dark\:hidden {
    &:where(.dark, .dark *) {
      display: none;
    }
  }
  .dark\:divide-neutral-700 {
    &:where(.dark, .dark *) {
      :where(& > :not(:last-child)) {
        border-color: var(--color-neutral-700);
      }
    }
  }
  .dark\:divide-neutral-800 {
    &:where(.dark, .dark *) {
      :where(& > :not(:last-child)) {
        border-color: var(--color-neutral-800);
      }
    }
  }
  .dark\:border {
    &:where(.dark, .dark *) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .dark\:border-t {
    &:where(.dark, .dark *) {
      border-top-style: var(--tw-border-style);
      border-top-width: 1px;
    }
  }
  .dark\:border-b {
    &:where(.dark, .dark *) {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 1px;
    }
  }
  .dark\:border-\[\#0480ea\]\/30 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in oklab, #0480ea 30%, transparent);
    }
  }
  .dark\:border-blue-700\/50 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(48.8% 0.243 264.376) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-blue-700) 50%, transparent);
      }
    }
  }
  .dark\:border-gray-700 {
    &:where(.dark, .dark *) {
      border-color: var(--color-gray-700);
    }
  }
  .dark\:border-neutral-200\! {
    &:where(.dark, .dark *) {
      border-color: var(--color-neutral-200) !important;
    }
  }
  .dark\:border-neutral-600 {
    &:where(.dark, .dark *) {
      border-color: var(--color-neutral-600);
    }
  }
  .dark\:border-neutral-700 {
    &:where(.dark, .dark *) {
      border-color: var(--color-neutral-700);
    }
  }
  .dark\:border-neutral-700\/50 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, rgb(55, 65, 81) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-neutral-700) 50%, transparent);
      }
    }
  }
  .dark\:border-neutral-800 {
    &:where(.dark, .dark *) {
      border-color: var(--color-neutral-800);
    }
  }
  .dark\:border-neutral-900 {
    &:where(.dark, .dark *) {
      border-color: var(--color-neutral-900);
    }
  }
  .dark\:border-primary-400\/30 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, rgb(96, 165, 250) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-primary-400) 30%, transparent);
      }
    }
  }
  .dark\:border-primary-600 {
    &:where(.dark, .dark *) {
      border-color: var(--color-primary-600);
    }
  }
  .dark\:border-primary-800\/30 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, rgb(2, 59, 108) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-primary-800) 30%, transparent);
      }
    }
  }
  .dark\:border-white\/5 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .dark\:border-white\/10 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:border-white\/15 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 15%, transparent);
      }
    }
  }
  .dark\:border-b-white\/10 {
    &:where(.dark, .dark *) {
      border-bottom-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-bottom-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:border-l-white\/5 {
    &:where(.dark, .dark *) {
      border-left-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-left-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .dark\:bg-\(--btn-bg\) {
    &:where(.dark, .dark *) {
      background-color: var(--btn-bg);
    }
  }
  .dark\:bg-\[\#0480ea\]\/20 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in oklab, #0480ea 20%, transparent);
    }
  }
  .dark\:bg-amber-400\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(82.8% 0.189 84.429) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-amber-400) 10%, transparent);
      }
    }
  }
  .dark\:bg-black\/20 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #000 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-black) 20%, transparent);
      }
    }
  }
  .dark\:bg-black\/50 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #000 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
      }
    }
  }
  .dark\:bg-cyan-400\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(78.9% 0.154 211.53) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-cyan-400) 10%, transparent);
      }
    }
  }
  .dark\:bg-emerald-500\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(69.6% 0.17 162.48) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-emerald-500) 10%, transparent);
      }
    }
  }
  .dark\:bg-fuchsia-400\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(74% 0.238 322.16) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-fuchsia-400) 10%, transparent);
      }
    }
  }
  .dark\:bg-gray-800\/80 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(27.8% 0.033 256.848) 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-800) 80%, transparent);
      }
    }
  }
  .dark\:bg-gray-800\/90 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(27.8% 0.033 256.848) 90%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-800) 90%, transparent);
      }
    }
  }
  .dark\:bg-gray-800\/95 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(27.8% 0.033 256.848) 95%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-800) 95%, transparent);
      }
    }
  }
  .dark\:bg-green-500\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(72.3% 0.219 149.579) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-green-500) 10%, transparent);
      }
    }
  }
  .dark\:bg-lime-400\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(84.1% 0.238 128.85) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-lime-400) 10%, transparent);
      }
    }
  }
  .dark\:bg-neutral-100 {
    &:where(.dark, .dark *) {
      background-color: var(--color-neutral-100);
    }
  }
  .dark\:bg-neutral-200 {
    &:where(.dark, .dark *) {
      background-color: var(--color-neutral-200);
    }
  }
  .dark\:bg-neutral-600 {
    &:where(.dark, .dark *) {
      background-color: var(--color-neutral-600);
    }
  }
  .dark\:bg-neutral-700 {
    &:where(.dark, .dark *) {
      background-color: var(--color-neutral-700);
    }
  }
  .dark\:bg-neutral-700\/50 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, rgb(55, 65, 81) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-700) 50%, transparent);
      }
    }
  }
  .dark\:bg-neutral-800 {
    &:where(.dark, .dark *) {
      background-color: var(--color-neutral-800);
    }
  }
  .dark\:bg-neutral-800\/40 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, rgb(31, 41, 55) 40%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-800) 40%, transparent);
      }
    }
  }
  .dark\:bg-neutral-800\/75 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, rgb(31, 41, 55) 75%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-800) 75%, transparent);
      }
    }
  }
  .dark\:bg-neutral-800\/80 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, rgb(31, 41, 55) 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-800) 80%, transparent);
      }
    }
  }
  .dark\:bg-neutral-800\/90 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, rgb(31, 41, 55) 90%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-800) 90%, transparent);
      }
    }
  }
  .dark\:bg-neutral-800\/95 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, rgb(31, 41, 55) 95%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-800) 95%, transparent);
      }
    }
  }
  .dark\:bg-neutral-900 {
    &:where(.dark, .dark *) {
      background-color: var(--color-neutral-900);
    }
  }
  .dark\:bg-neutral-900\/80 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, rgb(17, 24, 39) 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-900) 80%, transparent);
      }
    }
  }
  .dark\:bg-neutral-950\/90 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(14.5% 0 0) 90%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-950) 90%, transparent);
      }
    }
  }
  .dark\:bg-orange-500\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(70.5% 0.213 47.604) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-orange-500) 10%, transparent);
      }
    }
  }
  .dark\:bg-pink-400\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(71.8% 0.202 349.761) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-pink-400) 10%, transparent);
      }
    }
  }
  .dark\:bg-primary-600 {
    &:where(.dark, .dark *) {
      background-color: var(--color-primary-600);
    }
  }
  .dark\:bg-red-500\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-red-500) 10%, transparent);
      }
    }
  }
  .dark\:bg-rose-400\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(71.2% 0.194 13.428) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-rose-400) 10%, transparent);
      }
    }
  }
  .dark\:bg-sky-500\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(68.5% 0.169 237.323) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-sky-500) 10%, transparent);
      }
    }
  }
  .dark\:bg-teal-500\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(70.4% 0.14 182.503) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-teal-500) 10%, transparent);
      }
    }
  }
  .dark\:bg-white {
    &:where(.dark, .dark *) {
      background-color: var(--color-white);
    }
  }
  .dark\:bg-white\/5 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .dark\:bg-white\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:bg-yellow-400\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(85.2% 0.199 91.936) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-yellow-400) 10%, transparent);
      }
    }
  }
  .dark\:bg-zinc-800\/75 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(27.4% 0.006 286.033) 75%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-zinc-800) 75%, transparent);
      }
    }
  }
  .dark\:from-\[\#0480ea\] {
    &:where(.dark, .dark *) {
      --tw-gradient-from: #0480ea;
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:from-\[\#0480ea\]\/10 {
    &:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in oklab, #0480ea 10%, transparent);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:from-blue-900\/20 {
    &:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in srgb, oklch(37.9% 0.146 265.522) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-from: color-mix(in oklab, var(--color-blue-900) 20%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:from-blue-900\/30 {
    &:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in srgb, oklch(37.9% 0.146 265.522) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-from: color-mix(in oklab, var(--color-blue-900) 30%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:from-neutral-900 {
    &:where(.dark, .dark *) {
      --tw-gradient-from: var(--color-neutral-900);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:via-neutral-900 {
    &:where(.dark, .dark *) {
      --tw-gradient-via: var(--color-neutral-900);
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
  }
  .dark\:to-\[\#0366d6\] {
    &:where(.dark, .dark *) {
      --tw-gradient-to: #0366d6;
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:to-\[\#0480ea\]\/20 {
    &:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in oklab, #0480ea 20%, transparent);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:to-blue-800\/20 {
    &:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in srgb, oklch(42.4% 0.199 265.638) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-to: color-mix(in oklab, var(--color-blue-800) 20%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:to-blue-900\/10 {
    &:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in srgb, oklch(37.9% 0.146 265.522) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-to: color-mix(in oklab, var(--color-blue-900) 10%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:to-indigo-900\/20 {
    &:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in srgb, oklch(35.9% 0.144 278.697) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-to: color-mix(in oklab, var(--color-indigo-900) 20%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:to-neutral-800 {
    &:where(.dark, .dark *) {
      --tw-gradient-to: var(--color-neutral-800);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:stroke-neutral-400 {
    &:where(.dark, .dark *) {
      stroke: var(--color-neutral-400);
    }
  }
  .dark\:stroke-zinc-400 {
    &:where(.dark, .dark *) {
      stroke: var(--color-zinc-400);
    }
  }
  .dark\:text-amber-400 {
    &:where(.dark, .dark *) {
      color: var(--color-amber-400);
    }
  }
  .dark\:text-black {
    &:where(.dark, .dark *) {
      color: var(--color-black);
    }
  }
  .dark\:text-blue-300 {
    &:where(.dark, .dark *) {
      color: var(--color-blue-300);
    }
  }
  .dark\:text-blue-400 {
    &:where(.dark, .dark *) {
      color: var(--color-blue-400);
    }
  }
  .dark\:text-cyan-300 {
    &:where(.dark, .dark *) {
      color: var(--color-cyan-300);
    }
  }
  .dark\:text-emerald-400 {
    &:where(.dark, .dark *) {
      color: var(--color-emerald-400);
    }
  }
  .dark\:text-fuchsia-400 {
    &:where(.dark, .dark *) {
      color: var(--color-fuchsia-400);
    }
  }
  .dark\:text-gray-100 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-100);
    }
  }
  .dark\:text-gray-200 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-200);
    }
  }
  .dark\:text-gray-300 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-300);
    }
  }
  .dark\:text-gray-400 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-400);
    }
  }
  .dark\:text-green-400 {
    &:where(.dark, .dark *) {
      color: var(--color-green-400);
    }
  }
  .dark\:text-indigo-400 {
    &:where(.dark, .dark *) {
      color: var(--color-indigo-400);
    }
  }
  .dark\:text-lime-300 {
    &:where(.dark, .dark *) {
      color: var(--color-lime-300);
    }
  }
  .dark\:text-neutral-50 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-50);
    }
  }
  .dark\:text-neutral-100 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-100);
    }
  }
  .dark\:text-neutral-200 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-200);
    }
  }
  .dark\:text-neutral-300 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-300);
    }
  }
  .dark\:text-neutral-400 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-400);
    }
  }
  .dark\:text-neutral-500 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-500);
    }
  }
  .dark\:text-neutral-600 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-600);
    }
  }
  .dark\:text-neutral-900 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-900);
    }
  }
  .dark\:text-neutral-950 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-950);
    }
  }
  .dark\:text-orange-400 {
    &:where(.dark, .dark *) {
      color: var(--color-orange-400);
    }
  }
  .dark\:text-pink-400 {
    &:where(.dark, .dark *) {
      color: var(--color-pink-400);
    }
  }
  .dark\:text-primary-200 {
    &:where(.dark, .dark *) {
      color: var(--color-primary-200);
    }
  }
  .dark\:text-primary-300 {
    &:where(.dark, .dark *) {
      color: var(--color-primary-300);
    }
  }
  .dark\:text-primary-400 {
    &:where(.dark, .dark *) {
      color: var(--color-primary-400);
    }
  }
  .dark\:text-purple-400 {
    &:where(.dark, .dark *) {
      color: var(--color-purple-400);
    }
  }
  .dark\:text-red-400 {
    &:where(.dark, .dark *) {
      color: var(--color-red-400);
    }
  }
  .dark\:text-red-500 {
    &:where(.dark, .dark *) {
      color: var(--color-red-500);
    }
  }
  .dark\:text-rose-400 {
    &:where(.dark, .dark *) {
      color: var(--color-rose-400);
    }
  }
  .dark\:text-sky-300 {
    &:where(.dark, .dark *) {
      color: var(--color-sky-300);
    }
  }
  .dark\:text-teal-300 {
    &:where(.dark, .dark *) {
      color: var(--color-teal-300);
    }
  }
  .dark\:text-violet-400 {
    &:where(.dark, .dark *) {
      color: var(--color-violet-400);
    }
  }
  .dark\:text-white {
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .dark\:text-yellow-300 {
    &:where(.dark, .dark *) {
      color: var(--color-yellow-300);
    }
  }
  .dark\:text-zinc-400 {
    &:where(.dark, .dark *) {
      color: var(--color-zinc-400);
    }
  }
  .dark\:placeholder-neutral-200 {
    &:where(.dark, .dark *) {
      &::placeholder {
        color: var(--color-neutral-200);
      }
    }
  }
  .dark\:placeholder-neutral-300 {
    &:where(.dark, .dark *) {
      &::placeholder {
        color: var(--color-neutral-300);
      }
    }
  }
  .dark\:\[color-scheme\:dark\] {
    &:where(.dark, .dark *) {
      color-scheme: dark;
    }
  }
  .dark\:shadow-2xl {
    &:where(.dark, .dark *) {
      --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .dark\:ring-gray-700 {
    &:where(.dark, .dark *) {
      --tw-ring-color: var(--color-gray-700);
    }
  }
  .dark\:ring-neutral-200 {
    &:where(.dark, .dark *) {
      --tw-ring-color: var(--color-neutral-200);
    }
  }
  .dark\:ring-neutral-900 {
    &:where(.dark, .dark *) {
      --tw-ring-color: var(--color-neutral-900);
    }
  }
  .dark\:ring-white\/10 {
    &:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:ring-white\/15 {
    &:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in srgb, #fff 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-white) 15%, transparent);
      }
    }
  }
  .dark\:outline-white\/10 {
    &:where(.dark, .dark *) {
      outline-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        outline-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:prose-invert {
    &:where(.dark, .dark *) {
      --tw-prose-body: var(--tw-prose-invert-body);
      --tw-prose-headings: var(--tw-prose-invert-headings);
      --tw-prose-lead: var(--tw-prose-invert-lead);
      --tw-prose-links: var(--tw-prose-invert-links);
      --tw-prose-bold: var(--tw-prose-invert-bold);
      --tw-prose-counters: var(--tw-prose-invert-counters);
      --tw-prose-bullets: var(--tw-prose-invert-bullets);
      --tw-prose-hr: var(--tw-prose-invert-hr);
      --tw-prose-quotes: var(--tw-prose-invert-quotes);
      --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
      --tw-prose-captions: var(--tw-prose-invert-captions);
      --tw-prose-kbd: var(--tw-prose-invert-kbd);
      --tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
      --tw-prose-code: var(--tw-prose-invert-code);
      --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
      --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
      --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
      --tw-prose-td-borders: var(--tw-prose-invert-td-borders);
    }
  }
  .dark\:\[--btn-bg\:transparent\] {
    &:where(.dark, .dark *) {
      --btn-bg: transparent;
    }
  }
  .dark\:\[--btn-bg\:var\(--color-neutral-600\)\] {
    &:where(.dark, .dark *) {
      --btn-bg: var(--color-neutral-600);
    }
  }
  .dark\:\[--btn-bg\:var\(--color-neutral-800\)\] {
    &:where(.dark, .dark *) {
      --btn-bg: var(--color-neutral-800);
    }
  }
  .dark\:\[--btn-bg\:white\] {
    &:where(.dark, .dark *) {
      --btn-bg: white;
    }
  }
  .dark\:\[--btn-hover-overlay\:var\(--color-neutral-950\)\]\/5 {
    &:where(.dark, .dark *) {
      --btn-hover-overlay: color-mix(in srgb, oklch(14.5% 0 0) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-hover-overlay: color-mix(in oklab, var(--color-neutral-950) 5%, transparent);
      }
    }
  }
  .dark\:\[--btn-hover-overlay\:var\(--color-white\)\]\/5 {
    &:where(.dark, .dark *) {
      --btn-hover-overlay: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-hover-overlay: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .dark\:\[--btn-icon\:var\(--color-neutral-500\)\] {
    &:where(.dark, .dark *) {
      --btn-icon: var(--color-neutral-500);
    }
  }
  .dark\:\[--checkbox-check\:var\(--color-neutral-900\)\] {
    &:where(.dark, .dark *) {
      --checkbox-check: var(--color-neutral-900);
    }
  }
  .dark\:\[--checkbox-checked-bg\:var\(--color-neutral-600\)\] {
    &:where(.dark, .dark *) {
      --checkbox-checked-bg: var(--color-neutral-600);
    }
  }
  .dark\:\[--checkbox-checked-bg\:var\(--color-white\)\] {
    &:where(.dark, .dark *) {
      --checkbox-checked-bg: var(--color-white);
    }
  }
  .dark\:\[--checkbox-checked-border\:var\(--color-neutral-950\)\]\/15 {
    &:where(.dark, .dark *) {
      --checkbox-checked-border: color-mix(in srgb, oklch(14.5% 0 0) 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --checkbox-checked-border: color-mix(in oklab, var(--color-neutral-950) 15%, transparent);
      }
    }
  }
  .dark\:\[--form-bg\:var\(--color-neutral-800\)\] {
    &:where(.dark, .dark *) {
      --form-bg: var(--color-neutral-800);
    }
  }
  .dark\:\[--radio-checked-bg\:var\(--color-neutral-600\)\] {
    &:where(.dark, .dark *) {
      --radio-checked-bg: var(--color-neutral-600);
    }
  }
  .dark\:\[--radio-checked-bg\:var\(--color-white\)\] {
    &:where(.dark, .dark *) {
      --radio-checked-bg: var(--color-white);
    }
  }
  .dark\:\[--radio-checked-border\:var\(--color-neutral-950\)\]\/15 {
    &:where(.dark, .dark *) {
      --radio-checked-border: color-mix(in srgb, oklch(14.5% 0 0) 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --radio-checked-border: color-mix(in oklab, var(--color-neutral-950) 15%, transparent);
      }
    }
  }
  .dark\:\[--radio-checked-indicator\:var\(--color-neutral-900\)\] {
    &:where(.dark, .dark *) {
      --radio-checked-indicator: var(--color-neutral-900);
    }
  }
  .dark\:\[--switch-bg-ring\:transparent\] {
    &:where(.dark, .dark *) {
      --switch-bg-ring: transparent;
    }
  }
  .dark\:\[--switch-bg-ring\:var\(--color-white\)\]\/15 {
    &:where(.dark, .dark *) {
      --switch-bg-ring: color-mix(in srgb, #fff 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --switch-bg-ring: color-mix(in oklab, var(--color-white) 15%, transparent);
      }
    }
  }
  .dark\:\[--switch-bg\:var\(--color-white\)\] {
    &:where(.dark, .dark *) {
      --switch-bg: var(--color-white);
    }
  }
  .dark\:\[--switch-bg\:var\(--color-white\)\]\/25 {
    &:where(.dark, .dark *) {
      --switch-bg: color-mix(in srgb, #fff 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --switch-bg: color-mix(in oklab, var(--color-white) 25%, transparent);
      }
    }
  }
  .dark\:\[--switch-ring\:transparent\] {
    &:where(.dark, .dark *) {
      --switch-ring: transparent;
    }
  }
  .dark\:\[--switch-ring\:var\(--color-neutral-700\)\]\/90 {
    &:where(.dark, .dark *) {
      --switch-ring: color-mix(in srgb, rgb(55, 65, 81) 90%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --switch-ring: color-mix(in oklab, var(--color-neutral-700) 90%, transparent);
      }
    }
  }
  .dark\:\[--switch\:var\(--color-neutral-900\)\] {
    &:where(.dark, .dark *) {
      --switch: var(--color-neutral-900);
    }
  }
  .dark\:ring-inset {
    &:where(.dark, .dark *) {
      --tw-ring-inset: inset;
    }
  }
  .dark\:\*\:bg-neutral-800 {
    &:where(.dark, .dark *) {
      :is(& > *) {
        background-color: var(--color-neutral-800);
      }
    }
  }
  .dark\:\*\:text-white {
    &:where(.dark, .dark *) {
      :is(& > *) {
        color: var(--color-white);
      }
    }
  }
  .dark\:group-hover\:text-neutral-100 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-neutral-100);
        }
      }
    }
  }
  .dark\:group-hover\:text-neutral-200 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-neutral-200);
        }
      }
    }
  }
  .dark\:group-hover\:text-neutral-300 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-neutral-300);
        }
      }
    }
  }
  .dark\:group-hover\:text-neutral-800 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-neutral-800);
        }
      }
    }
  }
  .dark\:group-data-active\:border-white\/20 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-active] *) {
        border-color: color-mix(in srgb, #fff 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-checked\:border-white\/5 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-checked] *) {
        border-color: color-mix(in srgb, #fff 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
        }
      }
    }
  }
  .dark\:group-data-checked\:bg-\(--checkbox-checked-bg\) {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-checked] *) {
        background-color: var(--checkbox-checked-bg);
      }
    }
  }
  .dark\:group-data-checked\:bg-\(--radio-checked-bg\) {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-checked] *) {
        background-color: var(--radio-checked-bg);
      }
    }
  }
  .dark\:group-data-disabled\:border-white\/15 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-disabled] *) {
        border-color: color-mix(in srgb, #fff 15%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 15%, transparent);
        }
      }
    }
  }
  .dark\:group-data-disabled\:border-white\/20 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-disabled] *) {
        border-color: color-mix(in srgb, #fff 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-disabled\:bg-white\/\[2\.5\%\] {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-disabled] *) {
        background-color: color-mix(in srgb, #fff 2.5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 2.5%, transparent);
        }
      }
    }
  }
  .dark\:group-data-disabled\:\[--checkbox-check\:var\(--color-white\)\]\/50 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-disabled] *) {
        --checkbox-check: color-mix(in srgb, #fff 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --checkbox-check: color-mix(in oklab, var(--color-white) 50%, transparent);
        }
      }
    }
  }
  .dark\:group-data-disabled\:\[--radio-checked-indicator\:var\(--color-white\)\]\/50 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-disabled] *) {
        --radio-checked-indicator: color-mix(in srgb, #fff 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --radio-checked-indicator: color-mix(in oklab, var(--color-white) 50%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:border-white\/20 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        border-color: color-mix(in srgb, #fff 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:border-white\/30 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        border-color: color-mix(in srgb, #fff 30%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 30%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-amber-400\/15 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(82.8% 0.189 84.429) 15%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-amber-400) 15%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-blue-500\/25 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(62.3% 0.214 259.815) 25%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-blue-500) 25%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-cyan-400\/15 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(78.9% 0.154 211.53) 15%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-cyan-400) 15%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-emerald-500\/20 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(69.6% 0.17 162.48) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-emerald-500) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-fuchsia-400\/20 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(74% 0.238 322.16) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-fuchsia-400) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-green-500\/20 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(72.3% 0.219 149.579) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-green-500) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-indigo-500\/20 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(58.5% 0.233 277.117) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-indigo-500) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-lime-400\/15 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(84.1% 0.238 128.85) 15%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-lime-400) 15%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-orange-500\/20 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(70.5% 0.213 47.604) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-orange-500) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-pink-400\/20 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(71.8% 0.202 349.761) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-pink-400) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-purple-500\/20 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(62.7% 0.265 303.9) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-purple-500) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-red-500\/20 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-red-500) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-rose-400\/20 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(71.2% 0.194 13.428) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-rose-400) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-sky-500\/20 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(68.5% 0.169 237.323) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-sky-500) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-teal-500\/20 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(70.4% 0.14 182.503) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-teal-500) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-violet-500\/20 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(60.6% 0.25 292.717) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-violet-500) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-white\/10 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, #fff 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-yellow-400\/15 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(85.2% 0.199 91.936) 15%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-yellow-400) 15%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:stroke-zinc-300 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        stroke: var(--color-zinc-300);
      }
    }
  }
  .dark\:group-data-hover\:\[--radio-indicator\:var\(--color-neutral-700\)\] {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        --radio-indicator: var(--color-neutral-700);
      }
    }
  }
  .dark\:group-data-hover\:group-data-checked\:border-white\/5 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        &:is(:where(.group)[data-checked] *) {
          border-color: color-mix(in srgb, #fff 5%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
          }
        }
      }
    }
  }
  .dark\:group-data-hover\:group-data-checked\:\[--radio-indicator\:var\(--radio-checked-indicator\)\] {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-hover] *) {
        &:is(:where(.group)[data-checked] *) {
          --radio-indicator: var(--radio-checked-indicator);
        }
      }
    }
  }
  .dark\:group-data-invalid\:border-red-600 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-invalid] *) {
        border-color: var(--color-red-600);
      }
    }
  }
  .dark\:before\:hidden {
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        display: none;
      }
    }
  }
  .dark\:before\:bg-white\/10 {
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        background-color: color-mix(in srgb, #fff 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
      }
    }
  }
  .dark\:after\:-inset-px {
    &:where(.dark, .dark *) {
      &::after {
        content: var(--tw-content);
        inset: -1px;
      }
    }
  }
  .dark\:after\:hidden {
    &:where(.dark, .dark *) {
      &::after {
        content: var(--tw-content);
        display: none;
      }
    }
  }
  .dark\:after\:rounded-\[0\.3125rem\] {
    &:where(.dark, .dark *) {
      &::after {
        content: var(--tw-content);
        border-radius: 0.3125rem;
      }
    }
  }
  .dark\:after\:rounded-full {
    &:where(.dark, .dark *) {
      &::after {
        content: var(--tw-content);
        border-radius: calc(infinity * 1px);
      }
    }
  }
  .dark\:group-data-checked\:after\:block {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-checked] *) {
        &::after {
          content: var(--tw-content);
          display: block;
        }
      }
    }
  }
  .dark\:group-data-checked\:group-data-disabled\:after\:hidden {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-checked] *) {
        &:is(:where(.group)[data-disabled] *) {
          &::after {
            content: var(--tw-content);
            display: none;
          }
        }
      }
    }
  }
  .dark\:even\:bg-white\/\[2\.5\%\] {
    &:where(.dark, .dark *) {
      &:nth-child(even) {
        background-color: color-mix(in srgb, #fff 2.5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 2.5%, transparent);
        }
      }
    }
  }
  .dark\:focus-within\:bg-white\/\[2\.5\%\] {
    &:where(.dark, .dark *) {
      &:focus-within {
        background-color: color-mix(in srgb, #fff 2.5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 2.5%, transparent);
        }
      }
    }
  }
  .dark\:hover\:border-\[\#0480ea\]\/50 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: color-mix(in oklab, #0480ea 50%, transparent);
        }
      }
    }
  }
  .dark\:hover\:border-neutral-500 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-neutral-500);
        }
      }
    }
  }
  .dark\:hover\:border-neutral-600 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-neutral-600);
        }
      }
    }
  }
  .dark\:hover\:border-primary-600 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-primary-600);
        }
      }
    }
  }
  .dark\:hover\:bg-gray-700 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-700);
        }
      }
    }
  }
  .dark\:hover\:bg-neutral-700 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-neutral-700);
        }
      }
    }
  }
  .dark\:hover\:bg-neutral-800 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-neutral-800);
        }
      }
    }
  }
  .dark\:hover\:bg-neutral-900\/40 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, rgb(17, 24, 39) 40%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral-900) 40%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-primary-700 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-primary-700);
        }
      }
    }
  }
  .dark\:hover\:bg-white {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-white);
        }
      }
    }
  }
  .dark\:hover\:bg-white\/5 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, #fff 5%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-white\/\[2\.5\%\] {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, #fff 2.5%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white) 2.5%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:text-\[\#0480ea\] {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: #0480ea;
        }
      }
    }
  }
  .dark\:hover\:text-neutral-200 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-neutral-200);
        }
      }
    }
  }
  .dark\:hover\:text-neutral-400 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-neutral-400);
        }
      }
    }
  }
  .dark\:hover\:text-neutral-900 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-neutral-900);
        }
      }
    }
  }
  .dark\:hover\:text-primary-400 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-primary-400);
        }
      }
    }
  }
  .dark\:hover\:text-white {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-white);
        }
      }
    }
  }
  .dark\:focus\:ring-primary-600\/25 {
    &:where(.dark, .dark *) {
      &:focus {
        --tw-ring-color: color-mix(in srgb, rgb(3, 105, 192) 25%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--color-primary-600) 25%, transparent);
        }
      }
    }
  }
  .dark\:focus\:ring-offset-0 {
    &:where(.dark, .dark *) {
      &:focus {
        --tw-ring-offset-width: 0px;
        --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
      }
    }
  }
  .dark\:data-active\:bg-white\/5 {
    &:where(.dark, .dark *) {
      &[data-active] {
        background-color: color-mix(in srgb, #fff 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
        }
      }
    }
  }
  .dark\:data-active\:bg-white\/10 {
    &:where(.dark, .dark *) {
      &[data-active] {
        background-color: color-mix(in srgb, #fff 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
      }
    }
  }
  .dark\:data-active\:\[--btn-icon\:var\(--color-neutral-400\)\] {
    &:where(.dark, .dark *) {
      &[data-active] {
        --btn-icon: var(--color-neutral-400);
      }
    }
  }
  .dark\:data-checked\:bg-\(--switch-bg\) {
    &:where(.dark, .dark *) {
      &[data-checked] {
        background-color: var(--switch-bg);
      }
    }
  }
  .dark\:data-checked\:bg-neutral-200 {
    &:where(.dark, .dark *) {
      &[data-checked] {
        background-color: var(--color-neutral-200);
      }
    }
  }
  .dark\:data-checked\:text-neutral-900 {
    &:where(.dark, .dark *) {
      &[data-checked] {
        color: var(--color-neutral-900);
      }
    }
  }
  .dark\:data-checked\:ring-\(--switch-bg-ring\) {
    &:where(.dark, .dark *) {
      &[data-checked] {
        --tw-ring-color: var(--switch-bg-ring);
      }
    }
  }
  .dark\:data-disabled\:border-white\/15 {
    &:where(.dark, .dark *) {
      &[data-disabled] {
        border-color: color-mix(in srgb, #fff 15%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 15%, transparent);
        }
      }
    }
  }
  .dark\:data-disabled\:bg-white\/15 {
    &:where(.dark, .dark *) {
      &[data-disabled] {
        background-color: color-mix(in srgb, #fff 15%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 15%, transparent);
        }
      }
    }
  }
  .dark\:data-disabled\:bg-white\/\[2\.5\%\] {
    &:where(.dark, .dark *) {
      &[data-disabled] {
        background-color: color-mix(in srgb, #fff 2.5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 2.5%, transparent);
        }
      }
    }
  }
  .dark\:data-disabled\:data-checked\:bg-white\/15 {
    &:where(.dark, .dark *) {
      &[data-disabled] {
        &[data-checked] {
          background-color: color-mix(in srgb, #fff 15%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white) 15%, transparent);
          }
        }
      }
    }
  }
  .dark\:data-disabled\:data-checked\:ring-white\/15 {
    &:where(.dark, .dark *) {
      &[data-disabled] {
        &[data-checked] {
          --tw-ring-color: color-mix(in srgb, #fff 15%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            --tw-ring-color: color-mix(in oklab, var(--color-white) 15%, transparent);
          }
        }
      }
    }
  }
  .dark\:data-focus\:bg-neutral-700 {
    &:where(.dark, .dark *) {
      &[data-focus] {
        background-color: var(--color-neutral-700);
      }
    }
  }
  .dark\:data-hover\:border-white\/20 {
    &:where(.dark, .dark *) {
      &[data-hover] {
        border-color: color-mix(in srgb, #fff 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
      }
    }
  }
  .dark\:data-hover\:bg-white\/5 {
    &:where(.dark, .dark *) {
      &[data-hover] {
        background-color: color-mix(in srgb, #fff 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
        }
      }
    }
  }
  .dark\:data-hover\:bg-white\/10 {
    &:where(.dark, .dark *) {
      &[data-hover] {
        background-color: color-mix(in srgb, #fff 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
      }
    }
  }
  .dark\:data-hover\:ring-white\/25 {
    &:where(.dark, .dark *) {
      &[data-hover] {
        --tw-ring-color: color-mix(in srgb, #fff 25%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--color-white) 25%, transparent);
        }
      }
    }
  }
  .dark\:data-hover\:\[--btn-icon\:var\(--color-neutral-400\)\] {
    &:where(.dark, .dark *) {
      &[data-hover] {
        --btn-icon: var(--color-neutral-400);
      }
    }
  }
  .dark\:group-data-disabled\:data-hover\:border-white\/15 {
    &:where(.dark, .dark *) {
      &:is(:where(.group)[data-disabled] *) {
        &[data-hover] {
          border-color: color-mix(in srgb, #fff 15%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-white) 15%, transparent);
          }
        }
      }
    }
  }
  .dark\:data-hover\:group-data-invalid\:border-red-600 {
    &:where(.dark, .dark *) {
      &[data-hover] {
        &:is(:where(.group)[data-invalid] *) {
          border-color: var(--color-red-600);
        }
      }
    }
  }
  .dark\:data-hover\:data-checked\:ring-\(--switch-bg-ring\) {
    &:where(.dark, .dark *) {
      &[data-hover] {
        &[data-checked] {
          --tw-ring-color: var(--switch-bg-ring);
        }
      }
    }
  }
  .dark\:data-hover\:data-disabled\:border-white\/15 {
    &:where(.dark, .dark *) {
      &[data-hover] {
        &[data-disabled] {
          border-color: color-mix(in srgb, #fff 15%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-white) 15%, transparent);
          }
        }
      }
    }
  }
  .dark\:data-invalid\:border-red-500 {
    &:where(.dark, .dark *) {
      &[data-invalid] {
        border-color: var(--color-red-500);
      }
    }
  }
  .dark\:data-invalid\:border-red-600 {
    &:where(.dark, .dark *) {
      &[data-invalid] {
        border-color: var(--color-red-600);
      }
    }
  }
  .dark\:data-invalid\:data-hover\:border-red-500 {
    &:where(.dark, .dark *) {
      &[data-invalid] {
        &[data-hover] {
          border-color: var(--color-red-500);
        }
      }
    }
  }
  .dark\:data-invalid\:data-hover\:border-red-600 {
    &:where(.dark, .dark *) {
      &[data-invalid] {
        &[data-hover] {
          border-color: var(--color-red-600);
        }
      }
    }
  }
  .dark\:data-selected\:bg-neutral-100 {
    &:where(.dark, .dark *) {
      &[data-selected] {
        background-color: var(--color-neutral-100);
      }
    }
  }
  .dark\:data-selected\:text-\[\#0480ea\] {
    &:where(.dark, .dark *) {
      &[data-selected] {
        color: #0480ea;
      }
    }
  }
  .dark\:data-selected\:text-neutral-100 {
    &:where(.dark, .dark *) {
      &[data-selected] {
        color: var(--color-neutral-100);
      }
    }
  }
  .dark\:data-selected\:text-neutral-900 {
    &:where(.dark, .dark *) {
      &[data-selected] {
        color: var(--color-neutral-900);
      }
    }
  }
  .dark\:\*\:data-\[slot\=icon\]\:fill-neutral-400 {
    &:where(.dark, .dark *) {
      :is(& > *) {
        &[data-slot="icon"] {
          fill: var(--color-neutral-400);
        }
      }
    }
  }
  .dark\:\*\:data-\[slot\=icon\]\:text-neutral-400 {
    &:where(.dark, .dark *) {
      :is(& > *) {
        &[data-slot="icon"] {
          color: var(--color-neutral-400);
        }
      }
    }
  }
  .dark\:\*\:data-\[slot\=icon\]\:text-zinc-400 {
    &:where(.dark, .dark *) {
      :is(& > *) {
        &[data-slot="icon"] {
          color: var(--color-zinc-400);
        }
      }
    }
  }
  .dark\:data-active\:\*\:data-\[slot\=icon\]\:fill-white {
    &:where(.dark, .dark *) {
      &[data-active] {
        :is(& > *) {
          &[data-slot="icon"] {
            fill: var(--color-white);
          }
        }
      }
    }
  }
  .dark\:data-hover\:\*\:data-\[slot\=icon\]\:fill-white {
    &:where(.dark, .dark *) {
      &[data-hover] {
        :is(& > *) {
          &[data-slot="icon"] {
            fill: var(--color-white);
          }
        }
      }
    }
  }
  .dark\:sm\:border-white\/5 {
    &:where(.dark, .dark *) {
      @media (width >= 40rem) {
        border-color: color-mix(in srgb, #fff 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
        }
      }
    }
  }
  .sm\:dark\:border-white\/5 {
    @media (width >= 40rem) {
      &:where(.dark, .dark *) {
        border-color: color-mix(in srgb, #fff 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
        }
      }
    }
  }
  .forced-colors\:border-\[Canvas\] {
    @media (forced-colors: active) {
      border-color: Canvas;
    }
  }
  .forced-colors\:stroke-\[CanvasText\] {
    @media (forced-colors: active) {
      stroke: CanvasText;
    }
  }
  .forced-colors\:text-\[CanvasText\] {
    @media (forced-colors: active) {
      color: CanvasText;
    }
  }
  .forced-colors\:outline {
    @media (forced-colors: active) {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .forced-colors\:\[--btn-icon\:ButtonText\] {
    @media (forced-colors: active) {
      --btn-icon: ButtonText;
    }
  }
  .forced-colors\:\[--checkbox-check\:HighlightText\] {
    @media (forced-colors: active) {
      --checkbox-check: HighlightText;
    }
  }
  .forced-colors\:\[--checkbox-checked-bg\:Highlight\] {
    @media (forced-colors: active) {
      --checkbox-checked-bg: Highlight;
    }
  }
  .forced-colors\:\[--switch-bg\:Highlight\] {
    @media (forced-colors: active) {
      --switch-bg: Highlight;
    }
  }
  .forced-colors\:group-data-checked\:border-\[Highlight\] {
    @media (forced-colors: active) {
      &:is(:where(.group)[data-checked] *) {
        border-color: Highlight;
      }
    }
  }
  .forced-colors\:group-data-disabled\:\[--checkbox-check\:Highlight\] {
    @media (forced-colors: active) {
      &:is(:where(.group)[data-disabled] *) {
        --checkbox-check: Highlight;
      }
    }
  }
  .forced-colors\:data-focus\:bg-\[Highlight\] {
    @media (forced-colors: active) {
      &[data-focus] {
        background-color: Highlight;
      }
    }
  }
  .forced-colors\:data-focus\:text-\[HighlightText\] {
    @media (forced-colors: active) {
      &[data-focus] {
        color: HighlightText;
      }
    }
  }
  .forced-colors\:data-hover\:\[--btn-icon\:ButtonText\] {
    @media (forced-colors: active) {
      &[data-hover] {
        --btn-icon: ButtonText;
      }
    }
  }
  .forced-colors\:\*\:data-\[slot\=icon\]\:text-\[CanvasText\] {
    @media (forced-colors: active) {
      :is(& > *) {
        &[data-slot="icon"] {
          color: CanvasText;
        }
      }
    }
  }
  .forced-colors\:group-data-focus\/option\:\*\:data-\[slot\=icon\]\:text-\[Canvas\] {
    @media (forced-colors: active) {
      &:is(:where(.group\/option)[data-focus] *) {
        :is(& > *) {
          &[data-slot="icon"] {
            color: Canvas;
          }
        }
      }
    }
  }
  .dark\:forced-colors\:\[--checkbox-check\:HighlightText\] {
    &:where(.dark, .dark *) {
      @media (forced-colors: active) {
        --checkbox-check: HighlightText;
      }
    }
  }
  .dark\:forced-colors\:\[--checkbox-checked-bg\:Highlight\] {
    &:where(.dark, .dark *) {
      @media (forced-colors: active) {
        --checkbox-checked-bg: Highlight;
      }
    }
  }
  .dark\:forced-colors\:\[--switch-bg\:Highlight\] {
    &:where(.dark, .dark *) {
      @media (forced-colors: active) {
        --switch-bg: Highlight;
      }
    }
  }
  .dark\:forced-colors\:group-data-disabled\:\[--checkbox-check\:Highlight\] {
    &:where(.dark, .dark *) {
      @media (forced-colors: active) {
        &:is(:where(.group)[data-disabled] *) {
          --checkbox-check: Highlight;
        }
      }
    }
  }
  .\[\&_optgroup\]\:font-semibold {
    & optgroup {
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
    }
  }
  .\[\&\>\*\+\[data-slot\=control\]\]\:mt-6 {
    &>*+[data-slot=control] {
      margin-top: calc(var(--spacing) * 6);
    }
  }
  .\[\&\>\[data-slot\=control\]\+\[data-slot\=description\]\]\:mt-2 {
    &>[data-slot=control]+[data-slot=description] {
      margin-top: calc(var(--spacing) * 2);
    }
  }
  .\[\&\>\[data-slot\=control\]\+\[data-slot\=error\]\]\:mt-2 {
    &>[data-slot=control]+[data-slot=error] {
      margin-top: calc(var(--spacing) * 2);
    }
  }
  .\[\&\>\[data-slot\=description\]\+\[data-slot\=control\]\]\:mt-2 {
    &>[data-slot=description]+[data-slot=control] {
      margin-top: calc(var(--spacing) * 2);
    }
  }
  .\[\&\>\[data-slot\=label\]\+\[data-slot\=control\]\]\:mt-2 {
    &>[data-slot=label]+[data-slot=control] {
      margin-top: calc(var(--spacing) * 2);
    }
  }
  .\[\&\>\[data-slot\=label\]\+\[data-slot\=description\]\]\:mt-1 {
    &>[data-slot=label]+[data-slot=description] {
      margin-top: calc(var(--spacing) * 1);
    }
  }
  .\[\@media\(pointer\:fine\)\]\:hidden {
    @media (pointer:fine) {
      display: none;
    }
  }
}
@layer base {
  html {
    scroll-padding-top: 2rem;
  }
  body {
    -webkit-overflow-scrolling: touch;
  }
  @media (prefers-reduced-motion: no-preference) {
    ::-webkit-scrollbar {
      width: 8px;
    }
    ::-webkit-scrollbar-track {
      background: transparent;
    }
    ::-webkit-scrollbar-thumb {
      background: rgba(0, 0, 0, 0.2);
      border-radius: 4px;
    }
    ::-webkit-scrollbar-thumb:hover {
      background: rgba(0, 0, 0, 0.3);
    }
  }
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-neutral-200);
    &:where(.dark, .dark *) {
      border-color: var(--color-neutral-700);
    }
  }
  button.gm-control-active.gm-fullscreen-control {
    border-radius: var(--radius-xl) !important;
  }
  [type='button'] {
    -webkit-appearance: none !important;
  }
  hr {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
    border-color: var(--color-neutral-200);
    &:where(.dark, .dark *) {
      border-color: var(--color-neutral-700);
    }
  }
  input[type='time']::-webkit-calendar-picker-indicator {
    border-radius: var(--radius-md);
    &:where(.dark, .dark *) {
      background-color: var(--color-neutral-500);
    }
  }
}
.react-datepicker {
  position: relative;
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  gap: calc(var(--spacing) * 10);
  @media (width >= 48rem) {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}
.react-datepicker__aria-live {
  display: none;
}
.react-datepicker__month-container {
  text-align: center;
}
.react-datepicker__current-month {
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  --tw-font-weight: var(--font-weight-semibold);
  font-weight: var(--font-weight-semibold);
  color: var(--color-gray-900);
  &:where(.dark, .dark *) {
    color: var(--color-gray-100);
  }
}
.react-datepicker__day-names {
  margin-top: calc(var(--spacing) * 6);
  display: grid;
  grid-template-columns: repeat(7, minmax(0, 1fr));
  text-align: center;
  font-size: var(--text-xs);
  line-height: var(--tw-leading, var(--text-xs--line-height));
  --tw-leading: calc(var(--spacing) * 6);
  line-height: calc(var(--spacing) * 6);
  color: var(--color-gray-500);
  &:where(.dark, .dark *) {
    color: var(--color-gray-400);
  }
}
.react-datepicker__month {
  margin-top: calc(var(--spacing) * 5);
}
.react-datepicker__week {
  margin-block: calc(var(--spacing) * 0.5);
  display: grid;
  grid-template-columns: repeat(7, minmax(0, 1fr));
}
.react-datepicker__day {
  display: flex;
  width: 100%;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  &:empty {
    cursor: auto;
  }
  &:empty {
    opacity: 0%;
  }
  &:empty {
    &:hover {
      @media (hover: hover) {
        background-color: transparent;
      }
    }
  }
  &:empty {
    background-color: transparent !important;
  }
  span {
    border-radius: calc(infinity * 1px);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(37.3% 0.034 259.733) 60%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-gray-700) 60%, transparent);
          }
        }
      }
    }
  }
}
.react-datepicker__day--in-range,
.react-datepicker__day--in-selecting-range {
  border-radius: 0;
  background-color: var(--color-gray-100);
  &:where(.dark, .dark *) {
    background-color: color-mix(in srgb, oklch(37.3% 0.034 259.733) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-700) 50%, transparent);
    }
  }
}
.react-datepicker__day--range-start {
  position: relative;
  z-index: 1;
  background-color: transparent;
  &::after {
    content: var(--tw-content);
    position: absolute;
  }
  &::after {
    content: var(--tw-content);
    inset-block: calc(var(--spacing) * 0);
  }
  &::after {
    content: var(--tw-content);
    inset-inline-end: calc(var(--spacing) * 0);
  }
  &::after {
    content: var(--tw-content);
    z-index: calc(10 * -1);
  }
  &::after {
    content: var(--tw-content);
    width: calc(1/2 * 100%);
  }
  &::after {
    content: var(--tw-content);
    background-color: var(--color-gray-100);
  }
  &:where(.dark, .dark *) {
    &::after {
      content: var(--tw-content);
      background-color: color-mix(in srgb, oklch(37.3% 0.034 259.733) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-700) 50%, transparent);
      }
    }
  }
}
.react-datepicker__day--range-end {
  position: relative;
  z-index: 1;
  background-color: transparent;
  &::after {
    content: var(--tw-content);
    position: absolute;
  }
  &::after {
    content: var(--tw-content);
    inset-block: calc(var(--spacing) * 0);
  }
  &::after {
    content: var(--tw-content);
    inset-inline-start: calc(var(--spacing) * 0);
  }
  &::after {
    content: var(--tw-content);
    z-index: calc(10 * -1);
  }
  &::after {
    content: var(--tw-content);
    width: calc(1/2 * 100%);
  }
  &::after {
    content: var(--tw-content);
    background-color: var(--color-gray-100);
  }
  &:where(.dark, .dark *) {
    &::after {
      content: var(--tw-content);
      background-color: color-mix(in srgb, oklch(37.3% 0.034 259.733) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-700) 50%, transparent);
      }
    }
  }
}
.react-datepicker__day--range-start,
.react-datepicker__day--selecting-range-start {
  border-top-left-radius: calc(infinity * 1px);
  border-bottom-left-radius: calc(infinity * 1px);
}
.react-datepicker__day--range-end,
.react-datepicker__day--selecting-range-end {
  border-top-right-radius: calc(infinity * 1px);
  border-bottom-right-radius: calc(infinity * 1px);
}
.react-datepicker__day--selected,
.react-datepicker__day--range-start,
.react-datepicker__day--range-end,
.react-datepicker__day--selecting-range-start,
.react-datepicker__day--selecting-range-end {
  span {
    border-radius: calc(infinity * 1px);
    background-color: var(--color-primary-500);
    color: var(--color-white);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary-500);
      }
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-primary-500);
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-primary-500);
        }
      }
    }
  }
}
.react-datepicker__day--disabled {
  color: var(--color-neutral-400);
  &:where(.dark, .dark *) {
    color: var(--color-neutral-500);
  }
}
.react-datepicker__day_span {
  display: flex;
  width: calc(var(--spacing) * 10);
  height: calc(var(--spacing) * 10);
  align-items: center;
  justify-content: center;
  border-radius: calc(infinity * 1px);
  @media (width >= 80rem) {
    width: calc(var(--spacing) * 11);
    height: calc(var(--spacing) * 11);
  }
}
.addListingDatePickerExclude {
  .react-datepicker__day--disabled {
    position: relative;
    border-radius: 0;
    background-color: var(--color-gray-100);
    &:empty {
      opacity: 0%;
    }
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(37.3% 0.034 259.733) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-700) 50%, transparent);
      }
    }
    &::after {
      content: '';
      position: absolute;
      display: block;
      height: 100%;
      rotate: 45deg;
      border-left-style: var(--tw-border-style);
      border-left-width: 1px;
      border-color: var(--color-neutral-300);
      &:where(.dark, .dark *) {
        border-color: var(--color-neutral-700);
      }
    }
  }
}
#headlessui-portal-root {
  font-size: var(--text-base);
  line-height: var(--tw-leading, var(--text-base--line-height));
  color: var(--color-neutral-900);
  &:where(.dark, .dark *) {
    color: var(--color-neutral-200);
  }
}
@keyframes myblur {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@layer base {
  [type='text'],input:where(:not([type])),[type='email'],[type='url'],[type='password'],[type='number'],[type='date'],[type='datetime-local'],[type='month'],[type='search'],[type='tel'],[type='time'],[type='week'],[multiple],textarea,select {
    appearance: none;
    background-color: #fff;
    border-color: oklch(55.1% 0.027 264.364);
    border-width: 1px;
    border-radius: 0px;
    padding-top: 0.5rem;
    padding-right: 0.75rem;
    padding-bottom: 0.5rem;
    padding-left: 0.75rem;
    font-size: 1rem;
    line-height: 1.5rem;
    --tw-shadow: 0 0 #0000;
    &:focus {
      outline: 2px solid transparent;
      outline-offset: 2px;
      --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-color: oklch(54.6% 0.245 262.881);
      --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
      --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
      box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      border-color: oklch(54.6% 0.245 262.881);
    }
  }
  input::placeholder,textarea::placeholder {
    color: oklch(55.1% 0.027 264.364);
    opacity: 1;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-date-and-time-value {
    min-height: 1.5em;
  }
  ::-webkit-date-and-time-value {
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit,::-webkit-datetime-edit-year-field,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field,::-webkit-datetime-edit-millisecond-field,::-webkit-datetime-edit-meridiem-field {
    padding-top: 0;
    padding-bottom: 0;
  }
  select {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='oklch(55.1%25 0.027 264.364)' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 0.5rem center;
    background-repeat: no-repeat;
    background-size: 1.5em 1.5em;
    padding-right: 2.5rem;
    print-color-adjust: exact;
  }
  [multiple],[size]:where(select:not([size="1"])) {
    background-image: initial;
    background-position: initial;
    background-repeat: unset;
    background-size: initial;
    padding-right: 0.75rem;
    print-color-adjust: unset;
  }
  [type='checkbox'],[type='radio'] {
    appearance: none;
    padding: 0;
    print-color-adjust: exact;
    display: inline-block;
    vertical-align: middle;
    background-origin: border-box;
    user-select: none;
    flex-shrink: 0;
    height: 1rem;
    width: 1rem;
    color: oklch(54.6% 0.245 262.881);
    background-color: #fff;
    border-color: oklch(55.1% 0.027 264.364);
    border-width: 1px;
    --tw-shadow: 0 0 #0000;
  }
  [type='checkbox'] {
    border-radius: 0px;
  }
  [type='radio'] {
    border-radius: 100%;
  }
  [type='checkbox']:focus,[type='radio']:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
    --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: oklch(54.6% 0.245 262.881);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  [type='checkbox']:checked,[type='radio']:checked {
    border-color: transparent;
    background-color: currentColor;
    background-size: 100% 100%;
    background-position: center;
    background-repeat: no-repeat;
  }
  [type='checkbox']:checked {
    background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
    @media (forced-colors: active) {
      appearance: auto;
    }
  }
  [type='radio']:checked {
    background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
    @media (forced-colors: active) {
      appearance: auto;
    }
  }
  [type='checkbox']:checked:hover,[type='checkbox']:checked:focus,[type='radio']:checked:hover,[type='radio']:checked:focus {
    border-color: transparent;
    background-color: currentColor;
  }
  [type='checkbox']:indeterminate {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
    border-color: transparent;
    background-color: currentColor;
    background-size: 100% 100%;
    background-position: center;
    background-repeat: no-repeat;
    @media (forced-colors: active) {
      appearance: auto;
    }
  }
  [type='checkbox']:indeterminate:hover,[type='checkbox']:indeterminate:focus {
    border-color: transparent;
    background-color: currentColor;
  }
  [type='file'] {
    background: unset;
    border-color: inherit;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-size: unset;
    line-height: inherit;
  }
  [type='file']:focus {
    outline: 1px solid ButtonText;
    outline: 1px auto -webkit-focus-ring-color;
  }
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-scroll-snap-strictness {
  syntax: "*";
  inherits: false;
  initial-value: proximity;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-divide-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-content: "";
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-scroll-snap-strictness: proximity;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-divide-y-reverse: 0;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-divide-x-reverse: 0;
    }
  }
}

/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[13].oneOf[2].use[1]!./node_modules/next/dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[13].oneOf[2].use[2]!./node_modules/next/font/google/target.css?{"path":"src/app/layout.tsx","import":"Poppins","arguments":[{"subsets":["latin"],"display":"swap","weight":["300","400","500","600","700"]}],"variableName":"poppins"} ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/* devanagari */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: url(/_next/static/media/6c177e25b87fd9cd-s.woff2) format('woff2');
  unicode-range: U+0900-097F, U+1CD0-1CF9, U+200C-200D, U+20A8, U+20B9, U+20F0, U+25CC, U+A830-A839, U+A8E0-A8FF, U+11B00-11B09;
}
/* latin-ext */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: url(/_next/static/media/6c9a125e97d835e1-s.woff2) format('woff2');
  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: url(/_next/static/media/4c285fdca692ea22-s.p.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
/* devanagari */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(/_next/static/media/034d78ad42e9620c-s.woff2) format('woff2');
  unicode-range: U+0900-097F, U+1CD0-1CF9, U+200C-200D, U+20A8, U+20B9, U+20F0, U+25CC, U+A830-A839, U+A8E0-A8FF, U+11B00-11B09;
}
/* latin-ext */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(/_next/static/media/fe0777f1195381cb-s.woff2) format('woff2');
  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(/_next/static/media/eafabf029ad39a43-s.p.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
/* devanagari */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(/_next/static/media/db911767852bc875-s.woff2) format('woff2');
  unicode-range: U+0900-097F, U+1CD0-1CF9, U+200C-200D, U+20A8, U+20B9, U+20F0, U+25CC, U+A830-A839, U+A8E0-A8FF, U+11B00-11B09;
}
/* latin-ext */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(/_next/static/media/f10b8e9d91f3edcb-s.woff2) format('woff2');
  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(/_next/static/media/8888a3826f4a3af4-s.p.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
/* devanagari */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 600;
  font-display: swap;
  src: url(/_next/static/media/29e7bbdce9332268-s.woff2) format('woff2');
  unicode-range: U+0900-097F, U+1CD0-1CF9, U+200C-200D, U+20A8, U+20B9, U+20F0, U+25CC, U+A830-A839, U+A8E0-A8FF, U+11B00-11B09;
}
/* latin-ext */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 600;
  font-display: swap;
  src: url(/_next/static/media/c3bc380753a8436c-s.woff2) format('woff2');
  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 600;
  font-display: swap;
  src: url(/_next/static/media/0484562807a97172-s.p.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
/* devanagari */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url(/_next/static/media/29a4aea02fdee119-s.woff2) format('woff2');
  unicode-range: U+0900-097F, U+1CD0-1CF9, U+200C-200D, U+20A8, U+20B9, U+20F0, U+25CC, U+A830-A839, U+A8E0-A8FF, U+11B00-11B09;
}
/* latin-ext */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url(/_next/static/media/a1386beebedccca4-s.woff2) format('woff2');
  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url(/_next/static/media/b957ea75a84b6ea7-s.p.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}@font-face {font-family: 'Poppins Fallback';src: local("Arial");ascent-override: 93.62%;descent-override: 31.21%;line-gap-override: 8.92%;size-adjust: 112.16%
}.__className_51684b {font-family: 'Poppins', 'Poppins Fallback';font-style: normal
}

/*!*************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[13].oneOf[10].use[2]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[13].oneOf[10].use[3]!./node_modules/rc-slider/assets/index.css ***!
  \*************************************************************************************************************************************************************************************************************************************************************************************/
.rc-slider {
  position: relative;
  width: 100%;
  height: 14px;
  padding: 5px 0;
  border-radius: 6px;
  touch-action: none;
  box-sizing: border-box;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
.rc-slider * {
  box-sizing: border-box;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
.rc-slider-rail {
  position: absolute;
  width: 100%;
  height: 4px;
  background-color: #e9e9e9;
  border-radius: 6px;
}
.rc-slider-track,
.rc-slider-tracks {
  position: absolute;
  height: 4px;
  background-color: #abe2fb;
  border-radius: 6px;
}
.rc-slider-track-draggable {
  z-index: 1;
  box-sizing: content-box;
  background-clip: content-box;
  border-top: 5px solid rgba(0, 0, 0, 0);
  border-bottom: 5px solid rgba(0, 0, 0, 0);
  transform: translateY(-5px);
}
.rc-slider-handle {
  position: absolute;
  z-index: 1;
  width: 14px;
  height: 14px;
  margin-top: -5px;
  background-color: #fff;
  border: solid 2px #96dbfa;
  border-radius: 50%;
  cursor: pointer;
  cursor: -webkit-grab;
  cursor: grab;
  opacity: 0.8;
  user-select: none;
  touch-action: pan-x;
}
.rc-slider-handle-dragging.rc-slider-handle-dragging.rc-slider-handle-dragging {
  border-color: #57c5f7;
  box-shadow: 0 0 0 5px #96dbfa;
}
.rc-slider-handle-dragging.rc-slider-handle-dragging.rc-slider-handle-dragging-delete {
  opacity: 0;
}
.rc-slider-handle:focus {
  outline: none;
  box-shadow: none;
}
.rc-slider-handle:focus-visible {
  border-color: #2db7f5;
  box-shadow: 0 0 0 3px #96dbfa;
}
.rc-slider-handle-click-focused:focus {
  border-color: #96dbfa;
  box-shadow: unset;
}
.rc-slider-handle:hover {
  border-color: #57c5f7;
}
.rc-slider-handle:active {
  border-color: #57c5f7;
  box-shadow: 0 0 5px #57c5f7;
  cursor: -webkit-grabbing;
  cursor: grabbing;
}
.rc-slider-mark {
  position: absolute;
  top: 18px;
  left: 0;
  width: 100%;
  font-size: 12px;
}
.rc-slider-mark-text {
  position: absolute;
  display: inline-block;
  color: #999;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
}
.rc-slider-mark-text-active {
  color: #666;
}
.rc-slider-step {
  position: absolute;
  width: 100%;
  height: 4px;
  background: transparent;
}
.rc-slider-dot {
  position: absolute;
  bottom: -2px;
  width: 8px;
  height: 8px;
  vertical-align: middle;
  background-color: #fff;
  border: 2px solid #e9e9e9;
  border-radius: 50%;
  cursor: pointer;
}
.rc-slider-dot-active {
  border-color: #96dbfa;
}
.rc-slider-dot-reverse {
  margin-right: -4px;
}
.rc-slider-disabled {
  background-color: #e9e9e9;
}
.rc-slider-disabled .rc-slider-track {
  background-color: #ccc;
}
.rc-slider-disabled .rc-slider-handle,
.rc-slider-disabled .rc-slider-dot {
  background-color: #fff;
  border-color: #ccc;
  box-shadow: none;
  cursor: not-allowed;
}
.rc-slider-disabled .rc-slider-mark-text,
.rc-slider-disabled .rc-slider-dot {
  cursor: not-allowed !important;
}
.rc-slider-vertical {
  width: 14px;
  height: 100%;
  padding: 0 5px;
}
.rc-slider-vertical .rc-slider-rail {
  width: 4px;
  height: 100%;
}
.rc-slider-vertical .rc-slider-track {
  bottom: 0;
  left: 5px;
  width: 4px;
}
.rc-slider-vertical .rc-slider-track-draggable {
  border-top: 0;
  border-right: 5px solid rgba(0, 0, 0, 0);
  border-bottom: 0;
  border-left: 5px solid rgba(0, 0, 0, 0);
  transform: translateX(-5px);
}
.rc-slider-vertical .rc-slider-handle {
  position: absolute;
  z-index: 1;
  margin-top: 0;
  margin-left: -5px;
  touch-action: pan-y;
}
.rc-slider-vertical .rc-slider-mark {
  top: 0;
  left: 18px;
  height: 100%;
}
.rc-slider-vertical .rc-slider-step {
  width: 4px;
  height: 100%;
}
.rc-slider-vertical .rc-slider-dot {
  margin-left: -2px;
}
.rc-slider-tooltip-zoom-down-enter,
.rc-slider-tooltip-zoom-down-appear {
  display: block !important;
  animation-duration: 0.3s;
  animation-fill-mode: both;
  animation-play-state: paused;
}
.rc-slider-tooltip-zoom-down-leave {
  display: block !important;
  animation-duration: 0.3s;
  animation-fill-mode: both;
  animation-play-state: paused;
}
.rc-slider-tooltip-zoom-down-enter.rc-slider-tooltip-zoom-down-enter-active,
.rc-slider-tooltip-zoom-down-appear.rc-slider-tooltip-zoom-down-appear-active {
  animation-name: rcSliderTooltipZoomDownIn;
  animation-play-state: running;
}
.rc-slider-tooltip-zoom-down-leave.rc-slider-tooltip-zoom-down-leave-active {
  animation-name: rcSliderTooltipZoomDownOut;
  animation-play-state: running;
}
.rc-slider-tooltip-zoom-down-enter,
.rc-slider-tooltip-zoom-down-appear {
  transform: scale(0, 0);
  animation-timing-function: cubic-bezier(0.23, 1, 0.32, 1);
}
.rc-slider-tooltip-zoom-down-leave {
  animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
}
@keyframes rcSliderTooltipZoomDownIn {
  0% {
    transform: scale(0, 0);
    transform-origin: 50% 100%;
    opacity: 0;
  }
  100% {
    transform: scale(1, 1);
    transform-origin: 50% 100%;
  }
}
@keyframes rcSliderTooltipZoomDownOut {
  0% {
    transform: scale(1, 1);
    transform-origin: 50% 100%;
  }
  100% {
    transform: scale(0, 0);
    transform-origin: 50% 100%;
    opacity: 0;
  }
}
.rc-slider-tooltip {
  position: absolute;
  top: -9999px;
  left: -9999px;
  visibility: visible;
  box-sizing: border-box;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
.rc-slider-tooltip * {
  box-sizing: border-box;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
.rc-slider-tooltip-hidden {
  display: none;
}
.rc-slider-tooltip-placement-top {
  padding: 4px 0 8px 0;
}
.rc-slider-tooltip-inner {
  min-width: 24px;
  height: 24px;
  padding: 6px 2px;
  color: #fff;
  font-size: 12px;
  line-height: 1;
  text-align: center;
  text-decoration: none;
  background-color: #6c6c6c;
  border-radius: 6px;
  box-shadow: 0 0 4px #d9d9d9;
}
.rc-slider-tooltip-arrow {
  position: absolute;
  width: 0;
  height: 0;
  border-color: transparent;
  border-style: solid;
}
.rc-slider-tooltip-placement-top .rc-slider-tooltip-arrow {
  bottom: 4px;
  left: 50%;
  margin-left: -4px;
  border-width: 4px 4px 0;
  border-top-color: #6c6c6c;
}

